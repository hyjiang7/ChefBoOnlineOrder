{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/RequiredMods.js\";\nimport React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\n\nfunction RequiredMods({\n  mods,\n  onchange\n}) {\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(Array(mods.length).fill(false));\n\n  function handleChange(event) {\n    var price = 0;\n    var newSelected = selected;\n    const modIdAdd = event.target.id;\n    const index = event.target.value;\n    var name = mods[index].Name;\n    var modIdRemove; //remove the unchecked value\n\n    const prev = newSelected.indexOf(true);\n\n    if (prev != -1) {\n      modIdRemove = mods[prev].ID;\n      price -= mods[prev].Price;\n      newSelected[prev] = false;\n    } //add the checked value\n\n\n    newSelected[index] = true;\n    price += mods[index].Price;\n    setSelected(newSelected);\n    onchange(modIdAdd, modIdRemove, price, name, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-2\",\n    children: mods.map((mod, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [index == 1 ? null : checked, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: mod.ID,\n        name: \"RequiredModifiers\",\n        value: index,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"d-inline-flex w-50 justify-content-between p-1\",\n        htmlFor: mod.ID,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(MenuItemName, {\n            name: mod.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(MenuItemPrice, {\n            price: mod.Price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\nexport default RequiredMods;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/RequiredMods.js"],"names":["React","useState","MenuItemName","MenuItemPrice","utility","RequiredMods","mods","onchange","selected","setSelected","Array","length","fill","handleChange","event","price","newSelected","modIdAdd","target","id","index","value","name","Name","modIdRemove","prev","indexOf","ID","Price","map","mod","checked"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAtB,EAA0C;AAGxC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAACS,KAAK,CAACJ,IAAI,CAACK,MAAN,CAAL,CAAmBC,IAAnB,CAAwB,KAAxB,CAAD,CAAxC;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,WAAW,GAAGR,QAAlB;AACA,UAAMS,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA9B;AACA,UAAMC,KAAK,GAAGN,KAAK,CAACI,MAAN,CAAaG,KAA3B;AACA,QAAIC,IAAI,GAAGhB,IAAI,CAACc,KAAD,CAAJ,CAAYG,IAAvB;AACA,QAAIC,WAAJ,CAN2B,CAQ3B;;AACA,UAAMC,IAAI,GAAGT,WAAW,CAACU,OAAZ,CAAoB,IAApB,CAAb;;AACA,QAAID,IAAI,IAAI,CAAC,CAAb,EAAgB;AACdD,MAAAA,WAAW,GAAGlB,IAAI,CAACmB,IAAD,CAAJ,CAAWE,EAAzB;AACAZ,MAAAA,KAAK,IAAIT,IAAI,CAACmB,IAAD,CAAJ,CAAWG,KAApB;AACAZ,MAAAA,WAAW,CAACS,IAAD,CAAX,GAAoB,KAApB;AACD,KAd0B,CAgB3B;;;AACAT,IAAAA,WAAW,CAACI,KAAD,CAAX,GAAqB,IAArB;AACAL,IAAAA,KAAK,IAAIT,IAAI,CAACc,KAAD,CAAJ,CAAYQ,KAArB;AAEAnB,IAAAA,WAAW,CAACO,WAAD,CAAX;AACAT,IAAAA,QAAQ,CAACU,QAAD,EAAWO,WAAX,EAAwBT,KAAxB,EAA+BO,IAA/B,EAAqC,IAArC,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cAOKhB,IAAI,CAACuB,GAAL,CAAS,CAACC,GAAD,EAAMV,KAAN,kBACR;AAAA,iBACOA,KAAK,IAAE,CAAP,GAAU,IAAV,GAAeW,OADtB,eAEE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,EAAE,EAAED,GAAG,CAACH,EAFV;AAGE,QAAA,IAAI,EAAC,mBAHP;AAIE,QAAA,KAAK,EAAEP,KAJT;AAKE,QAAA,QAAQ,EAAEP;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AACE,QAAA,SAAS,EAAC,gDADZ;AAEE,QAAA,OAAO,EAAEiB,GAAG,CAACH,EAFf;AAAA,gCAIE;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,iCACE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAEG,GAAG,CAACP;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,iCACE,QAAC,aAAD;AAAe,YAAA,KAAK,EAAEO,GAAG,CAACF;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA,OAAUR,KAAV;AAAA;AAAA;AAAA;AAAA,YADD;AAPL;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;AAED,eAAef,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\n\nfunction RequiredMods({ mods, onchange }) {\n\n\n  const [selected, setSelected] = useState(Array(mods.length).fill(false));\n\n  function handleChange(event) {\n    var price = 0;\n    var newSelected = selected;\n    const modIdAdd = event.target.id;\n    const index = event.target.value;\n    var name = mods[index].Name;\n    var modIdRemove;\n\n    //remove the unchecked value\n    const prev = newSelected.indexOf(true);\n    if (prev != -1) {\n      modIdRemove = mods[prev].ID;\n      price -= mods[prev].Price;\n      newSelected[prev] = false;\n    }\n\n    //add the checked value\n    newSelected[index] = true;\n    price += mods[index].Price;\n\n    setSelected(newSelected);\n    onchange(modIdAdd, modIdRemove, price, name, true);\n  }\n\n  return (\n    <div className=\"py-2\">\n      {/* {mods.length <= 0 ? null : (\n        <p className={`${utility.fontSizeSmall}`}> Required Selections</p>\n      )} */}\n\n      {/* <p className={`${utility.fontSizeSmall}`}> Required Selections</p> */}\n    \n        {mods.map((mod, index) => (\n          <div key={index}>\n                {index==1? null:checked}\n            <input\n              type=\"radio\"\n              id={mod.ID}\n              name=\"RequiredModifiers\"\n              value={index}\n              onChange={handleChange}\n              \n            />\n            <label\n              className=\"d-inline-flex w-50 justify-content-between p-1\"\n              htmlFor={mod.ID}\n            >\n              <div className=\"\">\n                <MenuItemName name={mod.Name} />\n              </div>\n              <div className=\"\">\n                <MenuItemPrice price={mod.Price} />\n              </div>\n            </label>\n          </div>\n        ))}\n   \n    </div>\n  );\n}\n\nexport default RequiredMods;\n"]},"metadata":{},"sourceType":"module"}