{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/items/[id].js\";\nimport React, { useState } from \"react\";\nimport OptionalMods from \"../../../components/OptionalMods\";\nimport RequiredMods from \"../../../components/RequiredMods\";\nimport Link from \"next/link\";\nimport { Button, Card, ListGroup, ListGroupitem } from \"react-bootstrap\";\nimport utility from \"../../../styles/utility.module.css\";\nimport MenuItemDes from \"../../../components/MenuItemDes\";\nimport MenuItemName from \"../../../components/MenuItemName\";\nimport MenuItemPrice from \"../../../components/MenuItemPrice\"; //set state\n//use effect upon individual price change\n//no need to use global state \n//item for state needs to include item subtotal price\n\nconst itemDetail = ({\n  item\n}) => {\n  const priceInit = item.item[2];\n  const {\n    0: itemTotal,\n    1: setItemTotal\n  } = useState(priceInit); // const [modsSelected, setSelectedMod] = useState(Array( + ).fill(false))\n\n  const {\n    0: optModsSelected,\n    1: setOpMods\n  } = useState(item.modifiers.length);\n  const {\n    0: reqModsSelected,\n    1: setReqMods\n  } = useState(item.reqModifiers.length);\n\n  const handleOptModChange = (selectedMods, price) => {\n    setItemTotal(price + itemTotal);\n  };\n\n  const handleReqModChange = (selectedMods, price) => {\n    setItemTotal(price + itemTotal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-2 px-3 col col-md-8 col-lg-6  m-auto justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/routes/pickup\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `${utility.fontSizeMedium} far fa-arrow-circle-left `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${utility.fontSizeMedium}`,\n        children: /*#__PURE__*/_jsxDEV(MenuItemName, {\n          name: item.item[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItemDes, {\n        des: item.item[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItemPrice, {\n        price: item.item[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RequiredMods, {\n        mods: item.reqModifiers,\n        onchange: handlePriceChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OptionalMods, {\n        mods: item.modifiers,\n        onchange: handlePriceChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" px-3 row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        className: \"col col-md-6\",\n        children: [\"Add to Cart $ \", itemTotal.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getServerSideProps({\n  params: {\n    id\n  }\n}) {\n  const res = await fetch(`http://localhost:5001/details/${id}`);\n  const item = await res.json();\n  console.log(\"required mods: \\n\" + item.reqModifiers); // server side rendering\n\n  return {\n    props: {\n      item\n    } // will be passed to the page component as props\n\n  };\n}\nexport default itemDetail;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/items/[id].js"],"names":["React","useState","OptionalMods","RequiredMods","Link","Button","Card","ListGroup","ListGroupitem","utility","MenuItemDes","MenuItemName","MenuItemPrice","itemDetail","item","priceInit","itemTotal","setItemTotal","optModsSelected","setOpMods","modifiers","length","reqModsSelected","setReqMods","reqModifiers","handleOptModChange","selectedMods","price","handleReqModChange","fontSizeMedium","handlePriceChange","toFixed","getServerSideProps","params","id","res","fetch","json","console","log","props"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport OptionalMods from \"../../../components/OptionalMods\";\nimport RequiredMods from \"../../../components/RequiredMods\";\nimport Link from \"next/link\";\nimport { Button, Card, ListGroup, ListGroupitem } from \"react-bootstrap\";\nimport utility from \"../../../styles/utility.module.css\";\nimport MenuItemDes from \"../../../components/MenuItemDes\";\nimport MenuItemName from \"../../../components/MenuItemName\";\nimport MenuItemPrice from \"../../../components/MenuItemPrice\";\n\n\n\n//set state\n//use effect upon individual price change\n//no need to use global state \n//item for state needs to include item subtotal price\nconst itemDetail = ({ item }) => {\n\n  const priceInit = item.item[2]\n  const [itemTotal, setItemTotal] = useState(priceInit);\n  // const [modsSelected, setSelectedMod] = useState(Array( + ).fill(false))\n  const [optModsSelected, setOpMods] = useState(item.modifiers.length);\n  const [reqModsSelected, setReqMods] = useState(item.reqModifiers.length);\n\n\n\n  const handleOptModChange = (selectedMods, price) =>\n  {\n\n\n\n    setItemTotal(price + itemTotal);\n  }\n\n  const handleReqModChange = (selectedMods, price) =>\n  {\n\n\n    setItemTotal(price + itemTotal);\n  }\n\n  return (\n    <div className=\"p-2 px-3 col col-md-8 col-lg-6  m-auto justify-content-center\">\n      <Link href=\"/routes/pickup\">\n        <i\n          className={`${utility.fontSizeMedium} far fa-arrow-circle-left `}\n        ></i>\n      </Link>\n      <div className=\"\">\n        <div className={`${utility.fontSizeMedium}`}>\n          <MenuItemName name={item.item[1]} />\n        </div>\n        <MenuItemDes des={item.item[3]} />\n        <MenuItemPrice price={item.item[2]} />\n\n        <RequiredMods mods={item.reqModifiers} onchange={handlePriceChange}/>\n\n        <OptionalMods mods={item.modifiers} onchange={handlePriceChange}/>\n      </div>\n      <div className=\" px-3 row justify-content-center\">\n        <Button variant=\"dark\" className=\"col col-md-6\">\n          Add to Cart $ {itemTotal.toFixed(2)}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\n\n\nexport async function getServerSideProps({ params: { id } }) {\n  const res = await fetch(`http://localhost:5001/details/${id}`);\n  const item = await res.json();\n\n\n  console.log(\"required mods: \\n\" + item.reqModifiers)\n\n  // server side rendering\n  return {\n    props: { item }, // will be passed to the page component as props\n  };\n}\n\nexport default itemDetail;\n"]},"metadata":{},"sourceType":"module"}