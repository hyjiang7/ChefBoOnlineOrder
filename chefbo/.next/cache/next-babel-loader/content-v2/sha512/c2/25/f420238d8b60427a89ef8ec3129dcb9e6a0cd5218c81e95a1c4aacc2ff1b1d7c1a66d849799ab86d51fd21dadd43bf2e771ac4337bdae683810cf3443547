{"ast":null,"code":"import _regeneratorRuntime from \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/MenuItemCate.js\",\n    _this = this;\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport MenuItem from './MenuItem';\nimport { Accordion, Card } from \"react-bootstrap\";\n\nvar MenuItemCate = function MenuItemCate(_ref) {\n  var cate = _ref.cate,\n      menuItem = _ref.menuItem;\n  var items = menuItem[0];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      defaultActiveKey: cate,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n          as: Card.Header,\n          eventKey: cate,\n          children: cate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n          eventKey: \"0\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: items.map(function (item, index) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                item: item,\n                s: \"styles\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 29\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false);\n}; //useState/useEffect\n\n\n_c = MenuItemCate;\n\nvar getMenuItems = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cate) {\n    var url, item, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            item = [];\n\n            if (cate) {\n              url = 'http://localhost:5001/' + cate;\n            }\n\n            _context.next = 4;\n            return fetch(url).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              for (var i = 0; i < data.length; i++) {\n                item.push(data[i]);\n              } // console.log(item)\n\n\n              return item;\n            });\n\n          case 4:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getMenuItems(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nMenuItemCate.propTypes = {\n  cate: PropTypes.string\n};\nexport default MenuItemCate;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuItemCate\");","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/MenuItemCate.js"],"names":["PropTypes","useState","useEffect","MenuItem","Accordion","Card","MenuItemCate","cate","menuItem","items","Header","map","item","index","getMenuItems","url","fetch","then","response","json","data","i","length","push","propTypes","string"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SACIC,SADJ,EAEIC,IAFJ,QAGS,iBAHT;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAsB;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAEvC,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAD,CAAtB;AAEA,sBACI;AAAA,2BACA,QAAC,SAAD;AAAW,MAAA,gBAAgB,EAAED,IAA7B;AAAA,6BACI,QAAC,IAAD;AAAA,gCACI,QAAC,SAAD,CAAW,MAAX;AAAkB,UAAA,EAAE,EAAEF,IAAI,CAACK,MAA3B;AAAmC,UAAA,QAAQ,EAAEH,IAA7C;AAAA,oBACCA;AADD;AAAA;AAAA;AAAA;AAAA,iBADJ,eAII,QAAC,SAAD,CAAW,QAAX;AAAoB,UAAA,QAAQ,EAAC,GAA7B;AAAA,iCACA,QAAC,IAAD,CAAM,IAAN;AAAA,sBAEQE,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,kCAEN,QAAC,QAAD;AAAsB,gBAAA,IAAI,EAAED,IAA5B;AAAkC,gBAAA,CAAC,EAAE;AAArC,iBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,uBAFM;AAAA,aAAV;AAFR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,iBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAyBH,CA7BD,C,CA+BA;;;KA/BMP,Y;;AAiCN,IAAMQ,YAAY;AAAA,uEAAG,iBAAOP,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAGbK,YAAAA,IAHa,GAGN,EAHM;;AAKjB,gBAAGL,IAAH,EACA;AACIQ,cAAAA,GAAG,GAAG,2BAA2BR,IAAjC;AACH;;AARgB;AAAA,mBASGS,KAAK,CAACD,GAAD,CAAL,CACnBE,IADmB,CACd,UAAAC,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,aADM,EAEnBF,IAFmB,CAEd,UAAAG,IAAI,EAAI;AACV,mBAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,IAAI,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EACA;AACIT,gBAAAA,IAAI,CAACW,IAAL,CAAUH,IAAI,CAACC,CAAD,CAAd;AACH,eAJS,CAKV;;;AACA,qBAAOT,IAAP;AAEH,aAVmB,CATH;;AAAA;AASVQ,YAAAA,IATU;AAAA,6CAqBVA,IArBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZN,YAAY;AAAA;AAAA;AAAA,GAAlB;;AA2BAR,YAAY,CAACkB,SAAb,GAAyB;AACrBjB,EAAAA,IAAI,EAAEP,SAAS,CAACyB;AADK,CAAzB;AAIA,eAAenB,YAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react'\nimport MenuItem from './MenuItem'\nimport {\n    Accordion,\n    Card\n  } from \"react-bootstrap\";\n\nconst MenuItemCate = ({cate, menuItem}) => {\n    \n    const items = menuItem[0]\n\n    return  (\n        <>  \n        <Accordion defaultActiveKey={cate}>\n            <Card>\n                <Accordion.Toggle as={Card.Header} eventKey={cate}>\n                {cate}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                    {\n                        items.map((item, index) =>\n                        (\n                            <MenuItem key={index} item={item} s={\"styles\"}/>\n                        ))\n                    }\n\n                </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n            </Accordion>             \n     \n            \n        </>\n    )\n    \n}\n\n//useState/useEffect\n\nconst getMenuItems = async (cate) =>\n{\n    var url;\n    var item = []\n\n    if(cate)\n    {\n        url = 'http://localhost:5001/' + cate\n    }\n     const data = await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n        for(var i = 0; i < data.length; i++)\n        {\n            item.push(data[i])\n        }\n        // console.log(item)\n        return item;\n\n    })\n\n    return data;\n\n\n};\n\n\nMenuItemCate.propTypes = {\n    cate: PropTypes.string,\n}\n\nexport default MenuItemCate\n"]},"metadata":{},"sourceType":"module"}