{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/state/GlobalState.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createContext, useReducer, useEffect, useContext } from 'react';\nimport reducers from './Reducers';\nconst StoreContext = /*#__PURE__*/createContext();\n\nconst GlobalStore = props => {\n  const initialState = {\n    cart: []\n  };\n\n  const {\n    load\n  } = props,\n        rest = _objectWithoutProperties(props, [\"load\"]);\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducers, initialState); //using combine reducers alike\n\n  console.log(state);\n  console.log(dispatch);\n  const cart = state;\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, _objectSpread({\n    value: {\n      state,\n      dispatch\n    }\n  }, rest), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\nexport const useStore = () => useContext(StoreContext); //custom hook useStore\n\nexport default GlobalStore;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/state/GlobalState.js"],"names":["createContext","useReducer","useEffect","useContext","reducers","StoreContext","GlobalStore","props","initialState","cart","load","rest","state","dispatch","console","log","useStore"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGE,MAAMC,YAAY,gBAAGL,aAAa,EAAlC;;AAGA,MAAMM,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAE;AADW,GAArB;;AAGA,QAAM;AAACC,IAAAA;AAAD,MAAkBH,KAAxB;AAAA,QAAgBI,IAAhB,4BAAwBJ,KAAxB;;AAEA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,UAAU,CAACG,QAAD,EAAWI,YAAX,CAApC,CAN6B,CAMoC;;AACjEM,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMJ,IAAI,GAAGG,KAAb;AAGA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAA9B,KAAqDF,IAArD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAfC;;AAiBF,OAAO,MAAMK,QAAQ,GAAG,MAAMb,UAAU,CAACE,YAAD,CAAjC,C,CAAkD;;AACzD,eAAeC,WAAf","sourcesContent":["import { createContext, useReducer, useEffect, useContext } from 'react'\nimport reducers from './Reducers'\n\n\n  const StoreContext = createContext();\n\n\n  const GlobalStore = (props) => {\n    const initialState = { \n        cart: []\n    };\n    const {load, ...rest} = props;\n\n    const [state, dispatch] = useReducer(reducers, initialState);    //using combine reducers alike\n    console.log(state)\n    console.log(dispatch)\n    const cart = state;\n\n\n    return(\n        <StoreContext.Provider value={{state, dispatch}} {...rest}/> \n    );\n};\n\nexport const useStore = () => useContext(StoreContext);  //custom hook useStore\nexport default GlobalStore;"]},"metadata":{},"sourceType":"module"}