{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/cart.js\";\nimport store from \"../../state/GlobalState\";\nimport CartItem from \"../../components/CartItem\";\nimport { deleteFromCart } from \"../../state/Actions\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Button } from \"react-bootstrap\";\n\nconst cart = () => {\n  const {\n    Cart\n  } = store.getState();\n  const router = useRouter();\n  const {\n    0: cartTotal,\n    1: setCartTotal\n  } = useState(0); //get total the first time\n\n  useEffect(() => {\n    var temp = 0;\n    Cart.map((item, index) => {\n      console.log(\"temp in map \", temp);\n      temp += item.itemTotal;\n    });\n    console.log(temp);\n    setCartTotal(temp);\n  }, []);\n\n  const deleteCartItem = index => {\n    store.dispatch(deleteFromCart(index, Cart));\n    router.push(\"/routes/cart\");\n  };\n\n  if (Cart.length == 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" Cart is empty! Add items to begin order.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [Cart.map((item, index) => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: item,\n      index: index,\n      deleteHandle: deleteCartItem\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      children: [\"Checkout $\", cartTotal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default cart;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/cart.js"],"names":["store","CartItem","deleteFromCart","React","useState","useContext","useEffect","useRouter","Button","cart","Cart","getState","router","cartTotal","setCartTotal","temp","map","item","index","console","log","itemTotal","deleteCartItem","dispatch","push","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAGjB,QAAM;AAAEC,IAAAA;AAAF,MAAWV,KAAK,CAACW,QAAN,EAAjB;AACA,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAA,OAACM,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,CAAD,CAA1C,CALiB,CAOjB;;AAGEE,EAAAA,SAAS,CAAC,MAAK;AACX,QAAIS,IAAI,GAAG,CAAX;AACAL,IAAAA,IAAI,CAACM,GAAL,CAAS,CAACC,IAAD,EAAMC,KAAN,KAAe;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,IAA5B;AACAA,MAAAA,IAAI,IAAIE,IAAI,CAACI,SAAb;AACH,KAHD;AAIAF,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAD,IAAAA,YAAY,CAACC,IAAD,CAAZ;AACH,GARQ,EAQN,EARM,CAAT;;AAYF,QAAMO,cAAc,GAAIJ,KAAD,IAAW;AAChClB,IAAAA,KAAK,CAACuB,QAAN,CAAerB,cAAc,CAACgB,KAAD,EAAQR,IAAR,CAA7B;AACAE,IAAAA,MAAM,CAACY,IAAP,CAAY,cAAZ;AACD,GAHD;;AAKA,MAAId,IAAI,CAACe,MAAL,IAAe,CAAnB,EACE,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEF,sBACE;AAAA,eACGf,IAAI,CAACM,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR,QAAC,QAAD;AAEE,MAAA,IAAI,EAAED,IAFR;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,YAAY,EAAEI;AAJhB,OACOJ,KADP;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eASE,QAAC,MAAD;AAAA,+BAAmBL,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAaD,CA3CD;;AA6CA,eAAeJ,IAAf","sourcesContent":["import store from \"../../state/GlobalState\";\nimport CartItem from \"../../components/CartItem\";\nimport { deleteFromCart } from \"../../state/Actions\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Button } from \"react-bootstrap\";\n\nconst cart = () => {\n\n\n  const { Cart } = store.getState();\n  const router = useRouter();\n  const [cartTotal, setCartTotal] = useState(0);\n\n  //get total the first time\n\n    \n    useEffect(() =>{\n        var temp = 0;\n        Cart.map((item,index) =>{\n            console.log(\"temp in map \", temp)\n            temp += item.itemTotal\n        })\n        console.log(temp) \n        setCartTotal(temp)\n    }, [])\n\n\n\n  const deleteCartItem = (index) => {\n    store.dispatch(deleteFromCart(index, Cart));\n    router.push(\"/routes/cart\");\n  };\n\n  if (Cart.length == 0)\n    return <p> Cart is empty! Add items to begin order.</p>;\n\n  return (\n    <>\n      {Cart.map((item, index) => (\n        <CartItem\n          key={index}\n          item={item}\n          index={index}\n          deleteHandle={deleteCartItem}\n        ></CartItem>\n      ))}\n      <Button>Checkout ${cartTotal}</Button>\n    </>\n  );\n};\n\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}