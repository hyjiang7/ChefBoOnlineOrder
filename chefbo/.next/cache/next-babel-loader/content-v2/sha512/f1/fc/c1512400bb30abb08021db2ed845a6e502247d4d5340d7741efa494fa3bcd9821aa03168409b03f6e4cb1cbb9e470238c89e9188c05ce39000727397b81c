{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/RequiredMods.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\nvar RANDOMINDEX = 394;\n\nfunction RequiredMods(_ref) {\n  _s();\n\n  var _this = this;\n\n  var mods = _ref.mods,\n      onchange = _ref.onchange;\n  console.log(\"req mod on click\");\n\n  var _useState = useState(Array(mods.length).fill(false)),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  function handleChange(event) {\n    var price = 0;\n    var newSelected = selected;\n    var index = 394 - parseInt(event.target.id);\n    var modIdAdd = event.target.value;\n    var modIdRemove; //remove the unchecked value\n\n    var prev = newSelected.indexOf(true);\n\n    if (prev != -1) {\n      modIdRemove = mods[prev][0];\n      price -= mods[prev][2];\n      newSelected[prev] = false;\n    } //add the checked value\n\n\n    newSelected[index] = true;\n    price += mods[index][2];\n    setSelected(newSelected);\n    onchange(modIdAdd, modIdRemove, price);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"\".concat(utility.fontSizeSmall),\n      children: \" Required Selections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: mods.map(function (mod, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: RANDOMINDEX + index,\n            name: \"RequiredModifiers\",\n            value: mod[0],\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"d-inline-flex w-50 justify-content-between p-1\",\n            htmlFor: RANDOMINDEX + index,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(MenuItemName, {\n                name: mod[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(MenuItemPrice, {\n                price: mod[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RequiredMods, \"h/SpAG7IxGjgGM2QhOndyUYcfpU=\");\n\n_c = RequiredMods;\nexport default RequiredMods;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequiredMods\");","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/RequiredMods.js"],"names":["React","useState","MenuItemName","MenuItemPrice","utility","RANDOMINDEX","RequiredMods","mods","onchange","console","log","Array","length","fill","selected","setSelected","handleChange","event","price","newSelected","index","parseInt","target","id","modIdAdd","value","modIdRemove","prev","indexOf","fontSizeSmall","map","mod"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAGA,IAAMC,WAAW,GAAG,GAApB;;AAEA,SAASC,YAAT,OAA0C;AAAA;;AAAA;;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AADwC,kBAERT,QAAQ,CAACU,KAAK,CAACJ,IAAI,CAACK,MAAN,CAAL,CAAmBC,IAAnB,CAAwB,KAAxB,CAAD,CAFA;AAAA,MAEjCC,QAFiC;AAAA,MAEvBC,WAFuB;;AAIxC,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,WAAW,GAAGL,QAAlB;AACA,QAAMM,KAAK,GAAG,MAAOC,QAAQ,CAACJ,KAAK,CAACK,MAAN,CAAaC,EAAd,CAA7B;AACA,QAAMC,QAAQ,GAAGP,KAAK,CAACK,MAAN,CAAaG,KAA9B;AACA,QAAIC,WAAJ,CAL2B,CAO3B;;AACA,QAAMC,IAAI,GAAGR,WAAW,CAACS,OAAZ,CAAoB,IAApB,CAAb;;AACA,QAAID,IAAI,IAAI,CAAC,CAAb,EAAgB;AACdD,MAAAA,WAAW,GAAGnB,IAAI,CAACoB,IAAD,CAAJ,CAAW,CAAX,CAAd;AACAT,MAAAA,KAAK,IAAIX,IAAI,CAACoB,IAAD,CAAJ,CAAW,CAAX,CAAT;AACAR,MAAAA,WAAW,CAACQ,IAAD,CAAX,GAAoB,KAApB;AACD,KAb0B,CAe3B;;;AACAR,IAAAA,WAAW,CAACC,KAAD,CAAX,GAAqB,IAArB;AACAF,IAAAA,KAAK,IAAIX,IAAI,CAACa,KAAD,CAAJ,CAAY,CAAZ,CAAT;AAEAL,IAAAA,WAAW,CAACI,WAAD,CAAX;AACAX,IAAAA,QAAQ,CAACgB,QAAD,EAAWE,WAAX,EAAwBR,KAAxB,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BAKJ;AAAG,MAAA,SAAS,YAAKd,OAAO,CAACyB,aAAb,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALI,eAME;AAAA,gBACGtB,IAAI,CAACuB,GAAL,CAAS,UAACC,GAAD,EAAMX,KAAN;AAAA,4BACR;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,EAAE,EAAEf,WAAW,GAAGe,KAFpB;AAGE,YAAA,IAAI,EAAC,mBAHP;AAIE,YAAA,KAAK,EAAEW,GAAG,CAAC,CAAD,CAJZ;AAKE,YAAA,QAAQ,EAAEf;AALZ;AAAA;AAAA;AAAA;AAAA,mBADF,eAQE;AACE,YAAA,SAAS,EAAC,gDADZ;AAEE,YAAA,OAAO,EAAEX,WAAW,GAAGe,KAFzB;AAAA,oCAIE;AAAK,cAAA,SAAS,EAAC,EAAf;AAAA,qCACE,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAEW,GAAG,CAAC,CAAD;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAJF,eAOE;AAAK,cAAA,SAAS,EAAC,EAAf;AAAA,qCACE,QAAC,aAAD;AAAe,gBAAA,KAAK,EAAEA,GAAG,CAAC,CAAD;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF;AAAA,WAAUX,KAAV;AAAA;AAAA;AAAA;AAAA,iBADQ;AAAA,OAAT;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GA5DQd,Y;;KAAAA,Y;AA8DT,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\n\n\nconst RANDOMINDEX = 394;\n\nfunction RequiredMods({ mods, onchange }) {\n  console.log(\"req mod on click\")\n  const [selected, setSelected] = useState(Array(mods.length).fill(false));\n\n  function handleChange(event) {\n    var price = 0;\n    var newSelected = selected;\n    const index = 394 - (parseInt(event.target.id));\n    const modIdAdd = event.target.value;\n    var modIdRemove;\n\n    //remove the unchecked value\n    const prev = newSelected.indexOf(true);\n    if (prev != -1) {\n      modIdRemove = mods[prev][0];\n      price -= mods[prev][2];\n      newSelected[prev] = false;\n    }\n\n    //add the checked value\n    newSelected[index] = true;\n    price += mods[index][2];\n\n    setSelected(newSelected);\n    onchange(modIdAdd, modIdRemove, price);\n  }\n\n  return (\n    <div className=\"py-2\">\n      {/* {mods.length <= 0 ? null : (\n        <p className={`${utility.fontSizeSmall}`}> Required Selections</p>\n      )} */}\n\n<p className={`${utility.fontSizeSmall}`}> Required Selections</p>\n      <form>\n        {mods.map((mod, index) => (\n          <div key={index}>\n            <input\n              type=\"radio\"\n              id={RANDOMINDEX + index}\n              name=\"RequiredModifiers\"\n              value={mod[0]}\n              onChange={handleChange}\n            />\n            <label\n              className=\"d-inline-flex w-50 justify-content-between p-1\"\n              htmlFor={RANDOMINDEX + index}\n            >\n              <div className=\"\">\n                <MenuItemName name={mod[1]} />\n              </div>\n              <div className=\"\">\n                <MenuItemPrice price={mod[2]} />\n              </div>\n            </label>\n          </div>\n        ))}\n      </form>\n    </div>\n  );\n}\n\nexport default RequiredMods;\n"]},"metadata":{},"sourceType":"module"}