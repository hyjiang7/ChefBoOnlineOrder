{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/OptionalMods.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\nconst ADD = 1;\nconst REMOVE = -1;\n\nfunction OptionalMods({\n  mods,\n  onchange\n}) {\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(Array(mods.length).fill(false));\n\n  function handleChange(event) {\n    var type;\n    var factor;\n    var price;\n    const index = event.target.id;\n    const modId = selected[index] ? factor = REMOVE : factor = ADD;\n    let newSelected = selected;\n    newSelected[index] = event.target.checked;\n    setSelected(_objectSpread(_objectSpread({}, selected), {}, {\n      newSelected\n    }));\n    mods.forEach(i => {\n      if (i[0] == modId) price = i[2];\n    });\n    price += factor;\n    onchange(event.target.value, price);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-2\",\n    children: [mods.length <= 0 ? null : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `${utility.fontSizeSmall}`,\n      children: \" Optional Selections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 35\n    }, this), mods.map((mod, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: index,\n        name: \"OptionalModifiers\",\n        value: mod[0],\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"d-inline-flex w-50 justify-content-between p-1\",\n        htmlFor: mod[0],\n        children: [/*#__PURE__*/_jsxDEV(MenuItemName, {\n          name: mod[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItemPrice, {\n          price: mod[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\nexport default OptionalMods;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/OptionalMods.js"],"names":["React","useState","MenuItemName","MenuItemPrice","utility","ADD","REMOVE","OptionalMods","mods","onchange","selected","setSelected","Array","length","fill","handleChange","event","type","factor","price","index","target","id","modId","newSelected","checked","forEach","i","value","fontSizeSmall","map","mod"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,MAAMC,GAAG,GAAG,CAAZ;AACA,MAAMC,MAAM,GAAG,CAAC,CAAhB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAtB,EAA0C;AAIxC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAACW,KAAK,CAACJ,IAAI,CAACK,MAAN,CAAL,CAAmBC,IAAnB,CAAwB,KAAxB,CAAD,CAAxC;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EACA;AACE,QAAIC,IAAJ;AACA,QAAIC,MAAJ;AACA,QAAIC,KAAJ;AACA,UAAMC,KAAK,GAAGJ,KAAK,CAACK,MAAN,CAAaC,EAA3B;AACA,UAAMC,KAAK,GAEXb,QAAQ,CAACU,KAAD,CAAR,GAAkBF,MAAM,GAAGZ,MAA3B,GAAoCY,MAAM,GAAGb,GAF7C;AAIA,QAAImB,WAAW,GAAGd,QAAlB;AACAc,IAAAA,WAAW,CAACJ,KAAD,CAAX,GAAqBJ,KAAK,CAACK,MAAN,CAAaI,OAAlC;AACAd,IAAAA,WAAW,iCAAMD,QAAN;AAAgBc,MAAAA;AAAhB,OAAX;AAEAhB,IAAAA,IAAI,CAACkB,OAAL,CAAcC,CAAD,IACb;AACI,UAAGA,CAAC,CAAC,CAAD,CAAD,IAAQJ,KAAX,EACEJ,KAAK,GAAGQ,CAAC,CAAC,CAAD,CAAT;AACL,KAJD;AAKAR,IAAAA,KAAK,IAAID,MAAT;AAEAT,IAAAA,QAAQ,CAACO,KAAK,CAACK,MAAN,CAAaO,KAAd,EAAqBT,KAArB,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eAGKX,IAAI,CAACK,MAAL,IAAc,CAAd,GAAkB,IAAlB,gBAAyB;AAAG,MAAA,SAAS,EAAG,GAAET,OAAO,CAACyB,aAAc,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAH9B,EAKGrB,IAAI,CAACsB,GAAL,CAAS,CAACC,GAAD,EAAMX,KAAN,kBACR;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,EAAE,EAAEA,KAA3B;AAAkC,QAAA,IAAI,EAAC,mBAAvC;AAA2D,QAAA,KAAK,EAAEW,GAAG,CAAC,CAAD,CAArE;AAA0E,QAAA,QAAQ,EAAEhB;AAApF;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAO,QAAA,SAAS,EAAC,gDAAjB;AAAkE,QAAA,OAAO,EAAEgB,GAAG,CAAC,CAAD,CAA9E;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAEA,GAAG,CAAC,CAAD;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEA,GAAG,CAAC,CAAD;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAAUX,KAAV;AAAA;AAAA;AAAA;AAAA,YADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;AAED,eAAeb,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\n\nconst ADD = 1;\nconst REMOVE = -1;\n\nfunction OptionalMods({ mods, onchange }) {\n\n\n\n  const [selected, setSelected] = useState(Array(mods.length).fill(false))\n\n  function handleChange(event)\n  {\n    var type; \n    var factor;\n    var price;\n    const index = event.target.id;\n    const modId = \n\n    selected[index] ? factor = REMOVE : factor = ADD\n    \n    let newSelected = selected;\n    newSelected[index] = event.target.checked\n    setSelected ({...selected, newSelected})\n\n    mods.forEach((i) =>\n    {\n        if(i[0] == modId)\n          price = i[2]\n    })\n    price += factor;\n\n    onchange(event.target.value, price)\n  }\n\n  return (\n    <div className=\"py-2\">\n\n\n        {mods.length <=0 ? null : <p className={`${utility.fontSizeSmall}`}> Optional Selections</p>}\n\n      {mods.map((mod, index) => (\n        <div key={index}>\n          <input type=\"checkbox\" id={index} name=\"OptionalModifiers\" value={mod[0]} onChange={handleChange}/>\n\n          <label className=\"d-inline-flex w-50 justify-content-between p-1\" htmlFor={mod[0]}>\n            <MenuItemName name={mod[1]} />\n            <MenuItemPrice price={mod[2]} />\n          </label>\n        </div>\n      ))}\n\n    </div>\n  );\n}\n\nexport default OptionalMods;\n"]},"metadata":{},"sourceType":"module"}