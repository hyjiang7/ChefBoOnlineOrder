{"ast":null,"code":"import _regeneratorRuntime from \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport MenuItem from './MenuItem';\nimport { Accordion, Card } from \"react-bootstrap\"; //all the items in one category\n\nvar MenuItemCate = function MenuItemCate(_ref) {\n  var cate = _ref.cate,\n      menuItem = _ref.menuItem,\n      id = _ref.id,\n      type = _ref.type;\n  var items = menuItem;\n  var Category = cate.Category;\n  if (Category == \"Appetizers\") console.log(\"items\", items[0]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}; //useState/useEffect\n\n\n_c = MenuItemCate;\n\nvar getMenuItems = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cate) {\n    var url, item, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            item = [];\n\n            if (cate) {\n              url = 'http://localhost:5001/' + cate;\n            }\n\n            _context.next = 4;\n            return fetch(url).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              for (var i = 0; i < data.length; i++) {\n                item.push(data[i]);\n              } // console.log(item)\n\n\n              return item;\n            });\n\n          case 4:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getMenuItems(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nMenuItemCate.propTypes = {// cate: PropTypes.string,\n};\nexport default MenuItemCate;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuItemCate\");","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/MenuItemCate.js"],"names":["PropTypes","useState","useEffect","MenuItem","Accordion","Card","MenuItemCate","cate","menuItem","id","type","items","Category","console","log","getMenuItems","item","url","fetch","then","response","json","data","i","length","push","propTypes"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SACIC,SADJ,EAEIC,IAFJ,QAGS,iBAHT,C,CAME;;AACF,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAgC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,EAAc,QAAdA,EAAc;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAEjD,MAAMC,KAAK,GAAGH,QAAd;AAFiD,MAI1CI,QAJ0C,GAI9BL,IAJ8B,CAI1CK,QAJ0C;AAKjD,MAAIA,QAAQ,IAAI,YAAhB,EACIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAAK,CAAC,CAAD,CAA1B;AACJ,sBACI,qCADJ;AAyBH,CAhCD,C,CAkCA;;;KAlCML,Y;;AAoCN,IAAMS,YAAY;AAAA,uEAAG,iBAAOR,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAGbS,YAAAA,IAHa,GAGN,EAHM;;AAKjB,gBAAGT,IAAH,EACA;AACIU,cAAAA,GAAG,GAAG,2BAA2BV,IAAjC;AACH;;AARgB;AAAA,mBASGW,KAAK,CAACD,GAAD,CAAL,CACnBE,IADmB,CACd,UAAAC,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,aADM,EAEnBF,IAFmB,CAEd,UAAAG,IAAI,EAAI;AACV,mBAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,IAAI,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EACA;AACIP,gBAAAA,IAAI,CAACS,IAAL,CAAUH,IAAI,CAACC,CAAD,CAAd;AACH,eAJS,CAKV;;;AACA,qBAAOP,IAAP;AAEH,aAVmB,CATH;;AAAA;AASVM,YAAAA,IATU;AAAA,6CAqBVA,IArBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZP,YAAY;AAAA;AAAA;AAAA,GAAlB;;AA2BAT,YAAY,CAACoB,SAAb,GAAyB,CACrB;AADqB,CAAzB;AAIA,eAAepB,YAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react'\nimport MenuItem from './MenuItem'\nimport {\n    Accordion,\n    Card\n  } from \"react-bootstrap\";\n\n\n  //all the items in one category\nconst MenuItemCate = ({cate, menuItem, id, type}) => {\n    \n    const items = menuItem\n\n    const {Category} = cate\n    if (Category == \"Appetizers\")\n        console.log(\"items\", items[0])\n    return  (\n        <>  \n        \n            {/* <Card>\n                <Accordion.Toggle as={Card.Header} eventKey={id}>\n                {cate}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={id}>\n                <Card.Body>\n                    {\n                        items.map((item, index) =>\n                        (\n                            <MenuItem key={index} item={item} type={type}/>\n                        ))\n                    }\n\n                </Card.Body>\n                </Accordion.Collapse>\n            </Card> */}\n                     \n     \n            \n        </>\n    )\n    \n}\n\n//useState/useEffect\n\nconst getMenuItems = async (cate) =>\n{\n    var url;\n    var item = []\n\n    if(cate)\n    {\n        url = 'http://localhost:5001/' + cate\n    }\n     const data = await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n        for(var i = 0; i < data.length; i++)\n        {\n            item.push(data[i])\n        }\n        // console.log(item)\n        return item;\n\n    })\n\n    return data;\n\n\n};\n\n\nMenuItemCate.propTypes = {\n    // cate: PropTypes.string,\n}\n\nexport default MenuItemCate\n"]},"metadata":{},"sourceType":"module"}