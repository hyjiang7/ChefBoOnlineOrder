{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/OptionalMods.js\";\nimport React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\nconst ADD = 1;\nconst REMOVE = -1;\n\nfunction OptionalMods({\n  mods,\n  onchange\n}) {\n  console.log(\"opt mods on click\");\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(Array(mods.length).fill(false));\n\n  function handleChange(event) {\n    var price = mods[event.target.id][2];\n\n    if (event.target.checked) {\n      onchange(event.target.value, null, price);\n    } else {\n      onchange(null, event.target.value, price * REMOVE);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-2\",\n    children: [mods.length <= 0 ? null : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `${utility.fontSizeSmall}`,\n      children: \" Optional Selections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), mods.map((mod, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: index,\n        name: `optMod${mod[0]}`,\n        value: mod[0],\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"d-inline-flex w-50 justify-content-between p-1\" // htmlFor={`optMod${mod[0]}`}\n        ,\n        htmlFor: index,\n        children: [/*#__PURE__*/_jsxDEV(MenuItemName, {\n          name: mod[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItemPrice, {\n          price: mod[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\nexport default OptionalMods;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/OptionalMods.js"],"names":["React","useState","MenuItemName","MenuItemPrice","utility","ADD","REMOVE","OptionalMods","mods","onchange","console","log","selected","setSelected","Array","length","fill","handleChange","event","price","target","id","checked","value","fontSizeSmall","map","mod","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,MAAMC,GAAG,GAAG,CAAZ;AACA,MAAMC,MAAM,GAAG,CAAC,CAAhB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAtB,EAA0C;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BZ,QAAQ,CAACa,KAAK,CAACN,IAAI,CAACO,MAAN,CAAL,CAAmBC,IAAnB,CAAwB,KAAxB,CAAD,CAAxC;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAIC,KAAK,GAAGX,IAAI,CAACU,KAAK,CAACE,MAAN,CAAaC,EAAd,CAAJ,CAAsB,CAAtB,CAAZ;;AAEA,QAAIH,KAAK,CAACE,MAAN,CAAaE,OAAjB,EAA0B;AACxBb,MAAAA,QAAQ,CAACS,KAAK,CAACE,MAAN,CAAaG,KAAd,EAAqB,IAArB,EAA2BJ,KAA3B,CAAR;AACD,KAFD,MAEO;AACLV,MAAAA,QAAQ,CAAC,IAAD,EAAOS,KAAK,CAACE,MAAN,CAAaG,KAApB,EAA2BJ,KAAK,GAAGb,MAAnC,CAAR;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACGE,IAAI,CAACO,MAAL,IAAe,CAAf,GAAmB,IAAnB,gBACC;AAAG,MAAA,SAAS,EAAG,GAAEX,OAAO,CAACoB,aAAc,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAKGhB,IAAI,CAACiB,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,kBACR;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAEA,KAFN;AAGE,QAAA,IAAI,EAAG,SAAQD,GAAG,CAAC,CAAD,CAAI,EAHxB;AAIE,QAAA,KAAK,EAAEA,GAAG,CAAC,CAAD,CAJZ;AAKE,QAAA,QAAQ,EAAET;AALZ;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AACE,QAAA,SAAS,EAAC,gDADZ,CAEE;AAFF;AAGE,QAAA,OAAO,EAAEU,KAHX;AAAA,gCAKE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAED,GAAG,CAAC,CAAD;AAAvB;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEA,GAAG,CAAC,CAAD;AAAzB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA,OAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,YADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;AAED,eAAepB,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\n\nconst ADD = 1;\nconst REMOVE = -1;\n\nfunction OptionalMods({ mods, onchange }) {\n  console.log(\"opt mods on click\")\n  const [selected, setSelected] = useState(Array(mods.length).fill(false));\n\n  function handleChange(event) {\n    var price = mods[event.target.id][2];\n\n    if (event.target.checked) {\n      onchange(event.target.value, null, price);\n    } else {\n      onchange(null, event.target.value, price * REMOVE);\n    }\n  }\n\n  return (\n    <div className=\"py-2\">\n      {mods.length <= 0 ? null : (\n        <p className={`${utility.fontSizeSmall}`}> Optional Selections</p>\n      )}\n\n      {mods.map((mod, index) => (\n        <div key={index}>\n          <input\n            type=\"checkbox\"\n            id={index}\n            name={`optMod${mod[0]}`}\n            value={mod[0]}\n            onChange={handleChange}\n          />\n\n          <label\n            className=\"d-inline-flex w-50 justify-content-between p-1\"\n            // htmlFor={`optMod${mod[0]}`}\n            htmlFor={index}\n          >\n            <MenuItemName name={mod[1]} />\n            <MenuItemPrice price={mod[2]} />\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default OptionalMods;\n"]},"metadata":{},"sourceType":"module"}