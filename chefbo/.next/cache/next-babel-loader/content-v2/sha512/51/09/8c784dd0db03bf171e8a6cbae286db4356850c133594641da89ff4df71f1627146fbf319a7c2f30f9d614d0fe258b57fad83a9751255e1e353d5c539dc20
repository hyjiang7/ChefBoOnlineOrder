{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/checkoutForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport store from \"../state/GlobalState\";\nimport payment from \"../styles/payment.module.css\";\n\nvar CheckoutForm = function CheckoutForm() {\n  _s();\n\n  var _useState = useState(false),\n      succeeded = _useState[0],\n      setSucceeded = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(''),\n      processing = _useState3[0],\n      setProcessing = _useState3[1];\n\n  var _useState4 = useState(true),\n      disabled = _useState4[0],\n      setDisabled = _useState4[1];\n\n  var _useState5 = useState(''),\n      clientSecret = _useState5[0],\n      setClientSecret = _useState5[1];\n\n  var _useState6 = useState(''),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n  useEffect(function () {\n    // Create PaymentIntent as soon as the page loads\n    getClientSecret();\n  }, []);\n  var cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n\n  var handleChange = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Listen for changes in the CardElement\n              // and display any errors as the customer types their card details\n              setDisabled(event.empty);\n              setError(event.error ? event.error.message : \"\");\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleChange(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ev) {\n      var payload;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              ev.preventDefault();\n              setProcessing(true);\n              _context2.next = 4;\n              return stripe.confirmCardPayment(clientSecret, {\n                receipt_email: email,\n                payment_method: {\n                  card: elements.getElement(CardElement)\n                }\n              });\n\n            case 4:\n              payload = _context2.sent;\n\n              if (payload.error) {\n                setError(\"Payment failed \".concat(payload.error.message));\n                setProcessing(false);\n              } else {\n                setError(null);\n                setProcessing(false);\n                setSucceeded(true);\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmit(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: function onChange(e) {\n        return setEmail(e.target.value);\n      },\n      placeholder: \"Enter email address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CardElement, {\n      id: \"\".concat(payment.CardElement),\n      options: cardStyle,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: processing || disabled || succeeded,\n      id: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"button-text\",\n        children: processing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          id: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, _this) : \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, _this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\".concat(payment.cardError),\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: succeeded ? \"\".concat(payment.resultMessage) : \"\".concat(payment.resultMessage, \" \").concat(payment.hidden),\n      children: [\"Payment succeeded, see the result in your\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://dashboard.stripe.com/test/payments\",\n        children: \"Stripe dashboard.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, _this), \" Refresh the page to pay again.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CheckoutForm, \"HQt8qBW5wYAHG7Qc6ca1WQp6zCs=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/checkoutForm.js"],"names":["React","useState","useEffect","CardElement","useStripe","useElements","store","payment","CheckoutForm","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","email","setEmail","stripe","elements","getClientSecret","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","handleChange","event","empty","message","handleSubmit","ev","preventDefault","confirmCardPayment","receipt_email","payment_method","card","getElement","payload","e","target","value","cardError","resultMessage","hidden"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  CardElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\nimport store from \"../state/GlobalState\";\nimport payment from \"../styles/payment.module.css\";\n\n\n\nconst CheckoutForm = () =>{\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const [email, setEmail] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n\n\n  \n\n\n\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    getClientSecret()\n  }, []);\n\n\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n\n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      receipt_email: email,\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n    }\n  };\n\n  return (\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder=\"Enter email address\"\n      />\n      <CardElement id={`${payment.CardElement}`} options={cardStyle} onChange={handleChange} />\n      <button\n        disabled={processing || disabled || succeeded}\n        id=\"submit\"\n      >\n        <span id=\"button-text\">\n          {processing ? (\n            <div className=\"spinner\" id=\"spinner\"></div>\n          ) : (\n            \"Pay now\"\n          )}\n        </span>\n      </button>\n      {/* Show any error that happens when processing the payment */}\n      {error && (\n        <div className={`${payment.cardError}`} role=\"alert\">\n          {error}\n        </div>\n      )}\n      {/* Show a success message upon completion */}\n      <p className={succeeded ? `${payment.resultMessage}` : `${payment.resultMessage} ${payment.hidden}`}>\n        Payment succeeded, see the result in your\n        <a\n          href={`https://dashboard.stripe.com/test/payments`}\n        >\n         \n          Stripe dashboard.\n        </a> Refresh the page to pay again.\n      </p>\n    </form>\n  );\n}\n\nexport default CheckoutForm"]},"metadata":{},"sourceType":"module"}