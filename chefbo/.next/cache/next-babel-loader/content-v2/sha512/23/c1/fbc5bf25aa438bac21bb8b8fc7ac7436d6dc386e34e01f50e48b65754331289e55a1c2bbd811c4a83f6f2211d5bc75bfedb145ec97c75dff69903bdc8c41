{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/checkout.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, useRef } from \"react\";\nimport moment from \"moment\";\n\nvar checkout = function checkout() {\n  _s();\n\n  // const closedDays = [\"11/25/2021\", \"12/25/2021\", \"07/04/2022\"]\n  var hoursOfOperation = [[], [\"11:00\", \"15:00\", \"16:30\", \"21:00\"], [\"11:00\", \"15:00\", \"16:30\", \"21:00\"], [\"11:00\", \"15:00\", \"16:30\", \"21:00\"], [\"11:00\", \"15:00\", \"16:30\", \"21:00\"], [\"11:00\", \"15:00\", \"16:30\", \"21:30\"], [\"12:00\", \"15:00\", \"16:30\", \"21:30\"]];\n  var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  var closed = true;\n  var today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\");\n  var day = today.day(); //number\n\n  var dayStr = today.format(\"dddd\"); //friday\n\n  var currTime = today.format(\"HH:mm\"); //string\n\n  var date = today.format(\"MM-DD-YY\"); //string\n\n  var open = today.isBefore(\"\".concat(date, \" \").concat(hoursOfOperation[day].slice(-1)));\n  var validTimesOne = [];\n  var validDays = [];\n  var validTimesTwo = [];\n  var dayOne;\n  var dayTwo; //today is open!\n\n  if (open) {\n    console.log(\"open\");\n    validDays.push(\"Today (\".concat(date, \")\"));\n    dayOne = date;\n\n    if (day == 6) {\n      //if today is sat, give them today and monday\n      dayTwo = today.add(2, \"days\").format(\"MM-DD-YY\");\n      validDays.push(\"Monday (\".concat(dayTwo, \")\"));\n    } else {\n      //today and tmr\n      dayTwo = today.add(1, \"days\").format(\"MM-DD-YY\");\n      validDays.push(\"Tomorrow (\".concat(dayTwo, \")\"));\n    }\n\n    today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\"); //reset today\n\n    console.log(dayOne, dayTwo); // console.log(`${date} ${hoursOfOperation[day][0]}`)\n    // console.log(today)\n    // console.log(today.isBefore(`${date} ${hoursOfOperation[day][0]}`))\n\n    if (today.isBefore(\"\".concat(date, \" \").concat(hoursOfOperation[day][0]))) {\n      validTimesOne = availablePickUpTimes(new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][0])), new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][1])));\n    } else {\n      validTimesOne = availablePickUpTimes(today, new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][1])));\n    }\n\n    validTimesOne = validTimesOne.concat(availablePickUpTimes(new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][2])), new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][3]))));\n    validTimesTwo = availablePickUpTimes(new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][0])), new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][1])));\n    validTimesTwo = validTimesTwo.concat(availablePickUpTimes(new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][2])), new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][3]))));\n  } else {\n    console.log(\"closed today\"); //give them options for next two business days\n\n    dayOne = today.add(1, \"days\").format(\"MM-DD-YY\");\n    validDays.push(\"Tomorrow (\".concat(dayOne));\n    dayTwo = today.add(1, \"days\").format(\"MM-DD-YY\");\n    validDays.push(\"Monday (\".concat(dayTwo, \")\"));\n    today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\"); //reset today\n\n    validTimesOne = availablePickUpTimes(new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][0])), new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][1])));\n    validTimesOne = validTimesOne.concat(availablePickUpTimes(new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][2])), new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][3]))));\n    validTimesTwo = availablePickUpTimes(new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][0])), new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][1])));\n    validTimesTwo = validTimesTwo.concat(availablePickUpTimes(new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][2])), new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][3]))));\n  }\n\n  var _useState = useState(0),\n      dateChange = _useState[0],\n      setDateChange = _useState[1];\n\n  var _useState2 = useState(validTimesOne),\n      times = _useState2[0],\n      setTimes = _useState2[1];\n\n  var _useState3 = useState(validTimesOne[0]),\n      timeChange = _useState3[0],\n      setTime = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      paymentError = _useState4[0],\n      setPaymentError = _useState4[1];\n\n  useEffect(function () {\n    console.log(\"use effect\");\n\n    if (dateChange == 0) {\n      setTimes(validTimesOne);\n    } else setTimes(validTimesTwo);\n  }, [dateChange]);\n\n  function availablePickUpTimes(startTime, endTime) {\n    var times = [];\n    var mins = 15 - startTime.minute() % 15;\n    var firstTime = startTime.add(mins, \"m\");\n    mins == 15 ? null : firstTime.add(15, \"m\");\n\n    while (firstTime.isBefore(endTime)) {\n      times.push(new moment(startTime).format(\"HH:mm\"));\n      firstTime.add(15, \"m\");\n    }\n\n    return times;\n  }\n\n  function handleDateChange(e) {\n    setDateChange(e.target.value);\n  }\n\n  function handleTimeChange(e) {\n    console.log(e.target.value);\n    setTime(e.target.value);\n  }\n\n  function reviewOrder(e) {\n    //check if payment is valid \n    e.preventDefault();\n    var validPayment = e.target.form.elements.payment.value;\n    console.log(validPayment);\n\n    if (validPayment) {} else {\n      //add error message to payment invalid\n      setPaymentError(\"<span>Invalid payment method</span>\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-sm-8 col-lg-6 m-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          htmlFor: \"day\",\n          children: \"Select Pick Up Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"day\",\n          className: \"form-control\",\n          onChange: handleDateChange,\n          children: validDays.map(function (i, ind) {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ind,\n              children: i\n            }, ind, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          htmlFor: \"time\",\n          children: \"Select a Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"time\",\n          className: \"form-control\",\n          onChange: handleTimeChange,\n          children: times.map(function (i, ind) {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\".concat(i),\n              children: i\n            }, ind, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fname\",\n            children: \" First Name* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"fname\",\n            type: \"text\",\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lname\",\n            children: \" Last Name* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"lname\",\n            type: \"text\",\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \" Email* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \" Phone number (digits only)* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"phone\",\n          type: \"tel\",\n          pattern: \"[0-9]{3}[0-9]{3}[0-9]{4}\",\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"payment\",\n          children: [\" Payment* \", paymentError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"payment\",\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex justify-content-center \",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: reviewOrder,\n          children: \"Review and Submit Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(checkout, \"YZu+DFANaN3JFLOpfg+W5F594Vc=\");\n\nexport default checkout;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/checkout.js"],"names":["React","useState","useContext","useEffect","useRef","moment","checkout","hoursOfOperation","days","closed","today","utc","format","utcOffset","day","dayStr","currTime","date","open","isBefore","slice","validTimesOne","validDays","validTimesTwo","dayOne","dayTwo","console","log","push","add","availablePickUpTimes","concat","dateChange","setDateChange","times","setTimes","timeChange","setTime","paymentError","setPaymentError","startTime","endTime","mins","minute","firstTime","handleDateChange","e","target","value","handleTimeChange","reviewOrder","preventDefault","validPayment","form","elements","payment","map","i","ind"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport moment from \"moment\";\n\nconst checkout = () => {\n\n    // const closedDays = [\"11/25/2021\", \"12/25/2021\", \"07/04/2022\"]\n  const hoursOfOperation = [\n    [],\n    [\"11:00\", \"15:00\", \"16:30\", \"21:00\"],\n    [\"11:00\", \"15:00\", \"16:30\", \"21:00\"],\n    [\"11:00\", \"15:00\", \"16:30\", \"21:00\"],\n    [\"11:00\", \"15:00\", \"16:30\", \"21:00\"],\n    [\"11:00\", \"15:00\", \"16:30\", \"21:30\"],\n    [\"12:00\", \"15:00\", \"16:30\", \"21:30\"],\n  ];\n\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const closed = true;\n\n\n  var today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\");\n  const day = today.day(); //number\n  const dayStr = today.format(\"dddd\"); //friday\n  const currTime = today.format(\"HH:mm\"); //string\n  const date = today.format(\"MM-DD-YY\"); //string\n  const open = today.isBefore(`${date} ${hoursOfOperation[day].slice(-1)}`);\n  var validTimesOne = [];\n  var validDays = [];\n  var validTimesTwo = [];\n  var dayOne;\n  var dayTwo;\n\n  //today is open!\n  if (open) {\n    console.log(\"open\");\n    validDays.push(`Today (${date})`);\n    dayOne = date;\n    if (day == 6) {\n      //if today is sat, give them today and monday\n      dayTwo = today.add(2, \"days\").format(\"MM-DD-YY\");\n      validDays.push(`Monday (${dayTwo})`);\n    } else {\n      //today and tmr\n      dayTwo = today.add(1, \"days\").format(\"MM-DD-YY\");\n      validDays.push(`Tomorrow (${dayTwo})`);\n    }\n\n    today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\"); //reset today\n\n    console.log(dayOne, dayTwo)\n    // console.log(`${date} ${hoursOfOperation[day][0]}`)\n    // console.log(today)\n    // console.log(today.isBefore(`${date} ${hoursOfOperation[day][0]}`))\n    if (today.isBefore(`${date} ${hoursOfOperation[day][0]}`)) {\n      validTimesOne = availablePickUpTimes(\n        new moment(`${date} ${hoursOfOperation[day][0]}`),\n        new moment(`${date} ${hoursOfOperation[day][1]}`)\n      );\n\n    } else {\n      validTimesOne = availablePickUpTimes(today, new moment(`${date} ${hoursOfOperation[day][1]}`));\n\n    }\n\n    validTimesOne = validTimesOne.concat(\n        availablePickUpTimes(new moment(`${date} ${hoursOfOperation[day][2]}`), new moment(`${date} ${hoursOfOperation[day][3]}`))\n      );\n\n    validTimesTwo = availablePickUpTimes(\n      new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][0]}`),\n      new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][1]}`)\n    );\n\n    validTimesTwo = validTimesTwo.concat(\n      availablePickUpTimes(\n        new moment(\n          `${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][2]}`\n        ),\n        new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][3]}`)\n      )\n    );\n  } \n  else {\n    console.log(\"closed today\");\n    \n    //give them options for next two business days\n    dayOne = today.add(1, \"days\").format(\"MM-DD-YY\");\n    validDays.push(`Tomorrow (${dayOne}`);\n    dayTwo = today.add(1, \"days\").format(\"MM-DD-YY\")\n    validDays.push(`Monday (${dayTwo})`);\n\n    today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\"); //reset today\n\n\n    validTimesOne = availablePickUpTimes(\n        new moment(`${date} ${hoursOfOperation[day][0]}`),\n        new moment(`${date} ${hoursOfOperation[day][1]}`)\n      );\n      validTimesOne = validTimesOne.concat(\n        availablePickUpTimes(new moment(`${date} ${hoursOfOperation[day][2]}`), new moment(`${date} ${hoursOfOperation[day][3]}`))\n      );\n\n      validTimesTwo = availablePickUpTimes(\n        new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][0]}`),\n        new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][1]}`)\n      );\n  \n      validTimesTwo = validTimesTwo.concat(\n        availablePickUpTimes(\n          new moment(\n            `${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][2]}`\n          ),\n          new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][3]}`)\n        )\n      );\n  }\n\n  const [dateChange, setDateChange] = useState(0)\n  const [times, setTimes] = useState(validTimesOne)\n  const [timeChange, setTime] = useState(validTimesOne[0])\n  const [paymentError, setPaymentError] = useState(\"\")\n\n  useEffect(() => {\n\n    console.log(\"use effect\")\n      if(dateChange == 0)\n      {\n          setTimes(validTimesOne)\n      }\n      else\n          setTimes(validTimesTwo)\n\n  }, [dateChange])\n\n\n  function availablePickUpTimes(startTime, endTime) {\n    var times = [];\n\n    var mins = 15 - (startTime.minute() % 15);\n    var firstTime = startTime.add(mins, \"m\");\n    mins == 15? null : firstTime.add(15, \"m\");\n\n    while (firstTime.isBefore(endTime)) {\n      times.push(new moment(startTime).format(\"HH:mm\"));\n      firstTime.add(15, \"m\");\n    }\n    return times;\n  }\n\n\n  function handleDateChange(e) {\n    setDateChange(e.target.value)\n  }\n\n  function handleTimeChange(e)\n  {\n      console.log(e.target.value)\n      setTime(e.target.value)\n  }\n\n  function reviewOrder(e)\n  {\n      //check if payment is valid \n      \n      e.preventDefault()\n      var validPayment = e.target.form.elements.payment.value;\n\n      console.log(validPayment)\n      if (validPayment)\n      {\n\n      }\n      else{\n            //add error message to payment invalid\n            setPaymentError(\"<span>Invalid payment method</span>\")\n      }\n  }\n\n\n  return (\n    <div className=\"col-12 col-sm-8 col-lg-6 m-auto\">\n      {/* {closed? <p style={{color: \"red\", fontWeight: \"bold\"}}> Store Closed! Pick up will be scheduled for {nextBusinessDay}!</p> : <p></p>} */}\n      <form className=\"form\">\n        <div className=\"form-group\">\n          <label className=\"\" htmlFor=\"day\">\n            Select Pick Up Date\n          </label>\n          <select name=\"day\" className=\"form-control\" onChange={handleDateChange}>\n            {validDays.map((i, ind) => (\n              <option key={ind} value={ind}>\n                {i}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"\" htmlFor=\"time\">\n            Select a Time\n          </label>\n          <select name=\"time\" className=\"form-control\" onChange={handleTimeChange}>\n            {times.map((i, ind) => (\n              <option key={ind} value={`${i}`}>\n                {i}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col mb-2\">\n            <label htmlFor=\"fname\"> First Name* </label>\n            <input name=\"fname\" type=\"text\" className=\"form-control\" required />\n          </div>\n\n          <div className=\"col\">\n            <label htmlFor=\"lname\"> Last Name* </label>\n            <input name=\"lname\" type=\"text\" className=\"form-control\" required />\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"email\"> Email* </label>\n          <input name=\"email\" type=\"email\" className=\"form-control\" required />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"phone\"> Phone number (digits only)* </label>\n          <input\n            name=\"phone\"\n            type=\"tel\"\n            pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\"\n            className=\"form-control\"\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"payment\"> Payment* {paymentError}</label>\n          <input\n            name=\"payment\"\n            type=\"text\"\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group d-flex justify-content-center \">\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={reviewOrder}>\n            Review and Submit Order\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default checkout;\n"]},"metadata":{},"sourceType":"module"}