{"ast":null,"code":"import _defineProperty from \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var ACTIONS = {\n  ADD_TO_CART: 'ADD_TO_CART' // UPDATE_ITEM_PRICE: 'UPDATE_ITEM_PRICE'\n\n}; // export const updateItemPrice = (item) => {\n//     // if(product.inStock === 0)\n//     // return ({ type: 'NOTIFY', payload: {error: 'This product is out of stock.'} }) \n//     // const check = cart.every(item => {\n//     //     return item._id !== product._id\n//     // })\n//     // if(!check) return ({ type: 'NOTIFY', payload: {error: 'The product has been added to cart.'} }) \n//     // return ({ type: 'ADD_CART', payload: [...cart, {...product, quantity: 1}] }) \n//     const price = item.price;\n//     return({type: ADD_CART, payload: [{...item, itemTotal: price}]})\n// }\n\nexport var addToCart = function addToCart(item, cart) {\n  // if (cart == undefined)\n  //     cart = []\n  //add to existing cart \n  console.log(cart);\n  return {\n    type: 'ADD_TO_CART',\n    payload: [].concat(_toConsumableArray(cart), [_objectSpread(_objectSpread({}, item), {}, {\n      quantity: 1\n    })])\n  };\n};","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/state/Actions.js"],"names":["ACTIONS","ADD_TO_CART","addToCart","item","cart","console","log","type","payload","quantity"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,OAAO,GAAG;AACnBC,EAAAA,WAAW,EAAE,aADM,CAEnB;;AAFmB,CAAhB,C,CAMP;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,IAAP,EAAgB;AAErC;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAQ;AAAEG,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,+BAAMJ,IAAN,oCAAgBD,IAAhB;AAAsBM,MAAAA,QAAQ,EAAE;AAAhC;AAA9B,GAAR;AAGH,CATM","sourcesContent":["export const ACTIONS = {\n    ADD_TO_CART: 'ADD_TO_CART',\n    // UPDATE_ITEM_PRICE: 'UPDATE_ITEM_PRICE'\n\n}\n\n// export const updateItemPrice = (item) => {\n//     // if(product.inStock === 0)\n//     // return ({ type: 'NOTIFY', payload: {error: 'This product is out of stock.'} }) \n\n//     // const check = cart.every(item => {\n//     //     return item._id !== product._id\n//     // })\n\n//     // if(!check) return ({ type: 'NOTIFY', payload: {error: 'The product has been added to cart.'} }) \n\n//     // return ({ type: 'ADD_CART', payload: [...cart, {...product, quantity: 1}] }) \n\n//     const price = item.price;\n//     return({type: ADD_CART, payload: [{...item, itemTotal: price}]})\n// }\n\nexport const addToCart = (item, cart) => {\n\n    // if (cart == undefined)\n    //     cart = []\n    //add to existing cart \n    console.log(cart)\n    return ({ type: 'ADD_TO_CART', payload: [...cart, {...item, quantity: 1}] }) \n\n\n}"]},"metadata":{},"sourceType":"module"}