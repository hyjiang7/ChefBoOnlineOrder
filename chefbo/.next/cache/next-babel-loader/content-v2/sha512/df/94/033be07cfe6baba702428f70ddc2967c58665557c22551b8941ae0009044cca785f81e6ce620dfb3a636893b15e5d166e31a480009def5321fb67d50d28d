{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/state/GlobalState.js\";\nimport { createContext, useReducer, useEffect } from 'react';\nimport reducers from './Reducers';\nconst StoreContext = /*#__PURE__*/createContext();\n\nconst GlobalStore = ({\n  children\n}) => {\n  const initialState = {\n    cart: []\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducers, initialState); //using combine reducers alike\n\n  const {\n    cart\n  } = state;\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: [\" /*exposes the values throughout the app */\", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\nexport const useStore = () => useContex(StoreContext); //custom hook useStore\n\nexport default GlobalStore;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/state/GlobalState.js"],"names":["createContext","useReducer","useEffect","reducers","StoreContext","GlobalStore","children","initialState","cart","state","dispatch","useStore","useContex"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGC,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;;AAGA,MAAMK,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACjC,QAAMC,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAE;AADW,GAArB;AAIA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,UAAU,CAACE,QAAD,EAAWI,YAAX,CAApC,CALiC,CAK+B;;AAChE,QAAM;AAAEC,IAAAA;AAAF,MAAWC,KAAjB;AAIA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAA9B;AAAA,8DACKJ,QADL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAfA;;AAiBD,OAAO,MAAMK,QAAQ,GAAG,MAAMC,SAAS,CAACR,YAAD,CAAhC,C,CAAgD;;AACvD,eAAeC,WAAf","sourcesContent":["import { createContext, useReducer, useEffect } from 'react'\nimport reducers from './Reducers'\n\n\n const StoreContext = createContext()\n\n\n const GlobalStore = ({children}) => {\n    const initialState = { \n        cart: []\n    }\n\n    const [state, dispatch] = useReducer(reducers, initialState)    //using combine reducers alike\n    const { cart } = state\n\n\n\n    return(\n        <StoreContext.Provider value={{state, dispatch}}> /*exposes the values throughout the app */\n            {children}\n        </StoreContext.Provider>\n    )\n}\n\nexport const useStore = () => useContex(StoreContext)  //custom hook useStore\nexport default GlobalStore"]},"metadata":{},"sourceType":"module"}