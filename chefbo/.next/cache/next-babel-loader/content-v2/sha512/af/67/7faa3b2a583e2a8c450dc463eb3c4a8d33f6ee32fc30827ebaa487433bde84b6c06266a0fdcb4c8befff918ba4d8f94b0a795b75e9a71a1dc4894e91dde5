{"ast":null,"code":"const {\n  MENU_LIST_REQUEST,\n  MENU_LIST_ERROR,\n  MENU_LIST_SUCCESS\n} = require(\"../constants/menuConstants\");\n\nexport const listMenu = () => async dispatch => {\n  dispatch({\n    type: MENU_LIST_REQUEST\n  });\n\n  try {\n    const res = await fetch(`http://localhost:5001/categories`);\n    const categories = await res.json();\n\n    if (categories) {\n      return {\n        notFound: true\n      };\n    }\n\n    var menuItem = [];\n\n    for (var i = 0; i < categories.length; i++) {\n      menuItem[i] = [];\n      const URI = \"http://localhost:5001/\" + categories[i];\n      const encodedURI = encodeURI(URI);\n      const res2 = await fetch(encodedURI);\n      menuItem[i].push(await res2.json());\n    }\n\n    dispatch({\n      type: MENU_LIST_SUCCESS,\n      payload: categories,\n      menuItem\n    });\n  } catch (error) {\n    dispatch({\n      type: MENU_LIST_ERROR,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/state/actions/menuActions.js"],"names":["MENU_LIST_REQUEST","MENU_LIST_ERROR","MENU_LIST_SUCCESS","require","listMenu","dispatch","type","res","fetch","categories","json","notFound","menuItem","i","length","URI","encodedURI","encodeURI","res2","push","payload","error","message"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,iBAAF;AAAqBC,EAAAA,eAArB;AAAsCC,EAAAA;AAAtC,IAA4DC,OAAO,CAAC,4BAAD,CAAzE;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN;AADC,GAAD,CAAR;;AAIA,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMC,KAAK,CAAE,kCAAF,CAAvB;AACA,UAAMC,UAAU,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAzB;;AACA,QAAID,UAAJ,EAAgB;AACd,aAAO;AACLE,QAAAA,QAAQ,EAAE;AADL,OAAP;AAGD;;AAED,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAAU,CAACK,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1CD,MAAAA,QAAQ,CAACC,CAAD,CAAR,GAAc,EAAd;AACA,YAAME,GAAG,GAAG,2BAA2BN,UAAU,CAACI,CAAD,CAAjD;AACA,YAAMG,UAAU,GAAGC,SAAS,CAACF,GAAD,CAA5B;AAEA,YAAMG,IAAI,GAAG,MAAMV,KAAK,CAACQ,UAAD,CAAxB;AACAJ,MAAAA,QAAQ,CAACC,CAAD,CAAR,CAAYM,IAAZ,CAAiB,MAAMD,IAAI,CAACR,IAAL,EAAvB;AACD;;AAEDL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,iBAAP;AAA0BkB,MAAAA,OAAO,EAAEX,UAAnC;AAA+CG,MAAAA;AAA/C,KAAD,CAAR;AACD,GApBD,CAoBE,OAAOS,KAAP,EAAc;AACZhB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,eAAP;AAAwBmB,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAvC,KAAD,CAAR;AACH;AACF,CA5BM","sourcesContent":["const { MENU_LIST_REQUEST, MENU_LIST_ERROR, MENU_LIST_SUCCESS } = require(\"../constants/menuConstants\");\n\nexport const listMenu = () => async (dispatch) => {\n  dispatch({\n    type: MENU_LIST_REQUEST,\n  });\n\n  try {\n    const res = await fetch(`http://localhost:5001/categories`);\n    const categories = await res.json();\n    if (categories) {\n      return {\n        notFound: true,\n      };\n    }\n\n    var menuItem = [];\n    for (var i = 0; i < categories.length; i++) {\n      menuItem[i] = [];\n      const URI = \"http://localhost:5001/\" + categories[i];\n      const encodedURI = encodeURI(URI);\n\n      const res2 = await fetch(encodedURI);\n      menuItem[i].push(await res2.json());\n    }\n\n    dispatch({type: MENU_LIST_SUCCESS, payload: categories, menuItem});\n  } catch (error) {\n      dispatch({type: MENU_LIST_ERROR, payload: error.message})\n  }\n};\n"]},"metadata":{},"sourceType":"module"}