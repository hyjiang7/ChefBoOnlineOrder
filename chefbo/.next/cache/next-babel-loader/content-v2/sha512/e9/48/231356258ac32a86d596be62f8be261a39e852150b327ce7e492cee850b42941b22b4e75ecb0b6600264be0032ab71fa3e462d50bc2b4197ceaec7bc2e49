{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/MenuItemCate.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRoute } from 'react';\nimport MenuItem from './MenuItem';\nimport { Accordion, Card } from \"react-bootstrap\";\nimport store from '../state/GlobalState';\nimport { setLunch } from '../state/Actions'; //all the items in one category\n\nvar MenuItemCate = function MenuItemCate(_ref) {\n  _s();\n\n  var cate = _ref.cate,\n      menuItem = _ref.menuItem,\n      id = _ref.id,\n      type = _ref.type,\n      myRef = _ref.myRef;\n  var items = menuItem[0];\n  var lunch = cate == \"Lunch Specials\" ? true : false;\n\n  var _useState = useState(0),\n      menuClicked = _useState[0],\n      setMenuClicked = _useState[1];\n\n  var _useState2 = useState(0),\n      activeID = _useState2[0],\n      setActiveID = _useState2[1];\n\n  var executeScroll = function executeScroll() {\n    console.log(\"execute scroll\", myRef.current.id);\n    setActiveID(myRef.current.id);\n    console.log(\"finished\");\n  };\n\n  useEffect(function () {\n    console.log(\"use effect\");\n    myRef.current.scrollIntoView();\n  }, [activeID]);\n\n  if (lunch) {\n    var lunchIds = [];\n    items.map(function (item, index) {\n      lunchIds.push(item.ID);\n    });\n    store.dispatch(setLunch(lunchIds));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n        as: Card.Header,\n        onClick: executeScroll,\n        eventKey: id,\n        style: {\n          fontWeight: 500\n        },\n        children: [cate, lunch ? \" (11:00am - 3:00pm only)\" : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n        eventKey: id,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"w-80 m-auto\",\n          ref: myRef,\n          id: id,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-wrap justify-content-center\",\n            children: items.map(function (item, index) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                item: item,\n                type: type\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(MenuItemCate, \"QIcVaUc12jmFtEmxDO8vsgYPm0U=\");\n\n_c = MenuItemCate;\nexport default MenuItemCate;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuItemCate\");","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/MenuItemCate.js"],"names":["useState","useEffect","useRoute","MenuItem","Accordion","Card","store","setLunch","MenuItemCate","cate","menuItem","id","type","myRef","items","lunch","menuClicked","setMenuClicked","activeID","setActiveID","executeScroll","console","log","current","scrollIntoView","lunchIds","map","item","index","push","ID","dispatch","Header","fontWeight"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRoute } from 'react'\nimport MenuItem from './MenuItem'\nimport {\n    Accordion,\n    Card,\n  } from \"react-bootstrap\";\n\nimport store from '../state/GlobalState';\nimport { setLunch } from '../state/Actions';\n\n\n  //all the items in one category\nconst MenuItemCate = ({cate, menuItem, id, type, myRef}) => {\n    \n    const items = menuItem[0]\n    var lunch = (cate == \"Lunch Specials\") ? true : false\n    const [menuClicked, setMenuClicked] = useState(0);\n    const [activeID, setActiveID] = useState(0);\n    \n    const executeScroll = () => {\n        console.log(\"execute scroll\", myRef.current.id)\n        setActiveID(myRef.current.id)\n       \n        console.log(\"finished\")\n    }\n\n    useEffect(()=>{\n        console.log(\"use effect\")\n        myRef.current.scrollIntoView() \n    },[activeID])\n\n    if(lunch)\n    {\n        var lunchIds = [];\n        items.map((item, index) =>{\n            lunchIds.push(item.ID)\n        })\n\n        store.dispatch(setLunch(lunchIds))\n    }\n\n    return  (\n        <div  >  \n            <Card>\n                <Accordion.Toggle as={Card.Header} onClick={executeScroll} eventKey={id}  style={{fontWeight:500}} >\n                {cate}\n                {lunch? \" (11:00am - 3:00pm only)\" : null}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={id} >\n                <Card.Body className=\"w-80 m-auto\" ref={myRef} id={id}>\n                    <div className=\"d-flex flex-wrap justify-content-center\" >\n                    {\n                        items.map((item, index) =>\n                        (\n                            <MenuItem key={index} item={item} type={type}/>\n                        ))\n                    }\n                    </div>\n\n                </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </div>\n    )\n    \n}\n\n\nexport default MenuItemCate\n"]},"metadata":{},"sourceType":"module"}