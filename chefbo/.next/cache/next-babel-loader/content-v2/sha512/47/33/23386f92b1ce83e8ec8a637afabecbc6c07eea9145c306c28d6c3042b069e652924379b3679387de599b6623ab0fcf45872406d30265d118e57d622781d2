{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/checkout.js\";\nimport React from 'react';\n\nconst moment = require('moment');\n\nconst checkout = () => {\n  //select time tag: 15 min increments until close\n  //create all valid pickup times \n  const validTimes = ['11:15', '11:30', '11:45', '12:00', '12:15', '12:30', '12:45', '13:00', '13:15', '13:30', '13:45', '14:00', '14:15', '14:30', '14:45', '16:45', '17:00', '17:15', '17:45', '18:00', '18:15', '18:30', '18:45', '19:00', '19:15', '19:30', '19:45', '20:00', '20:15', '20:30', '20:45']; // var currentValidTimes;\n\n  const hoursOfOperation = {\n    sunday: [],\n    monday: ['11:15', '2:45', '16:45', '20:30'],\n    tuesday: ['11:15', '2:45', '16:45', '20:30'],\n    wednesday: ['11:15', '2:45', '16:45', '20:30'],\n    thursday: ['11:15', '2:45', '16:45', '20:30'],\n    friday: ['11:15', '2:45', '16:45', '21:00'],\n    saturday: ['11:15', '2:45', '16:45', '21:00']\n  };\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']; // const today = new Date()\n  // const currentTime = today.getHours() + \":\" + today.getMinutes();\n  // const sunday =  today.getDay() == 0;\n  // const closed = currentTime > \"20:45\" || sunday;\n  // const saturday = today.getDay() == 6; //returns 6\n  // var pickupDate , pickupDay; \n  // var nextBusinessDay;\n  // if(closed)\n  // {\n  //     var daysToSkip; \n  //     saturday? daysToSkip = 2 : daysToSkip = 1;        \n  //     pickupDate = new Date(today.getTime() + (daysToSkip*86400000));\n  //     pickupDay = days[pickupDate.getDay()]\n  //     console.log(\"store closed, pickup will be for when we open for business on \", pickupDay, pickupDate.getMonth() +1, \"/\" ,pickupDate.getDate(),  \"/\" , pickupDate.getFullYear())\n  //     //if today is sat, then we open on monday\n  //     nextBusinessDay = `${pickupDay} ${pickupDate.getMonth() +1}/${pickupDate.getDate()}/${pickupDate.getFullYear()}`;\n  //     validTimes.splice(0,1);\n  // }\n  // else {\n  //     var index; \n  //     console.log(typeof(currentTime))\n  //     console.log(new Date(currentTime) < new Date('11:34'))\n  //     validTimes.every( (i, ind) => {\n  //         if(currentTime > i)\n  //         {\n  //             index = ind\n  //             return false;   \n  //         }\n  //         return true;\n  //     })\n  //     console.log(index)\n  //     validTimes.splice(0, index + 1);\n  // }\n\n  const day = moment.format();\n  const date = moment.format('MM-DD-YY');\n  console.log(day, date);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-sm-8 col-lg-6 m-auto\",\n    children: [closed ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        fontWeight: \"bold\"\n      },\n      children: [\" Store Closed! Pick up will be scheduled for \", nextBusinessDay, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 138\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          htmlFor: \"time\",\n          children: \" Select Pick Up Time \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"time\",\n          className: \"form-control\",\n          children: validTimes.map((i, ind) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: `${nextBusinessDay} ${i}`,\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fname\",\n            children: \" First Name* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"fname\",\n            type: \"text\",\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lname\",\n            children: \" Last Name* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"lname\",\n            type: \"text\",\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \" Email* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \" Phone number (digits only)* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"phone\",\n          type: \"tel\",\n          pattern: \"[0-9]{3}[0-9]{3}[0-9]{4}\",\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex justify-content-center \",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Review and Submit Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\nexport default checkout;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/checkout.js"],"names":["React","moment","require","checkout","validTimes","hoursOfOperation","sunday","monday","tuesday","wednesday","thursday","friday","saturday","days","day","format","date","console","log","closed","color","fontWeight","nextBusinessDay","map","i","ind"],"mappings":"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","sourcesContent":["import React from 'react'\nconst moment = require('moment')\n\nconst checkout = () => {\n\n    //select time tag: 15 min increments until close\n\n    //create all valid pickup times \n    const validTimes = [\n    '11:15',\n    '11:30',\n    '11:45',\n    '12:00',\n    '12:15',\n    '12:30',\n    '12:45',\n    '13:00',\n    '13:15',\n    '13:30',\n    '13:45',\n    '14:00',\n    '14:15',\n    '14:30',\n    '14:45',\n    '16:45',\n    '17:00',\n    '17:15',\n    '17:45',\n    '18:00',\n    '18:15',\n    '18:30',\n    '18:45',\n    '19:00',\n    '19:15',\n    '19:30',\n    '19:45',\n    '20:00',\n    '20:15',\n    '20:30',\n    '20:45'\n    ]\n    // var currentValidTimes;\n\n    const hoursOfOperation = {\n        sunday : [],\n        monday : ['11:15', '2:45', '16:45', '20:30'],\n        tuesday : ['11:15', '2:45', '16:45', '20:30'],\n        wednesday : ['11:15', '2:45', '16:45', '20:30'],\n        thursday : ['11:15', '2:45', '16:45', '20:30'],\n        friday : ['11:15', '2:45', '16:45', '21:00'],\n        saturday: ['11:15', '2:45', '16:45', '21:00'],\n    }\n    const days = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ]\n\n    // const today = new Date()\n    // const currentTime = today.getHours() + \":\" + today.getMinutes();\n    // const sunday =  today.getDay() == 0;\n    // const closed = currentTime > \"20:45\" || sunday;\n    // const saturday = today.getDay() == 6; //returns 6\n    // var pickupDate , pickupDay; \n    // var nextBusinessDay;\n\n    // if(closed)\n    // {\n\n    //     var daysToSkip; \n    //     saturday? daysToSkip = 2 : daysToSkip = 1;        \n    //     pickupDate = new Date(today.getTime() + (daysToSkip*86400000));\n    //     pickupDay = days[pickupDate.getDay()]\n\n\n    //     console.log(\"store closed, pickup will be for when we open for business on \", pickupDay, pickupDate.getMonth() +1, \"/\" ,pickupDate.getDate(),  \"/\" , pickupDate.getFullYear())\n    //     //if today is sat, then we open on monday\n    //     nextBusinessDay = `${pickupDay} ${pickupDate.getMonth() +1}/${pickupDate.getDate()}/${pickupDate.getFullYear()}`;\n    //     validTimes.splice(0,1);\n    // }\n    // else {\n    //     var index; \n    //     console.log(typeof(currentTime))\n    //     console.log(new Date(currentTime) < new Date('11:34'))\n    //     validTimes.every( (i, ind) => {\n    //         if(currentTime > i)\n    //         {\n    //             index = ind\n    //             return false;   \n    //         }\n    \n    //         return true;\n    //     })\n    \n    //     console.log(index)\n\n    //     validTimes.splice(0, index + 1);\n    // }\n\n    const day = moment.format()\n    const date = moment.format('MM-DD-YY')\n\n    \n    console.log(day, date)\n    \n    return (\n\n\n        <div className=\"col-12 col-sm-8 col-lg-6 m-auto\">\n            {closed? <p style={{color: \"red\", fontWeight: \"bold\"}}> Store Closed! Pick up will be scheduled for {nextBusinessDay}!</p> : <p></p>}\n            <form className=\"form\">\n\n                <div className=\"form-group\">\n                <label\n                    className=\"\"\n                    htmlFor=\"time\"\n                > Select Pick Up Time </label>\n                <select name=\"time\" className=\"form-control\">\n                    {validTimes.map((i, ind) =>(\n                        <option value={`${nextBusinessDay} ${i}` }>{i}</option>\n                    ))}\n                </select>\n                </div>\n\n                <div className=\"row\">\n                <div className=\"col mb-2\">\n                <label htmlFor=\"fname\"> First Name* </label>\n                <input name=\"fname\" type=\"text\" className=\"form-control\" required/>\n                </div>\n\n\n                <div className=\"col\">\n                <label htmlFor=\"lname\"> Last Name* </label>\n                <input name=\"lname\" type=\"text\" className=\"form-control\" required/>\n                </div>\n                </div>\n\n                <div className=\"form-group\">\n                <label htmlFor=\"email\"> Email* </label>\n                <input name=\"email\" type=\"email\" className=\"form-control\" required/>\n                </div>\n\n\n                <div className=\"form-group\">\n                <label htmlFor=\"phone\"> Phone number (digits only)* </label>\n                <input name=\"phone\" type=\"tel\" pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\" className=\"form-control\" required/>\n                </div>\n\n\n                <div className=\"form-group d-flex justify-content-center \">\n                <button type=\"submit\" className=\"btn btn-primary\">Review and Submit Order</button>\n                </div>\n\n            </form>\n        </div>\n    )\n}\n\nexport default checkout\n"]},"metadata":{},"sourceType":"module"}