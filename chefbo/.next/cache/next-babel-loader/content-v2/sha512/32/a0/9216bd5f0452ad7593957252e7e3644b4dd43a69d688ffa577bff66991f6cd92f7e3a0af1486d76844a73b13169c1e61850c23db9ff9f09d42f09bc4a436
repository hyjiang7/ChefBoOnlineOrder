{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/items/[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport OptionalMods from \"../../../components/OptionalMods\";\nimport RequiredMods from \"../../../components/RequiredMods\";\nimport Link from \"next/link\";\nimport { Button, Card, ListGroup, ListGroupitem } from \"react-bootstrap\";\nimport utility from \"../../../styles/utility.module.css\";\nimport MenuItemDes from \"../../../components/MenuItemDes\";\nimport MenuItemName from \"../../../components/MenuItemName\";\nimport MenuItemPrice from \"../../../components/MenuItemPrice\";\nimport { addToCart } from \"../../../state/Actions\";\nimport store from \"../../../state/GlobalState\";\nimport { useRouter } from 'next/router'; //set state\n//use effect upon individual price change\n//no need to use global state\n//item for state needs to include item subtotal price\n\nvar itemDetail = function itemDetail(_ref) {\n  _s();\n\n  var item = _ref.item;\n  var _item$detail = item.detail,\n      Price = _item$detail.Price,\n      Name = _item$detail.Name,\n      Description = _item$detail.Description;\n\n  var _useState = useState(Price),\n      itemTotal = _useState[0],\n      setItemTotal = _useState[1];\n\n  var _useState2 = useState([]),\n      selectedMods = _useState2[0],\n      setSelectedMods = _useState2[1];\n\n  var router = useRouter();\n  var reqModSelected;\n\n  var handleModChange = function handleModChange(modIdAdd, modIdRemove, price, name, reqMod) {\n    var removeIndex;\n    var selectedModsTemp = selectedMods;\n    reqModSelected = reqMod;\n    var modObj = {};\n    modObj.ID = modIdAdd;\n    modObj.Price = price;\n    modObj.Name = name;\n\n    if (modIdRemove) {\n      removeIndex = selectedModsTemp.findIndex(function (i) {\n        return i.ID == modIdRemove.toString();\n      });\n      selectedModsTemp.splice(removeIndex, 1);\n    }\n\n    if (modIdAdd) {\n      selectedModsTemp.push(modObj);\n    }\n\n    setSelectedMods(selectedModsTemp);\n    setItemTotal(price + itemTotal);\n  };\n\n  var handleAddToCart = function handleAddToCart(e) {\n    e.preventDefault();\n\n    if (reqModSelected) {\n      var sendItem = {\n        item: item.detail,\n        mods: selectedMods\n      };\n\n      var _store$getState = store.getState(),\n          cart = _store$getState.cart;\n\n      store.dispatch(addToCart(sendItem, cart));\n      router.push(\"/routes/pickup\");\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-2 px-3 col col-md-8 col-lg-6  m-auto justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/routes/pickup\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"\".concat(utility.fontSizeMedium, \" far fa-arrow-circle-left \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\".concat(utility.fontSizeMedium),\n        children: [/*#__PURE__*/_jsxDEV(MenuItemName, {\n          name: Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(MenuItemDes, {\n          des: Description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(MenuItemPrice, {\n          price: Price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [item.RequiredMods <= 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Required Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(RequiredMods, {\n              mods: item.RequiredMods,\n              onchange: handleModChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, _this), item.OptionalMods <= 0 ? null : /*#__PURE__*/_jsxDEV(OptionalMods, {\n            mods: item.OptionalMods,\n            onchange: handleModChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" px-3 row justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"dark\",\n              className: \"col col-md-6\",\n              type: \"submit\",\n              onClick: handleAddToCart,\n              children: [\"Add to Cart $ \", itemTotal.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(itemDetail, \"D803RbnSfKj31uMLudpCoILMzgo=\", false, function () {\n  return [useRouter];\n});\n\nexport var __N_SSP = true;\nexport default itemDetail;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/items/[id].js"],"names":["React","useState","useContext","OptionalMods","RequiredMods","Link","Button","Card","ListGroup","ListGroupitem","utility","MenuItemDes","MenuItemName","MenuItemPrice","addToCart","store","useRouter","itemDetail","item","detail","Price","Name","Description","itemTotal","setItemTotal","selectedMods","setSelectedMods","router","reqModSelected","handleModChange","modIdAdd","modIdRemove","price","name","reqMod","removeIndex","selectedModsTemp","modObj","ID","findIndex","i","toString","splice","push","handleAddToCart","e","preventDefault","sendItem","mods","getState","cart","dispatch","fontSizeMedium","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport OptionalMods from \"../../../components/OptionalMods\";\nimport RequiredMods from \"../../../components/RequiredMods\";\nimport Link from \"next/link\";\nimport { Button, Card, ListGroup, ListGroupitem } from \"react-bootstrap\";\nimport utility from \"../../../styles/utility.module.css\";\nimport MenuItemDes from \"../../../components/MenuItemDes\";\nimport MenuItemName from \"../../../components/MenuItemName\";\nimport MenuItemPrice from \"../../../components/MenuItemPrice\";\nimport { addToCart } from \"../../../state/Actions\";\nimport store from \"../../../state/GlobalState\";\nimport { useRouter } from 'next/router';\n\n\n//set state\n//use effect upon individual price change\n//no need to use global state\n//item for state needs to include item subtotal price\nconst itemDetail = ({ item }) => {\n\n  const { Price, Name, Description } = item.detail;\n\n  const [itemTotal, setItemTotal] = useState(Price);\n  const [selectedMods, setSelectedMods] = useState([]);\n  const router = useRouter();\n    var reqModSelected;\n\n  const handleModChange = (modIdAdd, modIdRemove, price, name, reqMod) => {\n    let removeIndex;\n    let selectedModsTemp = selectedMods;\n    reqModSelected = reqMod\n\n    var modObj = {};\n    modObj.ID = modIdAdd;\n    modObj.Price = price;\n    modObj.Name = name;\n\n\n    if (modIdRemove) {\n      removeIndex = selectedModsTemp.findIndex((i) => {\n        return i.ID == modIdRemove.toString();\n      });\n      selectedModsTemp.splice(removeIndex, 1);\n    }\n\n    if (modIdAdd) {\n      selectedModsTemp.push(modObj);\n    }\n\n    setSelectedMods(selectedModsTemp);\n    setItemTotal(price + itemTotal);\n  };\n\n  const handleAddToCart = (e) => {\n    \n\n    e.preventDefault();\n\n    if(reqModSelected){\n        const sendItem = {\n            item: item.detail,\n            mods: selectedMods,\n        };\n    \n        const { cart } = store.getState();\n    \n        store.dispatch(addToCart(sendItem, cart));\n        router.push(\"/routes/pickup\")\n    }\n    else{\n\n\n    }\n        \n    \n    \n  };\n\n  return (\n    <div className=\"p-2 px-3 col col-md-8 col-lg-6  m-auto justify-content-center\">\n      <Link href=\"/routes/pickup\">\n        <i\n          className={`${utility.fontSizeMedium} far fa-arrow-circle-left `}\n        ></i>\n      </Link>\n      <div>\n        <div className={`${utility.fontSizeMedium}`}>\n          <MenuItemName name={Name} />\n          <MenuItemDes des={Description} />\n          <MenuItemPrice price={Price} />\n        </div>\n        <div>\n          <form>\n            {item.RequiredMods <= 0 ? null : (\n                <div>\n                        <p>Required Selection</p>\n                        <p></p>\n                        <RequiredMods\n                            mods={item.RequiredMods}\n                            onchange={handleModChange}\n                        />\n                </div>\n                \n            )}\n\n            {item.OptionalMods <= 0 ? null : (\n              <OptionalMods\n                mods={item.OptionalMods}\n                onchange={handleModChange}\n              />\n            )}\n\n            <div className=\" px-3 row justify-content-center\">\n              <Button\n                variant=\"dark\"\n                className=\"col col-md-6\"\n                type=\"submit\"\n                onClick={handleAddToCart}\n              >\n                Add to Cart $ {itemTotal.toFixed(2)}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport async function getServerSideProps({ params: { id } }) {\n  const res = await fetch(`http://localhost:5001/details/${id}`);\n  const item = await res.json();\n\n  // server side rendering\n  return {\n    props: { item }, // will be passed to the page component as props\n  };\n}\n\nexport default itemDetail;\n"]},"metadata":{},"sourceType":"module"}