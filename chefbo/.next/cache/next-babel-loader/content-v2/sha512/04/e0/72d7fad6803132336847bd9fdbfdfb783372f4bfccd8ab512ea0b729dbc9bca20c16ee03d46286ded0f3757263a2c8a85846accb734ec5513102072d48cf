{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/state/GlobalState.js\";\nimport { createContext, useReducer, useEffect, useContext } from 'react';\nimport reducers from './Reducers';\nconst StoreContext = /*#__PURE__*/createContext();\n\nconst GlobalStore = props => {\n  const initialState = {\n    cart: []\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducers, initialState); //using combine reducers alike\n\n  console.log(state);\n  console.log(dispatch);\n  const cart = state;\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: {\n      state,\n      dispatch\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\nexport const useStore = () => useContext(StoreContext); //custom hook useStore\n\nexport default GlobalStore;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/state/GlobalState.js"],"names":["createContext","useReducer","useEffect","useContext","reducers","StoreContext","GlobalStore","props","initialState","cart","state","dispatch","console","log","useStore"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGE,MAAMC,YAAY,gBAAGL,aAAa,EAAlC;;AAGA,MAAMM,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAE;AADW,GAArB;AAIA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,UAAU,CAACG,QAAD,EAAWI,YAAX,CAApC,CAL6B,CAKoC;;AACjEI,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMF,IAAI,GAAGC,KAAb;AAGA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAA9B;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAdC;;AAgBF,OAAO,MAAMG,QAAQ,GAAG,MAAMX,UAAU,CAACE,YAAD,CAAjC,C,CAAkD;;AACzD,eAAeC,WAAf","sourcesContent":["import { createContext, useReducer, useEffect, useContext } from 'react'\nimport reducers from './Reducers'\n\n\n  const StoreContext = createContext();\n\n\n  const GlobalStore = (props) => {\n    const initialState = { \n        cart: []\n    };\n\n    const [state, dispatch] = useReducer(reducers, initialState);    //using combine reducers alike\n    console.log(state)\n    console.log(dispatch)\n    const cart = state;\n\n\n    return(\n        <StoreContext.Provider value={{state, dispatch}}/> \n    );\n};\n\nexport const useStore = () => useContext(StoreContext);  //custom hook useStore\nexport default GlobalStore;"]},"metadata":{},"sourceType":"module"}