{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/cart.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport store from \"../../state/GlobalState\";\nimport CartItem from \"../../components/CartItem\";\nimport { deleteFromCart } from \"../../state/Actions\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Button } from \"react-bootstrap\";\n\nvar cart = function cart() {\n  _s();\n\n  var _store$getState = store.getState(),\n      Cart = _store$getState.Cart;\n\n  var router = useRouter();\n\n  var _useState = useState(0),\n      cartTotal = _useState[0],\n      setCartTotal = _useState[1];\n\n  var _useState2 = useState(0),\n      totalCartItems = _useState2[0],\n      setTotalCartItems = _useState2[1]; //get total the first time\n\n\n  useEffect(function () {\n    console.log(\"use effect run # \", count++);\n    var temp = 0;\n    var count = 0;\n    Cart.map(function (item, index) {\n      console.log(\"temp in map \", temp);\n      temp += item.itemTotal;\n      count += 1;\n    });\n    console.log(temp);\n    setCartTotal(temp);\n  }, [store.getState().Cart]);\n\n  var deleteCartItem = function deleteCartItem(index) {\n    store.dispatch(deleteFromCart(index, Cart));\n    router.push(\"/routes/cart\");\n  };\n\n  if (Cart.length == 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" Cart is empty! Add items to begin order.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [Cart.map(function (item, index) {\n      return /*#__PURE__*/_jsxDEV(CartItem, {\n        item: item,\n        index: index,\n        deleteHandle: deleteCartItem\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      children: [\"Checkout $\", cartTotal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(cart, \"vBnnHZakOWynwTtV6Uz1OtT3CWE=\", false, function () {\n  return [useRouter];\n});\n\nexport default cart;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/cart.js"],"names":["store","CartItem","deleteFromCart","React","useState","useContext","useEffect","useRouter","Button","cart","getState","Cart","router","cartTotal","setCartTotal","totalCartItems","setTotalCartItems","console","log","count","temp","map","item","index","itemTotal","deleteCartItem","dispatch","push","length"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,wBAGAT,KAAK,CAACU,QAAN,EAHA;AAAA,MAGTC,IAHS,mBAGTA,IAHS;;AAIjB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AAJiB,kBAKiBH,QAAQ,CAAC,CAAD,CALzB;AAAA,MAKVS,SALU;AAAA,MAKCC,YALD;;AAAA,mBAM2BV,QAAQ,CAAC,CAAD,CANnC;AAAA,MAMVW,cANU;AAAA,MAMMC,iBANN,kBAQjB;;;AAEEV,EAAAA,SAAS,CAAC,YAAK;AACXW,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCC,KAAK,EAAtC;AACA,QAAIC,IAAI,GAAG,CAAX;AACA,QAAID,KAAK,GAAG,CAAZ;AACAR,IAAAA,IAAI,CAACU,GAAL,CAAS,UAACC,IAAD,EAAMC,KAAN,EAAe;AACpBN,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,IAA5B;AACAA,MAAAA,IAAI,IAAIE,IAAI,CAACE,SAAb;AACAL,MAAAA,KAAK,IAAI,CAAT;AACH,KAJD;AAKAF,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAN,IAAAA,YAAY,CAACM,IAAD,CAAZ;AAGH,GAbQ,EAaN,CAACpB,KAAK,CAACU,QAAN,GAAiBC,IAAlB,CAbM,CAAT;;AAiBF,MAAMc,cAAc,GAAG,SAAjBA,cAAiB,CAACF,KAAD,EAAW;AAChCvB,IAAAA,KAAK,CAAC0B,QAAN,CAAexB,cAAc,CAACqB,KAAD,EAAQZ,IAAR,CAA7B;AACAC,IAAAA,MAAM,CAACe,IAAP,CAAY,cAAZ;AACD,GAHD;;AAKA,MAAIhB,IAAI,CAACiB,MAAL,IAAe,CAAnB,EACE,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAEF,sBACE;AAAA,eACGjB,IAAI,CAACU,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,0BACR,QAAC,QAAD;AAEE,QAAA,IAAI,EAAED,IAFR;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,YAAY,EAAEE;AAJhB,SACOF,KADP;AAAA;AAAA;AAAA;AAAA,eADQ;AAAA,KAAT,CADH,eASE,QAAC,MAAD;AAAA,+BAAmBV,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,aATF;AAAA,kBADF;AAaD,CAhDD;;GAAMJ,I;UAIWF,S;;;AA8CjB,eAAeE,IAAf","sourcesContent":["import store from \"../../state/GlobalState\";\nimport CartItem from \"../../components/CartItem\";\nimport { deleteFromCart } from \"../../state/Actions\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Button } from \"react-bootstrap\";\n\nconst cart = () => {\n\n\n  const { Cart } = store.getState();\n  const router = useRouter();\n  const [cartTotal, setCartTotal] = useState(0);\n  const [totalCartItems, setTotalCartItems] = useState(0);\n\n  //get total the first time\n\n    useEffect(() =>{\n        console.log(\"use effect run # \", count++)\n        var temp = 0;\n        var count = 0;\n        Cart.map((item,index) =>{\n            console.log(\"temp in map \", temp)\n            temp += item.itemTotal\n            count += 1;\n        })\n        console.log(temp) \n        setCartTotal(temp)\n\n        \n    }, [store.getState().Cart])\n\n\n\n  const deleteCartItem = (index) => {\n    store.dispatch(deleteFromCart(index, Cart));\n    router.push(\"/routes/cart\");\n  };\n\n  if (Cart.length == 0)\n    return <p> Cart is empty! Add items to begin order.</p>;\n\n  return (\n    <>\n      {Cart.map((item, index) => (\n        <CartItem\n          key={index}\n          item={item}\n          index={index}\n          deleteHandle={deleteCartItem}\n        ></CartItem>\n      ))}\n      <Button>Checkout ${cartTotal}</Button>\n    </>\n  );\n};\n\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}