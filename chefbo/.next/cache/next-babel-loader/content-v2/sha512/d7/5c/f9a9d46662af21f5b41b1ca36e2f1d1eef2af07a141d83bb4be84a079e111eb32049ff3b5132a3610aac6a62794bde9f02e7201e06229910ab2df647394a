{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/OptionalMods.js\";\nimport React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\nconst ADD = 1;\nconst REMOVE = -1;\n\nfunction OptionalMods({\n  mods,\n  onchange\n}) {\n  mods.map((mod, index) => console.log(mod));\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(Array(mods.length).fill(false));\n\n  function handleChange(event) {\n    const index = event.target.value;\n    const modIdAdd = event.target.id;\n    var price = mods[index][2];\n\n    if (event.target.checked) {\n      onchange(modIdAdd, null, price);\n    } else {\n      onchange(null, modIdAdd, price * REMOVE);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: `${utility.fontSizeSmall}`,\n      children: \" Optional Selections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), mods.map((mod, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: mod.ID,\n        name: `optMod${mod.Name}`,\n        value: index,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"d-inline-flex w-50 justify-content-between p-1\" // htmlFor={`optMod${mod[0]}`}\n        ,\n        htmlFor: mod.ID,\n        children: [/*#__PURE__*/_jsxDEV(MenuItemName, {\n          name: mod.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItemPrice, {\n          price: mod.Price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\nexport default OptionalMods;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/OptionalMods.js"],"names":["React","useState","MenuItemName","MenuItemPrice","utility","ADD","REMOVE","OptionalMods","mods","onchange","map","mod","index","console","log","selected","setSelected","Array","length","fill","handleChange","event","target","value","modIdAdd","id","price","checked","fontSizeSmall","ID","Name","Price"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,MAAMC,GAAG,GAAG,CAAZ;AACA,MAAMC,MAAM,GAAG,CAAC,CAAhB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAtB,EAA0C;AAItCD,EAAAA,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KACLC,OAAO,CAACC,GAAR,CAAYH,GAAZ,CADJ;AAGF,QAAM;AAAA,OAACI,QAAD;AAAA,OAAWC;AAAX,MAA0Bf,QAAQ,CAACgB,KAAK,CAACT,IAAI,CAACU,MAAN,CAAL,CAAmBC,IAAnB,CAAwB,KAAxB,CAAD,CAAxC;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,UAAMT,KAAK,GAAGS,KAAK,CAACC,MAAN,CAAaC,KAA3B;AACA,UAAMC,QAAQ,GAAGH,KAAK,CAACC,MAAN,CAAaG,EAA9B;AAEA,QAAIC,KAAK,GAAGlB,IAAI,CAACI,KAAD,CAAJ,CAAY,CAAZ,CAAZ;;AAEA,QAAIS,KAAK,CAACC,MAAN,CAAaK,OAAjB,EAA0B;AACxBlB,MAAAA,QAAQ,CAACe,QAAD,EAAW,IAAX,EAAiBE,KAAjB,CAAR;AACD,KAFD,MAEO;AACLjB,MAAAA,QAAQ,CAAC,IAAD,EAAOe,QAAP,EAAiBE,KAAK,GAAGpB,MAAzB,CAAR;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BAKE;AAAG,MAAA,SAAS,EAAG,GAAEF,OAAO,CAACwB,aAAc,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAMGpB,IAAI,CAACE,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,kBACR;AAAA,8BAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAED,GAAG,CAACkB,EAFV;AAGE,QAAA,IAAI,EAAG,SAAQlB,GAAG,CAACmB,IAAK,EAH1B;AAIE,QAAA,KAAK,EAAElB,KAJT;AAKE,QAAA,QAAQ,EAAEQ;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AACE,QAAA,SAAS,EAAC,gDADZ,CAEE;AAFF;AAGE,QAAA,OAAO,EAAET,GAAG,CAACkB,EAHf;AAAA,gCAKE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAElB,GAAG,CAACmB;AAAxB;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEnB,GAAG,CAACoB;AAA1B;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA,OAAUnB,KAAV;AAAA;AAAA;AAAA;AAAA,YADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;AAED,eAAeL,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\n\nconst ADD = 1;\nconst REMOVE = -1;\n\nfunction OptionalMods({ mods, onchange }) {\n\n    \n\n    mods.map((mod, index) => (\n        console.log(mod)\n    ))\n  const [selected, setSelected] = useState(Array(mods.length).fill(false));\n\n  function handleChange(event) {\n    const index = event.target.value;\n    const modIdAdd = event.target.id;\n\n    var price = mods[index][2];\n\n    if (event.target.checked) {\n      onchange(modIdAdd, null, price);\n    } else {\n      onchange(null, modIdAdd, price * REMOVE);\n    }\n  }\n\n  return (\n    <div className=\"py-2\">\n      {/* {mods.length <= 0 ? null : (\n        <p className={`${utility.fontSizeSmall}`}> Optional Selections</p>\n      )} */}\n\n      <p className={`${utility.fontSizeSmall}`}> Optional Selections</p>\n      {mods.map((mod, index) => (\n        <div key={index}>\n          \n          <input\n            type=\"checkbox\"\n            id={mod.ID} \n            name={`optMod${mod.Name}`}\n            value={index}\n            onChange={handleChange}\n          />\n\n          <label\n            className=\"d-inline-flex w-50 justify-content-between p-1\"\n            // htmlFor={`optMod${mod[0]}`}\n            htmlFor={mod.ID}\n          >\n            <MenuItemName name={mod.Name} />\n            <MenuItemPrice price={mod.Price} />\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default OptionalMods;\n"]},"metadata":{},"sourceType":"module"}