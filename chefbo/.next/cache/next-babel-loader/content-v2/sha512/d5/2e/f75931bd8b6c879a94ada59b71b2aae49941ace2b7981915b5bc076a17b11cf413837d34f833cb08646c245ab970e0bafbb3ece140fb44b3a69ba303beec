{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/MenuItemCate.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRoute, useRef } from 'react';\nimport MenuItem from './MenuItem';\nimport { Card } from \"react-bootstrap\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport store from '../state/GlobalState';\nimport { setLunch } from '../state/Actions'; //all the items in one category\n\nvar MenuItemCate = function MenuItemCate(_ref) {\n  _s();\n\n  var cate = _ref.cate,\n      menuItem = _ref.menuItem,\n      id = _ref.id,\n      type = _ref.type,\n      myRef = _ref.myRef,\n      onScrollChange = _ref.onScrollChange;\n  var items = menuItem[0];\n  var lunch = cate == \"Lunch Specials\" ? true : false;\n\n  var _useState = useState(0),\n      newScroll = _useState[0],\n      setScroll = _useState[1];\n\n  var executeScroll = function executeScroll() {\n    console.log(myRef);\n    var offsetTop = myRef.current.offsetTop;\n    setScroll(offsetTop);\n    window.scrollTo({\n      behavior: 'smooth',\n      top: myRef.current.offsetTop\n    }); // onScrollChange(offsetTop);\n  };\n\n  useEffect(function () {\n    console.log(newScroll); // myRef.current.scrollTop = newScroll;\n  }, [newScroll]);\n\n  if (lunch) {\n    var lunchIds = [];\n    items.map(function (item, index) {\n      lunchIds.push(item.ID);\n    });\n    store.dispatch(setLunch(lunchIds));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      ref: myRef,\n      children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: id,\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: cate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"w-80 m-auto\",\n            id: id,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-wrap justify-content-center\",\n              children: items.map(function (item, index) {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  item: item,\n                  type: type\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(MenuItemCate, \"uMtekefAUBkUVxQPCCLAa6wGbGY=\");\n\n_c = MenuItemCate;\nexport default MenuItemCate;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuItemCate\");","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/MenuItemCate.js"],"names":["useState","useEffect","useRoute","useRef","MenuItem","Card","Accordion","store","setLunch","MenuItemCate","cate","menuItem","id","type","myRef","onScrollChange","items","lunch","newScroll","setScroll","executeScroll","console","log","offsetTop","current","window","scrollTo","behavior","top","lunchIds","map","item","index","push","ID","dispatch"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRoute, useRef } from 'react'\nimport MenuItem from './MenuItem'\nimport {\n    Card,\n  } from \"react-bootstrap\";\nimport Accordion from 'react-bootstrap/Accordion'\nimport store from '../state/GlobalState';\nimport { setLunch } from '../state/Actions';\n\n\n  //all the items in one category\nconst MenuItemCate = ({cate, menuItem, id, type, myRef, onScrollChange}) => {\n    \n    const items = menuItem[0]\n    var lunch = (cate == \"Lunch Specials\") ? true : false\n\n    const [newScroll, setScroll] = useState(0)\n        const executeScroll = () =>{\n            console.log(myRef)\n            const offsetTop = myRef.current.offsetTop\n            setScroll(offsetTop)\n            window.scrollTo({ behavior: 'smooth', top: myRef.current.offsetTop })\n\n            // onScrollChange(offsetTop);\n        }\n\n    useEffect(()=>{\n        console.log(newScroll)\n        // myRef.current.scrollTop = newScroll;\n\n    }, [newScroll])\n\n    if(lunch)\n    {\n        var lunchIds = [];\n        items.map((item, index) =>{\n            lunchIds.push(item.ID)\n        })\n\n        store.dispatch(setLunch(lunchIds))\n    }\n\n    return  (\n        <div>  \n            <Card ref={myRef}>\n                {/* <Accordion.Toggle as={Card.Header}  eventKey={id}  style={{fontWeight:500}} onClick={executeScroll}>\n                {cate}\n                {lunch? \" (11:00am - 3:00pm only)\" : null}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={id} >\n                <Card.Body className=\"w-80 m-auto\" id={id} >\n                    <div className=\"d-flex flex-wrap justify-content-center\" >\n                    {\n                        items.map((item, index) =>\n                        (\n                            <MenuItem key={index} item={item} type={type}/>\n                        ))\n                    }\n                    </div>\n\n                </Card.Body>\n                </Accordion.Collapse> */}\n                <Accordion.Item eventKey={id}>\n                    <Accordion.Header>{cate}</Accordion.Header>\n                    <Accordion.Body>\n                            <Card.Body className=\"w-80 m-auto\" id={id} >\n                            <div className=\"d-flex flex-wrap justify-content-center\" >\n                            {\n                                items.map((item, index) =>\n                                (\n                                    <MenuItem key={index} item={item} type={type}/>\n                                ))\n                            }\n                            </div>\n\n                        </Card.Body>\n                    </Accordion.Body>\n                </Accordion.Item>\n\n            </Card>\n        </div>\n    )\n    \n}\n\n\nexport default MenuItemCate\n"]},"metadata":{},"sourceType":"module"}