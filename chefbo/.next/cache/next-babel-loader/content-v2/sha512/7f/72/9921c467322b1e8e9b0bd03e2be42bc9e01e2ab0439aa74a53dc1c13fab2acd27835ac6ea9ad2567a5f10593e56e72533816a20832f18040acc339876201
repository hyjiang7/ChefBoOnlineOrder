{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/items/[id].js\";\nimport React, { useState, useContext } from \"react\";\nimport OptionalMods from \"../../../components/OptionalMods\";\nimport RequiredMods from \"../../../components/RequiredMods\";\nimport Link from \"next/link\";\nimport { Button, Card, ListGroup, ListGroupitem } from \"react-bootstrap\";\nimport utility from \"../../../styles/utility.module.css\";\nimport MenuItemDes from \"../../../components/MenuItemDes\";\nimport MenuItemName from \"../../../components/MenuItemName\";\nimport MenuItemPrice from \"../../../components/MenuItemPrice\";\nimport { addToCart } from \"../../../state/Actions\";\nimport store from \"../../../state/GlobalState\"; //set state\n//use effect upon individual price change\n//no need to use global state\n//item for state needs to include item subtotal price\n\nconst itemDetail = ({\n  item\n}) => {\n  const {\n    Price,\n    Name,\n    Description\n  } = item.detail;\n  const priceInit = Price;\n  const {\n    0: itemTotal,\n    1: setItemTotal\n  } = useState(priceInit);\n  const {\n    0: selectedMods,\n    1: setSelectedMods\n  } = useState([]);\n\n  const handleModChange = (modIdAdd, modIdRemove, price, name) => {\n    let removeIndex;\n    let selectedModsTemp = selectedMods;\n    var modObj = {};\n    modObj.ID = modIdAdd;\n    modObj.Price = price;\n    modObj.Name = name;\n\n    if (modIdRemove) {\n      removeIndex = selectedModsTemp.findIndex(i => {\n        return i.ID == modIdRemove.toString();\n      });\n      selectedModsTemp.splice(removeIndex, 1);\n    }\n\n    if (modIdAdd) {\n      selectedModsTemp.push(modObj);\n    }\n\n    setSelectedMods(selectedModsTemp);\n    setItemTotal(price + itemTotal);\n  };\n\n  const handleAddToCart = () => {\n    //check if user makes a required selection\n    //add item with required selections and optional selections\n    console.log(selectedMods);\n    const sendItem = {\n      item: item.detail,\n      mods: selectedMods\n    };\n    const {\n      cart\n    } = store.getState();\n    store.dispatch(addToCart(sendItem, cart)); // console.log(\" cart in add to cart button on id.js\", cart);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-2 px-3 col col-md-8 col-lg-6  m-auto justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/routes/pickup\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `${utility.fontSizeMedium} far fa-arrow-circle-left `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${utility.fontSizeMedium}`,\n        children: /*#__PURE__*/_jsxDEV(MenuItemName, {\n          name: Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItemDes, {\n        des: Description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItemPrice, {\n        price: Price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), item.RequiredMods <= 0 ? null : /*#__PURE__*/_jsxDEV(RequiredMods, {\n        mods: item.RequiredMods,\n        onchange: handleModChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), item.OptionalMods <= 0 ? null : /*#__PURE__*/_jsxDEV(OptionalMods, {\n        mods: item.OptionalMods,\n        onchange: handleModChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" px-3 row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        className: \"col col-md-6\",\n        onClick: handleAddToCart,\n        children: [\"Add to Cart $ \", itemTotal.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getServerSideProps({\n  params: {\n    id\n  }\n}) {\n  const res = await fetch(`http://localhost:5001/details/${id}`);\n  const item = await res.json(); // server side rendering\n\n  return {\n    props: {\n      item\n    } // will be passed to the page component as props\n\n  };\n}\nexport default itemDetail;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/items/[id].js"],"names":["React","useState","useContext","OptionalMods","RequiredMods","Link","Button","Card","ListGroup","ListGroupitem","utility","MenuItemDes","MenuItemName","MenuItemPrice","addToCart","store","itemDetail","item","Price","Name","Description","detail","priceInit","itemTotal","setItemTotal","selectedMods","setSelectedMods","handleModChange","modIdAdd","modIdRemove","price","name","removeIndex","selectedModsTemp","modObj","ID","findIndex","i","toString","splice","push","handleAddToCart","console","log","sendItem","mods","cart","getState","dispatch","fontSizeMedium","toFixed","getServerSideProps","params","id","res","fetch","json","props"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport OptionalMods from \"../../../components/OptionalMods\";\nimport RequiredMods from \"../../../components/RequiredMods\";\nimport Link from \"next/link\";\nimport { Button, Card, ListGroup, ListGroupitem } from \"react-bootstrap\";\nimport utility from \"../../../styles/utility.module.css\";\nimport MenuItemDes from \"../../../components/MenuItemDes\";\nimport MenuItemName from \"../../../components/MenuItemName\";\nimport MenuItemPrice from \"../../../components/MenuItemPrice\";\nimport { addToCart } from \"../../../state/Actions\";\nimport store from \"../../../state/GlobalState\";\n\n//set state\n//use effect upon individual price change\n//no need to use global state\n//item for state needs to include item subtotal price\nconst itemDetail = ({ item }) => {\n  const { Price, Name, Description } = item.detail;\n  \n\n  const priceInit = Price;\n  const [itemTotal, setItemTotal] = useState(priceInit);\n  const [selectedMods, setSelectedMods] = useState([]);\n\n  const handleModChange = (modIdAdd, modIdRemove, price, name) => {\n    \n    let removeIndex;\n    let selectedModsTemp = selectedMods;\n\n    var modObj = {};\n    modObj.ID = modIdAdd;\n    modObj.Price = price;\n    modObj.Name = name;\n\n    if (modIdRemove) {\n      removeIndex = selectedModsTemp.findIndex((i) => {\n          return i.ID == modIdRemove.toString()\n        });\n      selectedModsTemp.splice(removeIndex, 1);\n    }\n\n    if (modIdAdd) {\n      selectedModsTemp.push(modObj);\n    }\n\n    setSelectedMods(selectedModsTemp);\n    setItemTotal(price + itemTotal);\n  };\n\n  const handleAddToCart = () => {\n    //check if user makes a required selection\n    //add item with required selections and optional selections\n    console.log(selectedMods)\n\n\n    \n    const sendItem = {\n      item: item.detail,\n      mods: selectedMods,\n    };\n\n    const { cart } = store.getState();\n\n    store.dispatch(addToCart(sendItem, cart));\n\n    // console.log(\" cart in add to cart button on id.js\", cart);\n  };\n\n  return (\n    <div className=\"p-2 px-3 col col-md-8 col-lg-6  m-auto justify-content-center\">\n      <Link href=\"/routes/pickup\">\n        <i\n          className={`${utility.fontSizeMedium} far fa-arrow-circle-left `}\n        ></i>\n      </Link>\n      <div className=\"\">\n        <div className={`${utility.fontSizeMedium}`}>\n          <MenuItemName name={Name} />\n        </div>\n        <MenuItemDes des={Description} />\n        <MenuItemPrice price={Price} />\n\n        {item.RequiredMods <= 0 ? null : (\n          <RequiredMods mods={item.RequiredMods} onchange={handleModChange} />\n        )}\n\n        {item.OptionalMods <= 0 ? null : (\n          <OptionalMods mods={item.OptionalMods} onchange={handleModChange} />\n        )}\n      </div>\n      <div className=\" px-3 row justify-content-center\">\n        <Button\n          variant=\"dark\"\n          className=\"col col-md-6\"\n          onClick={handleAddToCart}\n        >\n          Add to Cart $ {itemTotal.toFixed(2)}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport async function getServerSideProps({ params: { id } }) {\n  const res = await fetch(`http://localhost:5001/details/${id}`);\n  const item = await res.json();\n\n  // server side rendering\n  return {\n    props: { item }, // will be passed to the page component as props\n  };\n}\n\nexport default itemDetail;\n"]},"metadata":{},"sourceType":"module"}