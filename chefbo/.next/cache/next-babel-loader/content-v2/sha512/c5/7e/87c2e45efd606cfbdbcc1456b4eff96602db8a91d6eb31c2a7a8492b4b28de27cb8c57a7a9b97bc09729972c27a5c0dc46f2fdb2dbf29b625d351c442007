{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/items/[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport OptionalMods from \"../../../components/OptionalMods\";\nimport RequiredMods from \"../../../components/RequiredMods\";\nimport Link from \"next/link\";\nimport { Button, Card, ListGroup, ListGroupitem } from \"react-bootstrap\";\nimport utility from \"../../../styles/utility.module.css\";\nimport MenuItemDes from \"../../../components/MenuItemDes\";\nimport MenuItemName from \"../../../components/MenuItemName\";\nimport MenuItemPrice from \"../../../components/MenuItemPrice\"; //set state\n//use effect upon individual price change\n//no need to use global state \n//item for state needs to include item subtotal price\n\nvar itemDetail = function itemDetail(_ref) {\n  _s();\n\n  var item = _ref.item;\n  var priceInit = item.item[2];\n\n  var _useState = useState(priceInit),\n      itemTotal = _useState[0],\n      setItemTotal = _useState[1]; // const [modsSelected, setSelectedMod] = useState(Array( + ).fill(false))\n  // const [optModsSelected, setOpMods] = useState(Array(item.modifiers.length).fill(false));\n  // const [reqModsSelected, setReqMods] = useState(Array(item.reqModifiers.length).fill(false));\n\n\n  var _useState2 = useState([0]),\n      selectedMods = _useState2[0],\n      setSelectedMods = _useState2[1];\n\n  var handleModChange = function handleModChange(modIdAdd, modIdRemove, price) {\n    var removeIndex, addIndex;\n    var selectedModsTemp = selectedMods; //if modIdRemove...\n    //find modId in selectedMods and remove it\n\n    if (modIdRemove) {\n      removeIndex = selectedModsTemp.indexOf(modIdRemove);\n      selectedModsTemp.splice(removeIndex, 1);\n    }\n\n    if (modIdAdd) {\n      selectedModsTemp.push(modIdAdd);\n    }\n\n    setSelectedMods(selectedModsTemp);\n    setItemTotal(price + itemTotal); //ifmodIdAdd... push to selectedMods\n  };\n\n  var handleOptModChange = function handleOptModChange(selectedMods, price) {\n    setOpMods(selectedMods);\n    setItemTotal(price + itemTotal);\n  };\n\n  var handleReqModChange = function handleReqModChange(selectedMods, price) {\n    setReqMods(selectedMods);\n    setItemTotal(price + itemTotal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-2 px-3 col col-md-8 col-lg-6  m-auto justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/routes/pickup\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"\".concat(utility.fontSizeMedium, \" far fa-arrow-circle-left \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\".concat(utility.fontSizeMedium),\n        children: /*#__PURE__*/_jsxDEV(MenuItemName, {\n          name: item.item[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(MenuItemDes, {\n        des: item.item[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(MenuItemPrice, {\n        price: item.item[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(RequiredMods, {\n        mods: item.reqModifiers,\n        onchange: handleReqModChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(OptionalMods, {\n        mods: item.modifiers,\n        onchange: handleOptModChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" px-3 row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        className: \"col col-md-6\",\n        children: [\"Add to Cart $ \", itemTotal.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(itemDetail, \"6nGEtGyQQe++tgldhJo2Mz3sJfM=\");\n\nexport var __N_SSP = true;\nexport default itemDetail;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/items/[id].js"],"names":["React","useState","OptionalMods","RequiredMods","Link","Button","Card","ListGroup","ListGroupitem","utility","MenuItemDes","MenuItemName","MenuItemPrice","itemDetail","item","priceInit","itemTotal","setItemTotal","selectedMods","setSelectedMods","handleModChange","modIdAdd","modIdRemove","price","removeIndex","addIndex","selectedModsTemp","indexOf","splice","push","handleOptModChange","setOpMods","handleReqModChange","setReqMods","fontSizeMedium","reqModifiers","modifiers","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport OptionalMods from \"../../../components/OptionalMods\";\nimport RequiredMods from \"../../../components/RequiredMods\";\nimport Link from \"next/link\";\nimport { Button, Card, ListGroup, ListGroupitem } from \"react-bootstrap\";\nimport utility from \"../../../styles/utility.module.css\";\nimport MenuItemDes from \"../../../components/MenuItemDes\";\nimport MenuItemName from \"../../../components/MenuItemName\";\nimport MenuItemPrice from \"../../../components/MenuItemPrice\";\n\n\n\n//set state\n//use effect upon individual price change\n//no need to use global state \n//item for state needs to include item subtotal price\nconst itemDetail = ({ item }) => {\n\n  const priceInit = item.item[2]\n  const [itemTotal, setItemTotal] = useState(priceInit);\n  // const [modsSelected, setSelectedMod] = useState(Array( + ).fill(false))\n  // const [optModsSelected, setOpMods] = useState(Array(item.modifiers.length).fill(false));\n  // const [reqModsSelected, setReqMods] = useState(Array(item.reqModifiers.length).fill(false));\n  const [selectedMods, setSelectedMods] = useState([0])\n\n  const handleModChange = (modIdAdd, modIdRemove, price) =>\n  {\n    let removeIndex, addIndex;\n    let selectedModsTemp = selectedMods;\n    //if modIdRemove...\n    //find modId in selectedMods and remove it\n    if(modIdRemove)\n    {\n      removeIndex = selectedModsTemp.indexOf(modIdRemove)\n      selectedModsTemp.splice(removeIndex, 1)\n    }\n\n    if(modIdAdd)\n    {\n      selectedModsTemp.push(modIdAdd)\n    }\n\n    setSelectedMods(selectedModsTemp)\n    setItemTotal(price + itemTotal);\n    //ifmodIdAdd... push to selectedMods\n  }\n\n  const handleOptModChange = (selectedMods, price) =>\n  {\n    setOpMods(selectedMods)\n    setItemTotal(price + itemTotal);\n  }\n\n  const handleReqModChange = (selectedMods, price) =>\n  {\n    setReqMods(selectedMods)\n    setItemTotal(price + itemTotal);\n  }\n\n  return (\n    <div className=\"p-2 px-3 col col-md-8 col-lg-6  m-auto justify-content-center\">\n      <Link href=\"/routes/pickup\">\n        <i\n          className={`${utility.fontSizeMedium} far fa-arrow-circle-left `}\n        ></i>\n      </Link>\n      <div className=\"\">\n        <div className={`${utility.fontSizeMedium}`}>\n          <MenuItemName name={item.item[1]} />\n        </div>\n        <MenuItemDes des={item.item[3]} />\n        <MenuItemPrice price={item.item[2]} />\n\n        <RequiredMods mods={item.reqModifiers} onchange={handleReqModChange}/>\n\n        <OptionalMods mods={item.modifiers} onchange={handleOptModChange}/>\n      </div>\n      <div className=\" px-3 row justify-content-center\">\n        <Button variant=\"dark\" className=\"col col-md-6\">\n          Add to Cart $ {itemTotal.toFixed(2)}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\n\n\nexport async function getServerSideProps({ params: { id } }) {\n  const res = await fetch(`http://localhost:5001/details/${id}`);\n  const item = await res.json();\n\n\n  console.log(\"required mods: \\n\" + item.reqModifiers)\n\n  // server side rendering\n  return {\n    props: { item }, // will be passed to the page component as props\n  };\n}\n\nexport default itemDetail;\n"]},"metadata":{},"sourceType":"module"}