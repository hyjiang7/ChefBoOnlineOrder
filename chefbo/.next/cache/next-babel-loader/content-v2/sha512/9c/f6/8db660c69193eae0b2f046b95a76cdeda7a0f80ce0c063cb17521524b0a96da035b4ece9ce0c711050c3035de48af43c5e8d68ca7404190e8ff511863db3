{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/MenuItemCate.js\",\n    _this = this;\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport MenuItem from './MenuItem';\nimport { Accordion, Card } from \"react-bootstrap\";\nimport store from '../state/GlobalState';\nimport { setLunch } from '../state/Actions'; //all the items in one category\n\nvar MenuItemCate = function MenuItemCate(_ref) {\n  var cate = _ref.cate,\n      menuItem = _ref.menuItem,\n      id = _ref.id,\n      type = _ref.type;\n  var items = menuItem[0];\n  cate;\n  var lunch = Name == \"Lunch Special\" ? true : false;\n\n  if (lunch) {\n    var lunchIds = [];\n    items.map(function (item, index) {\n      lunchIds.push(item.ID);\n    });\n    store.dispatch(setLunch(lunchIds));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n        as: Card.Header,\n        eventKey: id,\n        style: {\n          fontWeight: 500\n        },\n        children: [Name, lunch ? \" (11:00am - 3:00pm only)\" : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n        eventKey: id,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"w-80 m-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-wrap justify-content-center\",\n            children: items.map(function (item, index) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                item: item,\n                type: type\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 29\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n}; // const getMenuItems = async (cate) =>\n// {\n//     var url;\n//     var item = []\n//     if(cate)\n//     {\n//         url = 'http://localhost:5001/' + cate\n//     }\n//      const data = await fetch(url)\n//     .then(response => response.json())\n//     .then(data => {\n//         for(var i = 0; i < data.length; i++)\n//         {\n//             item.push(data[i])\n//         }\n//         // console.log(item)\n//         return item;\n//     })\n//     return data;\n// };\n\n\n_c = MenuItemCate;\nMenuItemCate.propTypes = {// cate: PropTypes.string,\n};\nexport default MenuItemCate;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuItemCate\");","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/MenuItemCate.js"],"names":["PropTypes","useState","useEffect","MenuItem","Accordion","Card","store","setLunch","MenuItemCate","cate","menuItem","id","type","items","lunch","Name","lunchIds","map","item","index","push","ID","dispatch","Header","fontWeight","propTypes"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SACIC,SADJ,EAEIC,IAFJ,QAGS,iBAHT;AAKA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAGE;;AACF,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAgC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,EAAc,QAAdA,EAAc;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAEjD,MAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAD,CAAtB;AAEAD,EAAAA,IAAI;AACJ,MAAIK,KAAK,GAAIC,IAAI,IAAI,eAAT,GAA4B,IAA5B,GAAmC,KAA/C;;AAGA,MAAGD,KAAH,EACA;AACI,QAAIE,QAAQ,GAAG,EAAf;AACAH,IAAAA,KAAK,CAACI,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAgB;AACtBH,MAAAA,QAAQ,CAACI,IAAT,CAAcF,IAAI,CAACG,EAAnB;AACH,KAFD;AAIAf,IAAAA,KAAK,CAACgB,QAAN,CAAef,QAAQ,CAACS,QAAD,CAAvB;AACH;;AAED,sBACI;AAAA,2BAEI,QAAC,IAAD;AAAA,8BACI,QAAC,SAAD,CAAW,MAAX;AAAkB,QAAA,EAAE,EAAEX,IAAI,CAACkB,MAA3B;AAAmC,QAAA,QAAQ,EAAEZ,EAA7C;AAAiD,QAAA,KAAK,EAAE;AAACa,UAAAA,UAAU,EAAC;AAAZ,SAAxD;AAAA,mBACCT,IADD,EAECD,KAAK,GAAE,0BAAF,GAA+B,IAFrC;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAKI,QAAC,SAAD,CAAW,QAAX;AAAoB,QAAA,QAAQ,EAAEH,EAA9B;AAAA,+BACA,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,SAAS,EAAC,aAArB;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,yCAAf;AAAA,sBAEIE,KAAK,CAACI,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,kCAEN,QAAC,QAAD;AAAsB,gBAAA,IAAI,EAAED,IAA5B;AAAkC,gBAAA,IAAI,EAAEN;AAAxC,iBAAeO,KAAf;AAAA;AAAA;AAAA;AAAA,uBAFM;AAAA,aAAV;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,eALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AA4BH,CA9CD,C,CAiDA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;;;KAzEMX,Y;AA4ENA,YAAY,CAACiB,SAAb,GAAyB,CACrB;AADqB,CAAzB;AAIA,eAAejB,YAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react'\nimport MenuItem from './MenuItem'\nimport {\n    Accordion,\n    Card\n  } from \"react-bootstrap\";\n\nimport store from '../state/GlobalState';\nimport { setLunch } from '../state/Actions';\n\n\n  //all the items in one category\nconst MenuItemCate = ({cate, menuItem, id, type}) => {\n    \n    const items = menuItem[0]\n    \n    cate\n    var lunch = (Name == \"Lunch Special\") ? true : false\n\n\n    if(lunch)\n    {\n        var lunchIds = [];\n        items.map((item, index) =>{\n            lunchIds.push(item.ID)\n        })\n\n        store.dispatch(setLunch(lunchIds))\n    }\n\n    return  (\n        <>  \n        \n            <Card >\n                <Accordion.Toggle as={Card.Header} eventKey={id} style={{fontWeight:500}}>\n                {Name}\n                {lunch? \" (11:00am - 3:00pm only)\" : null}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={id}>\n                <Card.Body className=\"w-80 m-auto\">\n                    <div className=\"d-flex flex-wrap justify-content-center\">\n                    {\n                        items.map((item, index) =>\n                        (\n                            <MenuItem key={index} item={item} type={type}/>\n                        ))\n                    }\n                    </div>\n\n                </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n                     \n     \n            \n        </>\n    )\n    \n}\n\n\n// const getMenuItems = async (cate) =>\n// {\n//     var url;\n//     var item = []\n\n//     if(cate)\n//     {\n//         url = 'http://localhost:5001/' + cate\n//     }\n//      const data = await fetch(url)\n//     .then(response => response.json())\n//     .then(data => {\n//         for(var i = 0; i < data.length; i++)\n//         {\n//             item.push(data[i])\n//         }\n//         // console.log(item)\n//         return item;\n\n//     })\n\n//     return data;\n\n\n// };\n\n\nMenuItemCate.propTypes = {\n    // cate: PropTypes.string,\n}\n\nexport default MenuItemCate\n"]},"metadata":{},"sourceType":"module"}