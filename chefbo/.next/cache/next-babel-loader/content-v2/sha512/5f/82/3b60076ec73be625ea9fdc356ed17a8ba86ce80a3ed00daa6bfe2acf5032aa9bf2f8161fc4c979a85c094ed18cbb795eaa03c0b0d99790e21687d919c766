{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/OptionalMods.js\";\nimport React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\nconst ADD = 1;\nconst REMOVE = -1;\n\nfunction OptionalMods({\n  mods,\n  onchange\n}) {\n  console.log(\"length\", mods.length);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(Array(mods.length).fill(false));\n\n  function handleChange(event) {\n    const index = event.target.value;\n    const modIdAdd = event.target.id;\n    var price = mods[index].Price;\n    var name = mods[index].Name; //need to pass entire mod object, not just ID\n\n    if (event.target.checked) {\n      onchange(modIdAdd, null, price, name);\n    } else {\n      onchange(null, modIdAdd, price * REMOVE, name);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: `${utility.fontSizeSmall}`,\n      children: \" Optional Selections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), mods.map((mod, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: mod.ID,\n        name: `optMod${mod.Name}`,\n        value: index,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"d-inline-flex w-50 justify-content-between p-1\" // htmlFor={`optMod${mod[0]}`}\n        ,\n        htmlFor: mod.ID,\n        children: [/*#__PURE__*/_jsxDEV(MenuItemName, {\n          name: mod.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItemPrice, {\n          price: mod.Price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\nexport default OptionalMods;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/OptionalMods.js"],"names":["React","useState","MenuItemName","MenuItemPrice","utility","ADD","REMOVE","OptionalMods","mods","onchange","console","log","length","selected","setSelected","Array","fill","handleChange","event","index","target","value","modIdAdd","id","price","Price","name","Name","checked","fontSizeSmall","map","mod","ID"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,MAAMC,GAAG,GAAG,CAAZ;AACA,MAAMC,MAAM,GAAG,CAAC,CAAhB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAtB,EAA0C;AAGtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBH,IAAI,CAACI,MAA1B;AACF,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAACc,KAAK,CAACP,IAAI,CAACI,MAAN,CAAL,CAAmBI,IAAnB,CAAwB,KAAxB,CAAD,CAAxC;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA3B;AACA,UAAMC,QAAQ,GAAGJ,KAAK,CAACE,MAAN,CAAaG,EAA9B;AAEA,QAAIC,KAAK,GAAGhB,IAAI,CAACW,KAAD,CAAJ,CAAYM,KAAxB;AACA,QAAIC,IAAI,GAAGlB,IAAI,CAACW,KAAD,CAAJ,CAAYQ,IAAvB,CAL2B,CAO3B;;AACA,QAAIT,KAAK,CAACE,MAAN,CAAaQ,OAAjB,EAA0B;AACxBnB,MAAAA,QAAQ,CAACa,QAAD,EAAW,IAAX,EAAiBE,KAAjB,EAAwBE,IAAxB,CAAR;AACD,KAFD,MAEO;AACLjB,MAAAA,QAAQ,CAAC,IAAD,EAAOa,QAAP,EAAiBE,KAAK,GAAGlB,MAAzB,EAAiCoB,IAAjC,CAAR;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BAKE;AAAG,MAAA,SAAS,EAAG,GAAEtB,OAAO,CAACyB,aAAc,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAMGrB,IAAI,CAACsB,GAAL,CAAS,CAACC,GAAD,EAAMZ,KAAN,kBACR;AAAA,8BAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAEY,GAAG,CAACC,EAFV;AAGE,QAAA,IAAI,EAAG,SAAQD,GAAG,CAACJ,IAAK,EAH1B;AAIE,QAAA,KAAK,EAAER,KAJT;AAKE,QAAA,QAAQ,EAAEF;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AACE,QAAA,SAAS,EAAC,gDADZ,CAEE;AAFF;AAGE,QAAA,OAAO,EAAEc,GAAG,CAACC,EAHf;AAAA,gCAKE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAED,GAAG,CAACJ;AAAxB;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEI,GAAG,CAACN;AAA1B;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA,OAAUN,KAAV;AAAA;AAAA;AAAA;AAAA,YADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;AAED,eAAeZ,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\n\nconst ADD = 1;\nconst REMOVE = -1;\n\nfunction OptionalMods({ mods, onchange }) {\n\n    \n    console.log(\"length\",mods.length)\n  const [selected, setSelected] = useState(Array(mods.length).fill(false));\n\n  function handleChange(event) {\n    const index = event.target.value;\n    const modIdAdd = event.target.id;\n\n    var price = mods[index].Price;\n    var name = mods[index].Name;\n\n    //need to pass entire mod object, not just ID\n    if (event.target.checked) {\n      onchange(modIdAdd, null, price, name);\n    } else {\n      onchange(null, modIdAdd, price * REMOVE, name);\n    }\n  }\n\n  return (\n    <div className=\"py-2\">\n      {/* {mods.length <= 0 ? null : (\n        <p className={`${utility.fontSizeSmall}`}> Optional Selections</p>\n      )} */}\n\n      <p className={`${utility.fontSizeSmall}`}> Optional Selections</p>\n      {mods.map((mod, index) => (\n        <div key={index}>\n          \n          <input\n            type=\"checkbox\"\n            id={mod.ID} \n            name={`optMod${mod.Name}`}\n            value={index}\n            onChange={handleChange}\n          />\n\n          <label\n            className=\"d-inline-flex w-50 justify-content-between p-1\"\n            // htmlFor={`optMod${mod[0]}`}\n            htmlFor={mod.ID}\n          >\n            <MenuItemName name={mod.Name} />\n            <MenuItemPrice price={mod.Price} />\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default OptionalMods;\n"]},"metadata":{},"sourceType":"module"}