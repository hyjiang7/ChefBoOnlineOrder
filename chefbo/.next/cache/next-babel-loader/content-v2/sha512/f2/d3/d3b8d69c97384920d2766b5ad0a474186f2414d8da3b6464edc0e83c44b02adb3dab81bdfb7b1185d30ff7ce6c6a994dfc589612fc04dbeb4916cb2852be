{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/checkout.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport moment from \"moment\";\nimport pst from \"moment-timezone\";\nimport store from \"../../state/GlobalState\";\nimport router, { useRouter } from \"next/router\";\nimport { addCustomerInfo, setTips } from \"../../state/Actions\";\n\nvar checkout = function checkout() {\n  _s();\n\n  // const closedDays = [\"11/25/2021\", \"12/25/2021\", \"07/04/2022\"]\n  //if lunch special in cart; different hoursOfOperation\n  var lunchSpecialHours = [[], [\"11:00\", \"15:00\"], [\"11:00\", \"15:00\"], [\"11:00\", \"15:00\"], [\"11:00\", \"15:00\"], [\"11:00\", \"15:00\"], [\"12:00\", \"15:00\"]];\n  var hoursOfOperation = [[\"11:00\", \"15:00\", \"16:30\", \"21:00\"], //change!!!\n  [\"11:00\", \"15:00\", \"16:30\", \"21:00\"], [\"11:00\", \"15:00\", \"16:30\", \"21:00\"], [\"11:00\", \"15:00\", \"16:30\", \"21:00\"], [\"11:00\", \"15:00\", \"16:30\", \"21:00\"], [\"11:00\", \"15:00\", \"16:30\", \"21:30\"], [\"12:00\", \"15:00\", \"16:30\", \"21:30\"]];\n  var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  var closed = true;\n  var today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\");\n  console.log(\"today\", today);\n  var day = today.day(); //number\n\n  var dayStr = today.format(\"dddd\"); //friday\n\n  var currTime = today.format(\"HH:mm\"); //string\n\n  var date = today.format(\"MM-DD-YY\"); //string\n\n  var open = today.isBefore(moment.utc(\"\".concat(date, \" \").concat(hoursOfOperation[day].slice(-1)), \"MM-DD-YY HH:mm\").utcOffset(\"PST\"));\n  var validTimesOne = [];\n  var validDays = [];\n  var validTimesTwo = [];\n  var dayOne;\n  var dayTwo; //today is open!\n\n  if (open) {\n    console.log(\"open\");\n    validDays.push(\"Today (\".concat(date, \")\"));\n    dayOne = date;\n\n    if (day == 6) {\n      //if today is sat, give them today and monday\n      dayTwo = today.add(2, \"days\").format(\"MM-DD-YY\");\n      validDays.push(\"Monday (\".concat(dayTwo, \")\"));\n    } else {\n      //today and tmr\n      dayTwo = today.add(1, \"days\").format(\"MM-DD-YY\");\n      validDays.push(\"Tomorrow (\".concat(dayTwo, \")\"));\n    }\n\n    today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\"); //reset today\n\n    console.log(dayOne, dayTwo); // console.log(`${date} ${hoursOfOperation[day][0]}`)\n    // console.log(today)\n    // console.log(today.isBefore(`${date} ${hoursOfOperation[day][0]}`))\n\n    var dayOneOpen1, dayOneClose1, dayOneOpen2, dayOneClose2;\n    var dayTwoOpen1, dayTwoClose1, dayTwoOpen2, dayTwoClose2;\n    dayOneOpen1 = moment.utc(\"\".concat(date, \" \").concat(hoursOfOperation[day][0]), \"MM-DD-YY HH:mm\").utcOffset(\"PST\");\n    console.log(\"dayoneopen1\", dayOneOpen1);\n\n    if (today.isBefore(\"\".concat(date, \" \").concat(hoursOfOperation[day][0]))) {\n      validTimesOne = availablePickUpTimes(new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][0])), new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][1])));\n    } else {\n      console.log(\"\".concat(date, \" \").concat(hoursOfOperation[day][1]));\n      validTimesOne = availablePickUpTimes(today, new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][1])));\n    }\n\n    validTimesOne = validTimesOne.concat(availablePickUpTimes(new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][2])), new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][3]))));\n    validTimesTwo = availablePickUpTimes(new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][0])), new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][1])));\n    validTimesTwo = validTimesTwo.concat(availablePickUpTimes(new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][2])), new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][3]))));\n  } else {\n    console.log(\"closed today\");\n    console.log(day); //give them options for next two business days\n\n    dayOne = today.add(1, \"days\").format(\"MM-DD-YY\");\n    validDays.push(\"Tomorrow (\".concat(dayOne));\n    dayTwo = today.add(1, \"days\").format(\"MM-DD-YY\");\n    validDays.push(\"Monday (\".concat(dayTwo, \")\"));\n    today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\"); //reset today\n\n    console.log(\"open \".concat(dayOne, \" \").concat(hoursOfOperation[new moment(dayOne).day()][0]));\n    console.log(\"close \".concat(dayOne, \" \").concat(hoursOfOperation[new moment(dayOne).day()][1]));\n    validTimesOne = availablePickUpTimes(new moment(\"\".concat(dayOne, \" \").concat(hoursOfOperation[new moment(dayOne).day()][0])), new moment(\"\".concat(dayOne, \" \").concat(hoursOfOperation[new moment(dayOne).day()][1])));\n    validTimesOne = validTimesOne.concat(availablePickUpTimes(new moment(\"\".concat(dayOne, \" \").concat(hoursOfOperation[new moment(dayOne).day()][2])), new moment(\"\".concat(dayOne, \" \").concat(hoursOfOperation[new moment(dayOne).day()][3]))));\n    validTimesTwo = availablePickUpTimes(new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][0])), new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][1])));\n    validTimesTwo = validTimesTwo.concat(availablePickUpTimes(new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][2])), new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][3]))));\n  }\n\n  var _useState = useState(0),\n      dateChange = _useState[0],\n      setDateChange = _useState[1];\n\n  var _useState2 = useState(validTimesOne),\n      times = _useState2[0],\n      setTimes = _useState2[1];\n\n  var _useState3 = useState(validTimesOne[0]),\n      timeChange = _useState3[0],\n      setTime = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      paymentError = _useState4[0],\n      setPaymentError = _useState4[1];\n\n  useEffect(function () {\n    console.log(\"use effect\");\n\n    if (dateChange == 0) {\n      setTimes(validTimesOne);\n    } else setTimes(validTimesTwo);\n  }, [dateChange]);\n\n  function availablePickUpTimes(startTime, endTime) {\n    console.log(startTime, endTime);\n    var times = [];\n    var mins = 15 - startTime.minute() % 15;\n    var firstTime = startTime.add(mins, \"m\");\n    console.log(firstTime, endTime, firstTime.isBefore(endTime));\n    mins == 15 ? null : firstTime.add(15, \"m\");\n\n    while (firstTime.isBefore(endTime)) {\n      times.push(new moment(startTime).format(\"HH:mm\"));\n      firstTime.add(15, \"m\");\n    }\n\n    return times;\n  }\n\n  function handleDateChange(e) {\n    setDateChange(e.target.value);\n  }\n\n  function handleTimeChange(e) {\n    console.log(e.target.value);\n    setTime(e.target.value);\n  }\n\n  function reviewOrder(e) {\n    //check if payment is valid\n    e.preventDefault();\n    var validPayment = e.target.form.elements.payment.value;\n    var tips = 5.00;\n    console.log(validPayment);\n\n    if (validPayment) {\n      setPaymentError(\"\");\n      var customer = {\n        fname: e.target.form.elements.fname.value,\n        lname: e.target.form.elements.lname.value,\n        email: e.target.form.elements.email.value,\n        phone: e.target.form.elements.phone.value,\n        time: timeChange,\n        payment: e.target.form.elements.payment.value\n      };\n      dateChange == 0 ? customer.date = dayOne : customer.date = dayTwo;\n      store.dispatch(setTips(tips));\n      store.dispatch(addCustomerInfo(customer));\n      router.push(\"/routes/submit\");\n    } else {\n      //add error message to payment invalid\n      setPaymentError(\"Invalid payment method!\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-sm-8 col-lg-6 m-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          htmlFor: \"day\",\n          children: \"Select Pick Up Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"day\",\n          className: \"form-control\",\n          onChange: handleDateChange,\n          children: validDays.map(function (i, ind) {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ind,\n              children: i\n            }, ind, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          htmlFor: \"time\",\n          children: \"Select a Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"time\",\n          className: \"form-control\",\n          onChange: handleTimeChange,\n          children: times.map(function (i, ind) {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\".concat(i),\n              children: i\n            }, ind, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fname\",\n            children: \" First Name* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"fname\",\n            type: \"text\",\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lname\",\n            children: \" Last Name* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"lname\",\n            type: \"text\",\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \" Email* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \" Phone number (digits only)* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"phone\",\n          type: \"tel\",\n          pattern: \"[0-9]{3}[0-9]{3}[0-9]{4}\",\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tips\",\n          children: \" Enter Tip amount* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"tips\",\n          type: \"radio\",\n          pattern: \"[0-9]{3}[0-9]{3}[0-9]{4}\",\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"payment\",\n          children: [\" \", \"Payment* \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: paymentError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 22\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"payment\",\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex justify-content-center \",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: reviewOrder,\n          children: \"Review and Submit Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(checkout, \"YZu+DFANaN3JFLOpfg+W5F594Vc=\");\n\nexport default checkout;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/checkout.js"],"names":["React","useState","useContext","useEffect","moment","pst","store","router","useRouter","addCustomerInfo","setTips","checkout","lunchSpecialHours","hoursOfOperation","days","closed","today","utc","format","utcOffset","console","log","day","dayStr","currTime","date","open","isBefore","slice","validTimesOne","validDays","validTimesTwo","dayOne","dayTwo","push","add","dayOneOpen1","dayOneClose1","dayOneOpen2","dayOneClose2","dayTwoOpen1","dayTwoClose1","dayTwoOpen2","dayTwoClose2","availablePickUpTimes","concat","dateChange","setDateChange","times","setTimes","timeChange","setTime","paymentError","setPaymentError","startTime","endTime","mins","minute","firstTime","handleDateChange","e","target","value","handleTimeChange","reviewOrder","preventDefault","validPayment","form","elements","payment","tips","customer","fname","lname","email","phone","time","dispatch","map","i","ind","color"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport moment from \"moment\";\nimport pst from \"moment-timezone\"\nimport store from \"../../state/GlobalState\";\nimport router, { useRouter } from \"next/router\";\nimport { addCustomerInfo, setTips } from \"../../state/Actions\";\n\nconst checkout = () => {\n  // const closedDays = [\"11/25/2021\", \"12/25/2021\", \"07/04/2022\"]\n\n  //if lunch special in cart; different hoursOfOperation\n  const lunchSpecialHours = [\n    [],\n    [\"11:00\", \"15:00\"],\n    [\"11:00\", \"15:00\"],\n    [\"11:00\", \"15:00\"],\n    [\"11:00\", \"15:00\"],\n    [\"11:00\", \"15:00\"],\n    [\"12:00\", \"15:00\"],\n  ];\n  const hoursOfOperation = [\n    [\"11:00\", \"15:00\", \"16:30\", \"21:00\"], //change!!!\n    [\"11:00\", \"15:00\", \"16:30\", \"21:00\"],\n    [\"11:00\", \"15:00\", \"16:30\", \"21:00\"],\n    [\"11:00\", \"15:00\", \"16:30\", \"21:00\"],\n    [\"11:00\", \"15:00\", \"16:30\", \"21:00\"],\n    [\"11:00\", \"15:00\", \"16:30\", \"21:30\"],\n    [\"12:00\", \"15:00\", \"16:30\", \"21:30\"],\n  ];\n\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const closed = true;\n\n  var today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\");\n    console.log(\"today\", today)\n  const day = today.day(); //number\n  const dayStr = today.format(\"dddd\"); //friday\n  const currTime = today.format(\"HH:mm\"); //string\n  const date = today.format(\"MM-DD-YY\"); //string\n  const open = today.isBefore(moment.utc(`${date} ${hoursOfOperation[day].slice(-1)}`, \"MM-DD-YY HH:mm\").utcOffset(\"PST\"));\n  var validTimesOne = [];\n  var validDays = [];\n  var validTimesTwo = [];\n  var dayOne;\n  var dayTwo;\n\n  //today is open!\n  if (open) {\n    console.log(\"open\");\n    validDays.push(`Today (${date})`);\n    dayOne = date;\n    if (day == 6) {\n      //if today is sat, give them today and monday\n      dayTwo = today.add(2, \"days\").format(\"MM-DD-YY\");\n      validDays.push(`Monday (${dayTwo})`);\n    } else {\n      //today and tmr\n      dayTwo = today.add(1, \"days\").format(\"MM-DD-YY\");\n      validDays.push(`Tomorrow (${dayTwo})`);\n    }\n\n    today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\"); //reset today\n\n    console.log(dayOne, dayTwo);\n    // console.log(`${date} ${hoursOfOperation[day][0]}`)\n    // console.log(today)\n    // console.log(today.isBefore(`${date} ${hoursOfOperation[day][0]}`))\n    var dayOneOpen1, dayOneClose1, dayOneOpen2, dayOneClose2;\n    var dayTwoOpen1, dayTwoClose1, dayTwoOpen2, dayTwoClose2;\n\n    dayOneOpen1 = moment.utc(`${date} ${hoursOfOperation[day][0]}`, \"MM-DD-YY HH:mm\").utcOffset(\"PST\")\n    console.log(\"dayoneopen1\", dayOneOpen1)\n    if (today.isBefore(`${date} ${hoursOfOperation[day][0]}`)) {\n      validTimesOne = availablePickUpTimes(\n        new moment(`${date} ${hoursOfOperation[day][0]}`),\n        new moment(`${date} ${hoursOfOperation[day][1]}`)\n      );\n    } else {\n        console.log(`${date} ${hoursOfOperation[day][1]}`)\n      validTimesOne = availablePickUpTimes(\n        today,\n        new moment(`${date} ${hoursOfOperation[day][1]}`)\n      );\n    }\n\n    validTimesOne = validTimesOne.concat(\n      availablePickUpTimes(\n        new moment(`${date} ${hoursOfOperation[day][2]}`),\n        new moment(`${date} ${hoursOfOperation[day][3]}`)\n      )\n    );\n\n    validTimesTwo = availablePickUpTimes(\n      new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][0]}`),\n      new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][1]}`)\n    );\n\n    validTimesTwo = validTimesTwo.concat(\n      availablePickUpTimes(\n        new moment(\n          `${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][2]}`\n        ),\n        new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][3]}`)\n      )\n    );\n  } else {\n    console.log(\"closed today\");\n    console.log(day)\n\n    //give them options for next two business days\n    dayOne = today.add(1, \"days\").format(\"MM-DD-YY\");\n    validDays.push(`Tomorrow (${dayOne}`);\n    dayTwo = today.add(1, \"days\").format(\"MM-DD-YY\");\n    validDays.push(`Monday (${dayTwo})`);\n\n    today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\"); //reset today\n\n    console.log(`open ${dayOne} ${hoursOfOperation[new moment(dayOne).day()][0]}`)\n    console.log(`close ${dayOne} ${hoursOfOperation[new moment(dayOne).day()][1]}`)\n\n    validTimesOne = availablePickUpTimes(\n      new moment(`${dayOne} ${hoursOfOperation[new moment(dayOne).day()][0]}`),\n      new moment(`${dayOne} ${hoursOfOperation[new moment(dayOne).day()][1]}`)\n    );\n    validTimesOne = validTimesOne.concat(\n      availablePickUpTimes(\n        new moment(`${dayOne} ${hoursOfOperation[new moment(dayOne).day()][2]}`),\n        new moment(`${dayOne} ${hoursOfOperation[new moment(dayOne).day()][3]}`)\n      )\n    );\n\n    validTimesTwo = availablePickUpTimes(\n      new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][0]}`),\n      new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][1]}`)\n    );\n\n    validTimesTwo = validTimesTwo.concat(\n      availablePickUpTimes(\n        new moment(\n          `${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][2]}`\n        ),\n        new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][3]}`)\n      )\n    );\n  }\n\n  const [dateChange, setDateChange] = useState(0);\n  const [times, setTimes] = useState(validTimesOne);\n  const [timeChange, setTime] = useState(validTimesOne[0]);\n  const [paymentError, setPaymentError] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"use effect\");\n    if (dateChange == 0) {\n      setTimes(validTimesOne);\n    } else setTimes(validTimesTwo);\n  }, [dateChange]);\n\n  function availablePickUpTimes(startTime, endTime) {\n\n      console.log(startTime, endTime)\n    var times = [];\n\n    var mins = 15 - (startTime.minute() % 15);\n    var firstTime = startTime.add(mins, \"m\");\n    console.log(firstTime, endTime, firstTime.isBefore(endTime))\n    mins == 15 ? null : firstTime.add(15, \"m\");\n    \n    while (firstTime.isBefore(endTime)) {\n      times.push(new moment(startTime).format(\"HH:mm\"));\n      firstTime.add(15, \"m\");\n    }\n    return times;\n  }\n\n  function handleDateChange(e) {\n    setDateChange(e.target.value);\n  }\n\n  function handleTimeChange(e) {\n    console.log(e.target.value);\n    setTime(e.target.value);\n  }\n\n  function reviewOrder(e) {\n    //check if payment is valid\n\n    e.preventDefault();\n    var validPayment = e.target.form.elements.payment.value;\n    var tips = 5.00;\n    console.log(validPayment);\n    if (validPayment) {\n      setPaymentError(\"\");\n      const customer = {\n        fname: e.target.form.elements.fname.value,\n        lname: e.target.form.elements.lname.value,\n        email: e.target.form.elements.email.value,\n        phone: e.target.form.elements.phone.value,\n        time: timeChange,\n        payment: e.target.form.elements.payment.value,\n      };\n\n      dateChange == 0 ? (customer.date = dayOne) : (customer.date = dayTwo);\n\n      store.dispatch(setTips(tips));\n\n      store.dispatch(addCustomerInfo(customer));\n      router.push(\"/routes/submit\");\n    } else {\n      //add error message to payment invalid\n      setPaymentError(\"Invalid payment method!\");\n    }\n  }\n\n  return (\n    <div className=\"col-12 col-sm-8 col-lg-6 m-auto\">\n      {/* {closed? <p style={{color: \"red\", fontWeight: \"bold\"}}> Store Closed! Pick up will be scheduled for {nextBusinessDay}!</p> : <p></p>} */}\n      <form className=\"form\">\n        <div className=\"form-group\">\n          <label className=\"\" htmlFor=\"day\">\n            Select Pick Up Date\n          </label>\n          <select\n            name=\"day\"\n            className=\"form-control\"\n            onChange={handleDateChange}\n          >\n            {validDays.map((i, ind) => (\n              <option key={ind} value={ind}>\n                {i}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"\" htmlFor=\"time\">\n            Select a Time\n          </label>\n          <select\n            name=\"time\"\n            className=\"form-control\"\n            onChange={handleTimeChange}\n          >\n            {times.map((i, ind) => (\n              <option key={ind} value={`${i}`}>\n                {i}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col mb-2\">\n            <label htmlFor=\"fname\"> First Name* </label>\n            <input name=\"fname\" type=\"text\" className=\"form-control\" required />\n          </div>\n\n          <div className=\"col\">\n            <label htmlFor=\"lname\"> Last Name* </label>\n            <input name=\"lname\" type=\"text\" className=\"form-control\" required />\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"email\"> Email* </label>\n          <input name=\"email\" type=\"email\" className=\"form-control\" required />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"phone\"> Phone number (digits only)* </label>\n          <input\n            name=\"phone\"\n            type=\"tel\"\n            pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\"\n            className=\"form-control\"\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"tips\"> Enter Tip amount* </label>\n          <input\n            name=\"tips\"\n            type=\"radio\"\n            pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\"\n            className=\"form-control\"\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"payment\">\n            {\" \"}\n            Payment* <span style={{ color: \"red\" }}>{paymentError}</span>\n          </label>\n          <input name=\"payment\" type=\"text\" className=\"form-control\" />\n        </div>\n\n        <div className=\"form-group d-flex justify-content-center \">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={reviewOrder}\n          >\n            Review and Submit Order\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default checkout;\n"]},"metadata":{},"sourceType":"module"}