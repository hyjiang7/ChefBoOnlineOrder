{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/menu.js\";\n//Menu.js is a react component with associated route\n//must grab menu items from json ...how?\nimport Layout from \"../../components/Layout\";\nimport MenuItemCate from \"../../components/MenuItemCate\";\n\nconst Menu = ({\n  items\n}) => {\n  // var promiseItems = categories.map(c => {\n  //     return getMenuItems(c)\n  // });\n  // console.log(\"promise items: \", promiseItems)\n  // console.log(typeof(promiseItems))\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MenuItemCate, {\n      cate: categories[0],\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport const getMenuItems = async (category) => {\n  var url;\n\n  if (category) {\n    url = 'http://localhost:5001/' + category;\n  }\n\n  const res = await fetch(url);\n  const item = await res.json();\n  return item;\n};\nexport const getStaticProps = async () => {\n  // const res = await fetch(`http://localhost:5001/categories`);\n  // const categories = await res.json();\n  // return {\n  //   props: {\n  //     categories,\n  //   },\n  // };\n  var categories;\n  var items; // Call the API\n\n  fetch('http://localhost:5001/categories').then(function (response) {\n    if (response.ok) {\n      return response.json();\n    } else {\n      return Promise.reject(response);\n    }\n  }).then(function (data) {\n    // Store the post data to a variable\n    categories = data; // Fetch another API\n\n    return fetch('http://localhost:5001/categories' + categories[2]);\n  }).then(function (response) {\n    if (response.ok) {\n      items = response.json();\n    } else {\n      return Promise.reject(response);\n    }\n  }).then(function (data) {\n    console.log(categories, data);\n  }).catch(function (error) {\n    console.warn(error);\n  });\n  return {\n    props: {\n      items\n    }\n  };\n};\nexport default Menu;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/menu.js"],"names":["Layout","MenuItemCate","Menu","items","categories","getMenuItems","category","url","res","fetch","item","json","getStaticProps","then","response","ok","Promise","reject","data","console","log","catch","error","warn","props"],"mappings":";;;AAAA;AACA;AACA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAGxB;AACA;AACA;AAIA;AACA;AAGF,sBACE;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEC,UAAU,CAAC,CAAD,CAA9B;AAAmC,MAAA,KAAK,EAAED;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAlBD;;AAqBA,OAAO,MAAME,YAAY,GAAG,OAAOC,QAAP,KAC5B;AACI,MAAIC,GAAJ;;AACA,MAAGD,QAAH,EACA;AACIC,IAAAA,GAAG,GAAG,2BAA2BD,QAAjC;AACH;;AACD,QAAME,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACA,QAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,SAAOD,IAAP;AAEH,CAXM;AAcP,OAAO,MAAME,cAAc,GAAG,YAAY;AACtC;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,MAAIR,UAAJ;AACA,MAAID,KAAJ,CAXsC,CAY1C;;AACIM,EAAAA,KAAK,CAAC,kCAAD,CAAL,CAA0CI,IAA1C,CAA+C,UAAUC,QAAV,EAAoB;AAC/D,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,aAAOD,QAAQ,CAACH,IAAT,EAAP;AACH,KAFD,MAEO;AACH,aAAOK,OAAO,CAACC,MAAR,CAAeH,QAAf,CAAP;AACH;AACJ,GAND,EAMGD,IANH,CAMQ,UAAUK,IAAV,EAAgB;AAEpB;AACAd,IAAAA,UAAU,GAAGc,IAAb,CAHoB,CAKpB;;AACA,WAAOT,KAAK,CAAC,qCAAqCL,UAAU,CAAC,CAAD,CAAhD,CAAZ;AAEH,GAdD,EAcGS,IAdH,CAcQ,UAAUC,QAAV,EAAoB;AACxB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACbZ,MAAAA,KAAK,GAAGW,QAAQ,CAACH,IAAT,EAAR;AAEH,KAHD,MAGO;AACH,aAAOK,OAAO,CAACC,MAAR,CAAeH,QAAf,CAAP;AACH;AACJ,GArBD,EAqBGD,IArBH,CAqBQ,UAAUK,IAAV,EAAgB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,UAAZ,EAAwBc,IAAxB;AACH,GAvBD,EAuBGG,KAvBH,CAuBS,UAAUC,KAAV,EAAiB;AACtBH,IAAAA,OAAO,CAACI,IAAR,CAAaD,KAAb;AACH,GAzBD;AA2BA,SAAO;AACHE,IAAAA,KAAK,EAAE;AACHrB,MAAAA;AADG;AADJ,GAAP;AAKD,CA7CI;AA+CP,eAAeD,IAAf","sourcesContent":["//Menu.js is a react component with associated route\n//must grab menu items from json ...how?\nimport Layout from \"../../components/Layout\";\nimport MenuItemCate from \"../../components/MenuItemCate\"\n\nconst Menu = ({ items }) => {\n\n    \n    // var promiseItems = categories.map(c => {\n    //     return getMenuItems(c)\n    // });\n\n    \n\n    // console.log(\"promise items: \", promiseItems)\n    // console.log(typeof(promiseItems))\n\n\n  return (\n    <>\n      <MenuItemCate cate={categories[0]} items={items}></MenuItemCate>\n    </>\n  );\n};\n\n\nexport const getMenuItems = async (category) =>\n{\n    var url;\n    if(category)\n    {\n        url = 'http://localhost:5001/' + category\n    }\n    const res = await fetch(url)\n    const item = await res.json();\n    return item;\n\n};\n\n\nexport const getStaticProps = async () => {\n    // const res = await fetch(`http://localhost:5001/categories`);\n    // const categories = await res.json();\n    \n    // return {\n    //   props: {\n    //     categories,\n    //   },\n    // };\n\n    var categories;\n    var items;\n// Call the API\n    fetch('http://localhost:5001/categories').then(function (response) {\n        if (response.ok) {\n            return response.json();\n        } else {\n            return Promise.reject(response);\n        }\n    }).then(function (data) {\n\n        // Store the post data to a variable\n        categories = data;\n\n        // Fetch another API\n        return fetch('http://localhost:5001/categories' + categories[2]);\n\n    }).then(function (response) {\n        if (response.ok) {\n            items = response.json();\n\n        } else {\n            return Promise.reject(response);\n        }\n    }).then(function (data) {\n        console.log(categories, data);\n    }).catch(function (error) {\n        console.warn(error);\n    });\n\n    return {\n        props: {\n            items,\n        },\n    };\n  };\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}