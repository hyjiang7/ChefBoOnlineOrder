{"ast":null,"code":"import _toConsumableArray from \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createContext, useReducer, useEffect, useContext } from 'react';\nimport reducers from './Reducers';\nimport { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist'; //   const StoreContext = createContext();\n//   const GlobalStore = (props) => {\n//     const initialState = { \n//         cart: []\n//     };\n//     const {load, ...rest} = props;\n//     const [state, dispatch] = useReducer(reducers, initialState);    //using combine reducers alike\n//     console.log(state)\n//     console.log(dispatch)\n//     const cart = state;\n//     return(\n//         <StoreContext.Provider value={{state, dispatch}} {...rest}/> \n//     );\n// };\n// export const useStore = () => useContext(StoreContext);  //custom hook useStore\n// export default GlobalStore;\n\nvar persistConfig = {\n  key: 'root'\n};\nvar initialState = {\n  cart: [],\n  user: \"customer\"\n}; // const store = createStore(reducers, initialState)\n\nvar store = createStore(persistReducer(persistConfig, reducers), initialState, composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware))));\nexport default store;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/state/GlobalState.js"],"names":["createContext","useReducer","useEffect","useContext","reducers","createStore","persistStore","persistReducer","persistConfig","key","initialState","cart","user","store","composeWithDevTools","applyMiddleware","middleware"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C,C,CAGA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE;AADa,CAAtB;AAGA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAArB,C,CACA;;AACA,IAAMC,KAAK,GAAGR,WAAW,CACrBE,cAAc,CAACC,aAAD,EAAgBJ,QAAhB,CADO,EAErBM,YAFqB,EAGrBI,mBAAmB,CAACC,eAAe,MAAf,4BAAmBC,UAAnB,EAAD,CAHE,CAAzB;AAKA,eAAeH,KAAf","sourcesContent":["import { createContext, useReducer, useEffect, useContext } from 'react'\nimport reducers from './Reducers'\nimport { createStore} from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\n\n\n//   const StoreContext = createContext();\n\n\n//   const GlobalStore = (props) => {\n//     const initialState = { \n//         cart: []\n//     };\n//     const {load, ...rest} = props;\n\n//     const [state, dispatch] = useReducer(reducers, initialState);    //using combine reducers alike\n//     console.log(state)\n//     console.log(dispatch)\n//     const cart = state;\n\n\n//     return(\n//         <StoreContext.Provider value={{state, dispatch}} {...rest}/> \n//     );\n// };\n\n// export const useStore = () => useContext(StoreContext);  //custom hook useStore\n// export default GlobalStore;\n\nconst persistConfig = {\n    key: 'root',\n  }\nconst initialState = { cart: [], user: \"customer\"};\n// const store = createStore(reducers, initialState)\nconst store = createStore(\n    persistReducer(persistConfig, reducers),\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;"]},"metadata":{},"sourceType":"module"}