{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/MenuItemCate.js\";\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport MenuItem from './MenuItem';\nimport { Accordion, Card } from \"react-bootstrap\";\nimport store from '../state/GlobalState';\nimport { setLunch } from '../state/Actions'; //all the items in one category\n\nconst MenuItemCate = ({\n  cate,\n  menuItem,\n  id,\n  type\n}) => {\n  const items = menuItem[0];\n  const {\n    Category\n  } = cate; // const lunch = (Category == \"Lunch Special\") ? true : false\n\n  var lunch;\n  Category == \"Lunch Special\" ? lunch = true : lunch = false;\n\n  if (lunch) {\n    var lunchIds = [];\n    items.map((item, index) => {\n      lunchIds.push(item.ID);\n    });\n    store.dispatch(setLunch(lunchIds));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n        as: Card.Header,\n        eventKey: id,\n        style: {\n          fontWeight: 500\n        },\n        children: [Category, lunch ? \"11:00am - 3:00pm only\" : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n        eventKey: id,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"w-80 m-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-wrap justify-content-center\",\n            children: items.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              item: item,\n              type: type\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}; //useState/useEffect\n\n\nconst getMenuItems = async (cate) => {\n  var url;\n  var item = [];\n\n  if (cate) {\n    url = 'http://localhost:5001/' + cate;\n  }\n\n  const data = await fetch(url).then(response => response.json()).then(data => {\n    for (var i = 0; i < data.length; i++) {\n      item.push(data[i]);\n    } // console.log(item)\n\n\n    return item;\n  });\n  return data;\n};\n\nMenuItemCate.propTypes = {// cate: PropTypes.string,\n};\nexport default MenuItemCate;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/MenuItemCate.js"],"names":["PropTypes","useState","useEffect","MenuItem","Accordion","Card","store","setLunch","MenuItemCate","cate","menuItem","id","type","items","Category","lunch","lunchIds","map","item","index","push","ID","dispatch","Header","fontWeight","getMenuItems","url","data","fetch","then","response","json","i","length","propTypes"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react'\nimport MenuItem from './MenuItem'\nimport {\n    Accordion,\n    Card\n  } from \"react-bootstrap\";\n\nimport store from '../state/GlobalState';\nimport { setLunch } from '../state/Actions';\n\n\n  //all the items in one category\nconst MenuItemCate = ({cate, menuItem, id, type}) => {\n    \n    const items = menuItem[0]\n\n    const {Category} = cate\n    // const lunch = (Category == \"Lunch Special\") ? true : false\n    var lunch; \n    Category == \"Lunch Special\" ? lunch = true : lunch = false\n\n    if(lunch)\n    {\n        var lunchIds = [];\n        items.map((item, index) =>{\n            lunchIds.push(item.ID)\n        })\n\n        store.dispatch(setLunch(lunchIds))\n    }\n\n    return  (\n        <>  \n        \n            <Card >\n                <Accordion.Toggle as={Card.Header} eventKey={id} style={{fontWeight:500}}>\n                {Category}\n                {lunch? \"11:00am - 3:00pm only\" : null}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={id}>\n                <Card.Body className=\"w-80 m-auto\">\n                    <div className=\"d-flex flex-wrap justify-content-center\">\n                    {\n                        items.map((item, index) =>\n                        (\n                            <MenuItem key={index} item={item} type={type}/>\n                        ))\n                    }\n                    </div>\n\n                </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n                     \n     \n            \n        </>\n    )\n    \n}\n\n//useState/useEffect\n\nconst getMenuItems = async (cate) =>\n{\n    var url;\n    var item = []\n\n    if(cate)\n    {\n        url = 'http://localhost:5001/' + cate\n    }\n     const data = await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n        for(var i = 0; i < data.length; i++)\n        {\n            item.push(data[i])\n        }\n        // console.log(item)\n        return item;\n\n    })\n\n    return data;\n\n\n};\n\n\nMenuItemCate.propTypes = {\n    // cate: PropTypes.string,\n}\n\nexport default MenuItemCate\n"]},"metadata":{},"sourceType":"module"}