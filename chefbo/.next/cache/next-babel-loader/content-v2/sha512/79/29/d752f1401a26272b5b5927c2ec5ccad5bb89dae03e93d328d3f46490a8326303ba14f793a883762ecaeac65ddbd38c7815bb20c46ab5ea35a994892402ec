{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/checkout.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport moment from \"moment\";\n\nvar checkout = function checkout() {\n  _s();\n\n  //select time tag: 15 min increments until close\n  var _useState = useState(0),\n      dateChange = _useState.dateChange,\n      setDateChange = _useState.setDateChange;\n\n  var _useState2 = useState(validTimesOne),\n      times = _useState2.times,\n      setTimes = _useState2.setTimes;\n\n  useEffect(function () {\n    if (dateChange == 0) {\n      setTimes(validTimesOne);\n    } else setTimes(validTimesTwo);\n  }, [dateChange]); //create all valid pickup times\n\n  var validTimes = [\"11:15\", \"11:30\", \"11:45\", \"12:00\", \"12:15\", \"12:30\", \"12:45\", \"13:00\", \"13:15\", \"13:30\", \"13:45\", \"14:00\", \"14:15\", \"14:30\", \"14:45\", \"16:45\", \"17:00\", \"17:15\", \"17:45\", \"18:00\", \"18:15\", \"18:30\", \"18:45\", \"19:00\", \"19:15\", \"19:30\", \"19:45\", \"20:00\", \"20:15\", \"20:30\", \"20:45\"]; // var currentValidTimes;\n\n  var hoursOfOperation = [[], [\"11:15\", \"14:45\", \"16:45\", \"20:30\"], [\"11:15\", \"14:45\", \"16:45\", \"20:30\"], [\"11:15\", \"14:45\", \"16:45\", \"20:30\"], [\"11:15\", \"14:45\", \"16:45\", \"20:30\"], [\"11:15\", \"14:45\", \"16:45\", \"21:00\"], [\"12:15\", \"14:45\", \"16:45\", \"21:00\"]];\n  var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  var closed = true; // const today = new Date()\n  // const currentTime = today.getHours() + \":\" + today.getMinutes();\n  // const sunday =  today.getDay() == 0;\n  // const closed = currentTime > \"20:45\" || sunday;\n  // const saturday = today.getDay() == 6; //returns 6\n  // var pickupDate , pickupDay;\n  // var nextBusinessDay;\n  // if(closed)\n  // {\n  //     var daysToSkip;\n  //     saturday? daysToSkip = 2 : daysToSkip = 1;\n  //     pickupDate = new Date(today.getTime() + (daysToSkip*86400000));\n  //     pickupDay = days[pickupDate.getDay()]\n  //     console.log(\"store closed, pickup will be for when we open for business on \", pickupDay, pickupDate.getMonth() +1, \"/\" ,pickupDate.getDate(),  \"/\" , pickupDate.getFullYear())\n  //     //if today is sat, then we open on monday\n  //     nextBusinessDay = `${pickupDay} ${pickupDate.getMonth() +1}/${pickupDate.getDate()}/${pickupDate.getFullYear()}`;\n  //     validTimes.splice(0,1);\n  // }\n  // else {\n  //     var index;\n  //     console.log(typeof(currentTime))\n  //     console.log(new Date(currentTime) < new Date('11:34'))\n  //     validTimes.every( (i, ind) => {\n  //         if(currentTime > i)\n  //         {\n  //             index = ind\n  //             return false;\n  //         }\n  //         return true;\n  //     })\n  //     console.log(index)\n  //     validTimes.splice(0, index + 1);\n  // }\n\n  var today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\");\n  var day = today.day(); //number\n\n  var dayStr = today.format(\"dddd\"); //friday\n\n  var currTime = today.format(\"HH:mm\"); //string\n\n  var date = today.format(\"MM-DD-YY\"); //string\n\n  var open = today.isBefore(\"\".concat(date, \" \").concat(hoursOfOperation[day].slice(-1)));\n  var validTimesOne = [];\n  var validDays = [];\n  var validTimesTwo = [];\n  var dayTwo; //today is open!\n\n  if (open) {\n    console.log(\"open\");\n    validDays.push(\"Today (\".concat(date, \")\"));\n\n    if (day == 6) {\n      //if today is sat, give them today and monday\n      dayTwo = today.add(2, \"days\").format(\"MM-DD-YY\");\n      validDays.push(\"Monday (\".concat(dayTwo, \")\"));\n    } else {\n      //today and tmr\n      dayTwo = today.add(1, \"days\").format(\"MM-DD-YY\");\n      validDays.push(\"Tomorrow (\".concat(dayTwo, \")\"));\n    }\n\n    today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\"); //reset today\n\n    if (today.isBefore(\"\".concat(date, \" \").concat(hoursOfOperation[day].slice(1)))) {\n      validTimesOne = availablePickUpTimes(new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][0])), new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][1])));\n    } else {\n      validTimesOne = availablePickUpTimes(today, new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][1])));\n    }\n\n    validTimesOne = validTimesOne.concat(availablePickUpTimes(new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][2])), new moment(\"\".concat(date, \" \").concat(hoursOfOperation[day][3]))));\n    validTimesTwo = availablePickUpTimes(new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][0])), new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][1])));\n    validTimesTwo = validTimesTwo.concat(availablePickUpTimes(new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][2])), new moment(\"\".concat(dayTwo, \" \").concat(hoursOfOperation[new moment(dayTwo).day()][3]))));\n  } else {\n    console.log(\"closed today\"); //give them options for next two business days\n\n    validDays.push(\"Tomorrow (\".concat(today.add(1, \"days\").format(\"MM-DD-YY\"), \")\"));\n    validDays.push(\"Monday (\".concat(today.add(2, \"days\").format(\"MM-DD-YY\"), \")\"));\n  }\n\n  function availablePickUpTimes(startTime, endTime) {\n    console.log(startTime, endTime);\n    var times = [];\n    var firstTime = startTime.add(15 - startTime.minute() % 15, \"m\");\n    console.log(firstTime);\n    firstTime.add(15, \"m\");\n    console.log(firstTime.isBefore(endTime));\n\n    while (firstTime.isBefore(endTime)) {\n      times.push(new moment(startTime).format(\"HH:mm\"));\n      firstTime.add(\"m\", 15);\n    }\n\n    console.log(times);\n    return times;\n  }\n\n  function handleDateChange() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-sm-8 col-lg-6 m-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          htmlFor: \"day\",\n          children: \"Select Pick Up Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"day\",\n          className: \"form-control\",\n          onChange: handleDateChange,\n          children: validDays.map(function (i, ind) {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ind,\n              children: i\n            }, ind, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          htmlFor: \"time\",\n          children: \"Select a Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"time\",\n          className: \"form-control\",\n          children: times.map(function (i, ind) {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\".concat(i),\n              children: i\n            }, ind, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fname\",\n            children: \" First Name* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"fname\",\n            type: \"text\",\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lname\",\n            children: \" Last Name* \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"lname\",\n            type: \"text\",\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \" Email* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"email\",\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \" Phone number (digits only)* \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"phone\",\n          type: \"tel\",\n          pattern: \"[0-9]{3}[0-9]{3}[0-9]{4}\",\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex justify-content-center \",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Review and Submit Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(checkout, \"Ig6R8FNqveEuFv3M5SsyIQrsRR8=\");\n\nexport default checkout;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/checkout.js"],"names":["React","useState","useContext","useEffect","moment","checkout","dateChange","setDateChange","validTimesOne","times","setTimes","validTimesTwo","validTimes","hoursOfOperation","days","closed","today","utc","format","utcOffset","day","dayStr","currTime","date","open","isBefore","slice","validDays","dayTwo","console","log","push","add","availablePickUpTimes","concat","startTime","endTime","firstTime","minute","handleDateChange","map","i","ind"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport moment from \"moment\";\n\nconst checkout = () => {\n  //select time tag: 15 min increments until close\n    const {dateChange, setDateChange} = useState(0)\n    const {times, setTimes} = useState(validTimesOne)\n\n    useEffect(() =>{\n\n        if(dateChange == 0)\n        {\n            setTimes(validTimesOne)\n        }\n        else\n            setTimes(validTimesTwo)\n    }, [dateChange])\n\n  //create all valid pickup times\n  const validTimes = [\n    \"11:15\",\n    \"11:30\",\n    \"11:45\",\n    \"12:00\",\n    \"12:15\",\n    \"12:30\",\n    \"12:45\",\n    \"13:00\",\n    \"13:15\",\n    \"13:30\",\n    \"13:45\",\n    \"14:00\",\n    \"14:15\",\n    \"14:30\",\n    \"14:45\",\n    \"16:45\",\n    \"17:00\",\n    \"17:15\",\n    \"17:45\",\n    \"18:00\",\n    \"18:15\",\n    \"18:30\",\n    \"18:45\",\n    \"19:00\",\n    \"19:15\",\n    \"19:30\",\n    \"19:45\",\n    \"20:00\",\n    \"20:15\",\n    \"20:30\",\n    \"20:45\",\n  ];\n\n  // var currentValidTimes;\n\n  const hoursOfOperation = [\n    [],\n    [\"11:15\", \"14:45\", \"16:45\", \"20:30\"],\n    [\"11:15\", \"14:45\", \"16:45\", \"20:30\"],\n    [\"11:15\", \"14:45\", \"16:45\", \"20:30\"],\n    [\"11:15\", \"14:45\", \"16:45\", \"20:30\"],\n    [\"11:15\", \"14:45\", \"16:45\", \"21:00\"],\n    [\"12:15\", \"14:45\", \"16:45\", \"21:00\"],\n  ];\n\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const closed = true;\n\n  // const today = new Date()\n  // const currentTime = today.getHours() + \":\" + today.getMinutes();\n  // const sunday =  today.getDay() == 0;\n  // const closed = currentTime > \"20:45\" || sunday;\n  // const saturday = today.getDay() == 6; //returns 6\n  // var pickupDate , pickupDay;\n  // var nextBusinessDay;\n\n  // if(closed)\n  // {\n\n  //     var daysToSkip;\n  //     saturday? daysToSkip = 2 : daysToSkip = 1;\n  //     pickupDate = new Date(today.getTime() + (daysToSkip*86400000));\n  //     pickupDay = days[pickupDate.getDay()]\n\n  //     console.log(\"store closed, pickup will be for when we open for business on \", pickupDay, pickupDate.getMonth() +1, \"/\" ,pickupDate.getDate(),  \"/\" , pickupDate.getFullYear())\n  //     //if today is sat, then we open on monday\n  //     nextBusinessDay = `${pickupDay} ${pickupDate.getMonth() +1}/${pickupDate.getDate()}/${pickupDate.getFullYear()}`;\n  //     validTimes.splice(0,1);\n  // }\n  // else {\n  //     var index;\n  //     console.log(typeof(currentTime))\n  //     console.log(new Date(currentTime) < new Date('11:34'))\n  //     validTimes.every( (i, ind) => {\n  //         if(currentTime > i)\n  //         {\n  //             index = ind\n  //             return false;\n  //         }\n\n  //         return true;\n  //     })\n\n  //     console.log(index)\n\n  //     validTimes.splice(0, index + 1);\n  // }\n\n  var today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\");\n  const day = today.day(); //number\n  const dayStr = today.format(\"dddd\"); //friday\n  const currTime = today.format(\"HH:mm\"); //string\n  const date = today.format(\"MM-DD-YY\"); //string\n  const open = today.isBefore(`${date} ${hoursOfOperation[day].slice(-1)}`);\n  var validTimesOne = [];\n  var validDays = [];\n  var validTimesTwo = [];\n  var dayTwo;\n\n  //today is open!\n  if (open) {\n    console.log(\"open\");\n    validDays.push(`Today (${date})`);\n\n    if (day == 6) {\n      //if today is sat, give them today and monday\n      dayTwo = today.add(2, \"days\").format(\"MM-DD-YY\");\n      validDays.push(`Monday (${dayTwo})`);\n    } else {\n      //today and tmr\n      dayTwo = today.add(1, \"days\").format(\"MM-DD-YY\");\n      validDays.push(`Tomorrow (${dayTwo})`);\n    }\n\n    today = moment.utc(moment().format(\"MM-DD-YY HH:mm\")).utcOffset(\"PST\"); //reset today\n\n    if (today.isBefore(`${date} ${hoursOfOperation[day].slice(1)}`)) {\n      validTimesOne = availablePickUpTimes(\n        new moment(`${date} ${hoursOfOperation[day][0]}`),\n        new moment(`${date} ${hoursOfOperation[day][1]}`)\n      );\n\n    } else {\n      validTimesOne = availablePickUpTimes(today, new moment(`${date} ${hoursOfOperation[day][1]}`));\n\n    }\n\n    validTimesOne = validTimesOne.concat(\n        availablePickUpTimes(new moment(`${date} ${hoursOfOperation[day][2]}`), new moment(`${date} ${hoursOfOperation[day][3]}`))\n      );\n\n    validTimesTwo = availablePickUpTimes(\n      new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][0]}`),\n      new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][1]}`)\n    );\n\n    validTimesTwo = validTimesTwo.concat(\n      availablePickUpTimes(\n        new moment(\n          `${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][2]}`\n        ),\n        new moment(`${dayTwo} ${hoursOfOperation[new moment(dayTwo).day()][3]}`)\n      )\n    );\n  } \n  else {\n    console.log(\"closed today\");\n\n    //give them options for next two business days\n    validDays.push(`Tomorrow (${today.add(1, \"days\").format(\"MM-DD-YY\")})`);\n    validDays.push(`Monday (${today.add(2, \"days\").format(\"MM-DD-YY\")})`);\n\n\n  }\n\n  function availablePickUpTimes(startTime, endTime) {\n    console.log(startTime, endTime);\n    var times = [];\n    var firstTime = startTime.add(15 - (startTime.minute() % 15), \"m\");\n\n    console.log(firstTime);\n    firstTime.add(15, \"m\");\n    console.log(firstTime.isBefore(endTime));\n\n    while (firstTime.isBefore(endTime)) {\n      times.push(new moment(startTime).format(\"HH:mm\"));\n      firstTime.add(\"m\", 15);\n    }\n    console.log(times);\n    return times;\n  }\n\n\n  function handleDateChange() {\n\n\n  }\n  return (\n    <div className=\"col-12 col-sm-8 col-lg-6 m-auto\">\n      {/* {closed? <p style={{color: \"red\", fontWeight: \"bold\"}}> Store Closed! Pick up will be scheduled for {nextBusinessDay}!</p> : <p></p>} */}\n      <form className=\"form\">\n        <div className=\"form-group\">\n          <label className=\"\" htmlFor=\"day\">\n            Select Pick Up Date\n          </label>\n          <select name=\"day\" className=\"form-control\" onChange={handleDateChange}>\n            {validDays.map((i, ind) => (\n              <option key={ind} value={ind}>\n                {i}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"\" htmlFor=\"time\">\n            Select a Time\n          </label>\n          <select name=\"time\" className=\"form-control\">\n            {times.map((i, ind) => (\n              <option key={ind} value={`${i}`}>\n                {i}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col mb-2\">\n            <label htmlFor=\"fname\"> First Name* </label>\n            <input name=\"fname\" type=\"text\" className=\"form-control\" required />\n          </div>\n\n          <div className=\"col\">\n            <label htmlFor=\"lname\"> Last Name* </label>\n            <input name=\"lname\" type=\"text\" className=\"form-control\" required />\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"email\"> Email* </label>\n          <input name=\"email\" type=\"email\" className=\"form-control\" required />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"phone\"> Phone number (digits only)* </label>\n          <input\n            name=\"phone\"\n            type=\"tel\"\n            pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\"\n            className=\"form-control\"\n            required\n          />\n        </div>\n\n        <div className=\"form-group d-flex justify-content-center \">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Review and Submit Order\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default checkout;\n"]},"metadata":{},"sourceType":"module"}