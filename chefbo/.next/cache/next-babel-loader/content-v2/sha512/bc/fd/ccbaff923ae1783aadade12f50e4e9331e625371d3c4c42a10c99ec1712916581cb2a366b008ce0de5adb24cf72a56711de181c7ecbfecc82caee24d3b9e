{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/RequiredMods.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\n\nfunction RequiredMods(_ref) {\n  _s();\n\n  var _this = this;\n\n  var mods = _ref.mods,\n      type = _ref.type,\n      onchange = _ref.onchange;\n\n  var _useState = useState(Array(mods.length).fill(false)),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var checked = false;\n\n  function handleChange(event) {\n    var price = 0;\n    var newSelected = selected;\n    var modIdAdd = event.target.id;\n    var index = event.target.value;\n    var name = mods[index].Name;\n    var modIdRemove; //remove the unchecked value\n\n    var prev = newSelected.indexOf(true);\n\n    if (prev != -1) {\n      modIdRemove = mods[prev].ID;\n      price -= mods[prev].Price;\n      newSelected[prev] = false;\n    } //add the checked value\n\n\n    newSelected[index] = true;\n    price += mods[index].Price;\n    setSelected(newSelected);\n    onchange(modIdAdd, modIdRemove, price, mods[index], type);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: mods.map(function (mod, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: mod.ID,\n          name: type,\n          value: index,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"d-inline-flex w-75 justify-content-between p-1\",\n          htmlFor: mod.ID,\n          children: [/*#__PURE__*/_jsxDEV(MenuItemName, {\n            name: mod.Name,\n            style: \"inlineStyle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItemPrice, {\n            price: mod.Price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, _this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RequiredMods, \"h/SpAG7IxGjgGM2QhOndyUYcfpU=\");\n\n_c = RequiredMods;\nexport default RequiredMods;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequiredMods\");","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/RequiredMods.js"],"names":["React","useState","MenuItemName","MenuItemPrice","utility","RequiredMods","mods","type","onchange","Array","length","fill","selected","setSelected","checked","handleChange","event","price","newSelected","modIdAdd","target","id","index","value","name","Name","modIdRemove","prev","indexOf","ID","Price","map","mod"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,SAASC,YAAT,OAAgD;AAAA;;AAAA;;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBAGdP,QAAQ,CAACQ,KAAK,CAACH,IAAI,CAACI,MAAN,CAAL,CAAmBC,IAAnB,CAAwB,KAAxB,CAAD,CAHM;AAAA,MAGvCC,QAHuC;AAAA,MAG7BC,WAH6B;;AAI9C,MAAIC,OAAO,GAAG,KAAd;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,WAAW,GAAGN,QAAlB;AACA,QAAMO,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA9B;AACA,QAAMC,KAAK,GAAGN,KAAK,CAACI,MAAN,CAAaG,KAA3B;AACA,QAAIC,IAAI,GAAGlB,IAAI,CAACgB,KAAD,CAAJ,CAAYG,IAAvB;AACA,QAAIC,WAAJ,CAN2B,CAQ3B;;AACA,QAAMC,IAAI,GAAGT,WAAW,CAACU,OAAZ,CAAoB,IAApB,CAAb;;AACA,QAAID,IAAI,IAAI,CAAC,CAAb,EAAgB;AACdD,MAAAA,WAAW,GAAGpB,IAAI,CAACqB,IAAD,CAAJ,CAAWE,EAAzB;AACAZ,MAAAA,KAAK,IAAIX,IAAI,CAACqB,IAAD,CAAJ,CAAWG,KAApB;AACAZ,MAAAA,WAAW,CAACS,IAAD,CAAX,GAAoB,KAApB;AACD,KAd0B,CAgB3B;;;AACAT,IAAAA,WAAW,CAACI,KAAD,CAAX,GAAqB,IAArB;AACAL,IAAAA,KAAK,IAAIX,IAAI,CAACgB,KAAD,CAAJ,CAAYQ,KAArB;AAEAjB,IAAAA,WAAW,CAACK,WAAD,CAAX;AACAV,IAAAA,QAAQ,CAACW,QAAD,EAAWO,WAAX,EAAwBT,KAAxB,EAA+BX,IAAI,CAACgB,KAAD,CAAnC,EAA4Cf,IAA5C,CAAR;AACD;;AAED,sBACE;AAAA,cACKD,IAAI,CAACyB,GAAL,CAAS,UAACC,GAAD,EAAMV,KAAN;AAAA,0BACR;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,EAAE,EAAEU,GAAG,CAACH,EAFV;AAGE,UAAA,IAAI,EAAEtB,IAHR;AAIE,UAAA,KAAK,EAAEe,KAJT;AAKE,UAAA,QAAQ,EAAEP;AALZ;AAAA;AAAA;AAAA;AAAA,iBADF,eASE;AACE,UAAA,SAAS,EAAC,gDADZ;AAEE,UAAA,OAAO,EAAEiB,GAAG,CAACH,EAFf;AAAA,kCAII,QAAC,YAAD;AAAc,YAAA,IAAI,EAAEG,GAAG,CAACP,IAAxB;AAA8B,YAAA,KAAK,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,mBAJJ,eAKI,QAAC,aAAD;AAAe,YAAA,KAAK,EAAEO,GAAG,CAACF;AAA1B;AAAA;AAAA;AAAA;AAAA,mBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF;AAAA,SAAUR,KAAV;AAAA;AAAA;AAAA;AAAA,eADQ;AAAA,KAAT;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAtDQjB,Y;;KAAAA,Y;AAwDT,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport MenuItemName from \"./MenuItemName\";\nimport MenuItemPrice from \"./MenuItemPrice\";\nimport utility from \"../styles/utility.module.css\";\n\nfunction RequiredMods({ mods, type, onchange }) {\n\n\n  const [selected, setSelected] = useState(Array(mods.length).fill(false));\n  var checked = false\n\n  function handleChange(event) {\n    var price = 0;\n    var newSelected = selected;\n    const modIdAdd = event.target.id;\n    const index = event.target.value;\n    var name = mods[index].Name;\n    var modIdRemove;\n\n    //remove the unchecked value\n    const prev = newSelected.indexOf(true);\n    if (prev != -1) {\n      modIdRemove = mods[prev].ID;\n      price -= mods[prev].Price;\n      newSelected[prev] = false;\n    }\n\n    //add the checked value\n    newSelected[index] = true;\n    price += mods[index].Price;\n\n    setSelected(newSelected);\n    onchange(modIdAdd, modIdRemove, price, mods[index], type);\n  }\n\n  return (\n    <div >\n        {mods.map((mod, index) => (\n          <div key={index} >\n            <input\n              type=\"radio\"\n              id={mod.ID}\n              name={type}\n              value={index}\n              onChange={handleChange}\n            />\n\n            <label\n              className=\"d-inline-flex w-75 justify-content-between p-1\"\n              htmlFor={mod.ID} \n            >\n                <MenuItemName name={mod.Name} style={\"inlineStyle\"}/>\n                <MenuItemPrice price={mod.Price} />\n            </label>\n          </div>\n        ))}\n   \n    </div>\n  );\n}\n\nexport default RequiredMods;\n\n\n"]},"metadata":{},"sourceType":"module"}