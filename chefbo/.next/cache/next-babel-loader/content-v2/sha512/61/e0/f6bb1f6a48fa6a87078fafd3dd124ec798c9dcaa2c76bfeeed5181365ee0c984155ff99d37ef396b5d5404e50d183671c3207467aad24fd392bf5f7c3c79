{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/items/[id].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport OptionalMods from \"../../../components/OptionalMods\";\nimport RequiredMods from \"../../../components/RequiredMods\";\nimport Link from \"next/link\";\nimport { Button, Card, ListGroup, ListGroupitem } from \"react-bootstrap\";\nimport utility from \"../../../styles/utility.module.css\";\nimport MenuItemDes from \"../../../components/MenuItemDes\";\nimport MenuItemName from \"../../../components/MenuItemName\";\nimport MenuItemPrice from \"../../../components/MenuItemPrice\";\nimport { addToCart } from \"../../../state/Actions\";\nimport store from \"../../../state/GlobalState\"; //set state\n//use effect upon individual price change\n//no need to use global state \n//item for state needs to include item subtotal price\n\nvar itemDetail = function itemDetail(_ref) {\n  _s();\n\n  var item = _ref.item;\n  console.log(item.detail[0]);\n  var Price = item.detail[0].Price;\n  console.log(price);\n  var priceInit = price;\n\n  var _useState = useState(priceInit),\n      itemTotal = _useState[0],\n      setItemTotal = _useState[1];\n\n  var _useState2 = useState([]),\n      selectedMods = _useState2[0],\n      setSelectedMods = _useState2[1];\n\n  var handleModChange = function handleModChange(modIdAdd, modIdRemove, price) {\n    console.log(\"id onclick\");\n    var removeIndex;\n    var selectedModsTemp = selectedMods;\n\n    if (modIdRemove) {\n      removeIndex = selectedModsTemp.indexOf(modIdRemove.toString());\n      console.log(removeIndex);\n      selectedModsTemp.splice(removeIndex, 1);\n    }\n\n    if (modIdAdd) {\n      selectedModsTemp.push(modIdAdd);\n    }\n\n    setSelectedMods(selectedModsTemp);\n    setItemTotal(price + itemTotal);\n  };\n\n  var handleAddToCart = function handleAddToCart() {\n    //check if user makes a required selection\n    //add item with required selections and optional selections \n    var sendItem = {\n      id: item.item[0],\n      mods: selectedMods\n    };\n\n    var _store$getState = store.getState(),\n        cart = _store$getState.cart;\n\n    store.dispatch(addToCart(sendItem, cart));\n    console.log(\" cart in add to cart button on id.js\", cart);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-2 px-3 col col-md-8 col-lg-6  m-auto justify-content-center\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(itemDetail, \"M58CW2jzxKpbrwDIIH/69lNL18k=\");\n\nexport var __N_SSP = true;\nexport default itemDetail;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/items/[id].js"],"names":["React","useState","useContext","OptionalMods","RequiredMods","Link","Button","Card","ListGroup","ListGroupitem","utility","MenuItemDes","MenuItemName","MenuItemPrice","addToCart","store","itemDetail","item","console","log","detail","Price","price","priceInit","itemTotal","setItemTotal","selectedMods","setSelectedMods","handleModChange","modIdAdd","modIdRemove","removeIndex","selectedModsTemp","indexOf","toString","splice","push","handleAddToCart","sendItem","id","mods","getState","cart","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,aAAlC,QAAuD,iBAAvD;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAQC,KAAR,MAAoB,4BAApB,C,CAEA;AACA;AACA;AACA;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAG7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAL,CAAY,CAAZ,CAAZ;AAH6B,MAItBC,KAJsB,GAIbJ,IAAI,CAACG,MAAL,CAAY,CAAZ,CAJa,CAItBC,KAJsB;AAK7BH,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAEF,MAAMC,SAAS,GAAGD,KAAlB;;AAP+B,kBAQGrB,QAAQ,CAACsB,SAAD,CARX;AAAA,MAQxBC,SARwB;AAAA,MAQbC,YARa;;AAAA,mBASSxB,QAAQ,CAAC,EAAD,CATjB;AAAA,MASxByB,YATwB;AAAA,MASVC,eATU;;AAa/B,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAWC,WAAX,EAAwBR,KAAxB,EACxB;AACEJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,QAAIY,WAAJ;AACA,QAAIC,gBAAgB,GAAGN,YAAvB;;AAGA,QAAGI,WAAH,EACA;AACEC,MAAAA,WAAW,GAAGC,gBAAgB,CAACC,OAAjB,CAAyBH,WAAW,CAACI,QAAZ,EAAzB,CAAd;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYY,WAAZ;AACAC,MAAAA,gBAAgB,CAACG,MAAjB,CAAwBJ,WAAxB,EAAqC,CAArC;AACD;;AAED,QAAGF,QAAH,EACA;AACEG,MAAAA,gBAAgB,CAACI,IAAjB,CAAsBP,QAAtB;AACD;;AAEDF,IAAAA,eAAe,CAACK,gBAAD,CAAf;AACAP,IAAAA,YAAY,CAACH,KAAK,GAAGE,SAAT,CAAZ;AACD,GArBD;;AAwBF,MAAMa,eAAe,GAAG,SAAlBA,eAAkB,GACxB;AAEI;AACA;AACA,QAAMC,QAAQ,GAAG;AACbC,MAAAA,EAAE,EAAEtB,IAAI,CAACA,IAAL,CAAU,CAAV,CADS;AAEbuB,MAAAA,IAAI,EAAEd;AAFO,KAAjB;;AAJJ,0BASmBX,KAAK,CAAC0B,QAAN,EATnB;AAAA,QASWC,IATX,mBASWA,IATX;;AAWI3B,IAAAA,KAAK,CAAC4B,QAAN,CAAgB7B,SAAS,CAACwB,QAAD,EAAWI,IAAX,CAAzB;AAEAxB,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDuB,IAApD;AAEH,GAhBD;;AAkBE,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,WADF;AAyBD,CAhFD;;GAAM1B,U;;;AA+FN,eAAeA,UAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport OptionalMods from \"../../../components/OptionalMods\";\nimport RequiredMods from \"../../../components/RequiredMods\";\nimport Link from \"next/link\";\nimport { Button, Card, ListGroup, ListGroupitem } from \"react-bootstrap\";\nimport utility from \"../../../styles/utility.module.css\";\nimport MenuItemDes from \"../../../components/MenuItemDes\";\nimport MenuItemName from \"../../../components/MenuItemName\";\nimport MenuItemPrice from \"../../../components/MenuItemPrice\";\nimport { addToCart } from \"../../../state/Actions\";\nimport  store  from \"../../../state/GlobalState\";\n\n//set state\n//use effect upon individual price change\n//no need to use global state \n//item for state needs to include item subtotal price\nconst itemDetail = ({ item }) => {\n\n\n    console.log(item.detail[0])\n    const {Price} = item.detail[0]\n    console.log(price)\n\n  const priceInit = price\n  const [itemTotal, setItemTotal] = useState(priceInit);\n  const [selectedMods, setSelectedMods] = useState([])\n\n\n\n  const handleModChange = (modIdAdd, modIdRemove, price) =>\n  {\n    console.log(\"id onclick\")\n    let removeIndex;\n    let selectedModsTemp = selectedMods;\n\n\n    if(modIdRemove)\n    {\n      removeIndex = selectedModsTemp.indexOf(modIdRemove.toString())\n      console.log(removeIndex)\n      selectedModsTemp.splice(removeIndex, 1)\n    }\n\n    if(modIdAdd)\n    {\n      selectedModsTemp.push(modIdAdd)\n    }\n\n    setSelectedMods(selectedModsTemp)\n    setItemTotal(price + itemTotal);\n  }\n\n\nconst handleAddToCart = () =>\n{\n\n    //check if user makes a required selection\n    //add item with required selections and optional selections \n    const sendItem = {\n        id: item.item[0],\n        mods: selectedMods\n    }\n\n    const {cart} = store.getState();\n\n    store.dispatch((addToCart(sendItem, cart )))\n\n    console.log(\" cart in add to cart button on id.js\", cart)\n\n}\n\n  return (\n    <div className=\"p-2 px-3 col col-md-8 col-lg-6  m-auto justify-content-center\">\n      {/* <Link href=\"/routes/pickup\">\n        <i\n          className={`${utility.fontSizeMedium} far fa-arrow-circle-left `}\n        ></i>\n      </Link>\n      <div className=\"\">\n        <div className={`${utility.fontSizeMedium}`}>\n          <MenuItemName name={item.item[1]} />\n        </div>\n        <MenuItemDes des={item.item[3]} />\n        <MenuItemPrice price={item.item[2]} />\n\n        {item.reqModifiers <= 0 ? null :<RequiredMods mods={item.reqModifiers} onchange={handleModChange}/>}\n\n        {item.modifiers <= 0 ? null : <OptionalMods mods={item.modifiers} onchange={handleModChange}/>}\n      </div>\n      <div className=\" px-3 row justify-content-center\">\n        <Button variant=\"dark\" className=\"col col-md-6\" onClick={handleAddToCart}>\n          Add to Cart $ {itemTotal.toFixed(2)}\n        </Button>\n      </div> */}\n    </div>\n  );\n};\n\n\n\nexport async function getServerSideProps({ params: { id } }) {\n  const res = await fetch(`http://localhost:5001/details/${id}`);\n  const item = await res.json();\n\n\n  // server side rendering\n  return {\n    props: { item }, // will be passed to the page component as props\n  };\n}\n\nexport default itemDetail;\n"]},"metadata":{},"sourceType":"module"}