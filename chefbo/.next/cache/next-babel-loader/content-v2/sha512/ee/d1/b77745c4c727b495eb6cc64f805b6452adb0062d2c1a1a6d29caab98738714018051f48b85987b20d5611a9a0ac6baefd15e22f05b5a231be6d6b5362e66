{"ast":null,"code":"import { createContext, useReducer, useEffect, useContext } from 'react';\nimport reducers from './Reducers';\nimport { createStore } from 'redux'; //   const StoreContext = createContext();\n//   const GlobalStore = (props) => {\n//     const initialState = { \n//         cart: []\n//     };\n//     const {load, ...rest} = props;\n//     const [state, dispatch] = useReducer(reducers, initialState);    //using combine reducers alike\n//     console.log(state)\n//     console.log(dispatch)\n//     const cart = state;\n//     return(\n//         <StoreContext.Provider value={{state, dispatch}} {...rest}/> \n//     );\n// };\n// export const useStore = () => useContext(StoreContext);  //custom hook useStore\n// export default GlobalStore;\n\nconst store = createStore();","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/state/GlobalState.js"],"names":["createContext","useReducer","useEffect","useContext","reducers","createStore","store"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA2B,OAA3B,C,CAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;;AAGA,MAAMC,KAAK,GAAGD,WAAW,EAAzB","sourcesContent":["import { createContext, useReducer, useEffect, useContext } from 'react'\nimport reducers from './Reducers'\nimport { createStore} from 'redux'\n\n//   const StoreContext = createContext();\n\n\n//   const GlobalStore = (props) => {\n//     const initialState = { \n//         cart: []\n//     };\n//     const {load, ...rest} = props;\n\n//     const [state, dispatch] = useReducer(reducers, initialState);    //using combine reducers alike\n//     console.log(state)\n//     console.log(dispatch)\n//     const cart = state;\n\n\n//     return(\n//         <StoreContext.Provider value={{state, dispatch}} {...rest}/> \n//     );\n// };\n\n// export const useStore = () => useContext(StoreContext);  //custom hook useStore\n// export default GlobalStore;\n\n\nconst store = createStore()"]},"metadata":{},"sourceType":"module"}