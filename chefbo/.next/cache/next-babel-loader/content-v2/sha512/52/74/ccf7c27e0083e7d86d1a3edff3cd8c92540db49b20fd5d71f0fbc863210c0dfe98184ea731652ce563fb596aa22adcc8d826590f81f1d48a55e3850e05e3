{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/MenuItemCate.js\";\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport MenuItem from './MenuItem';\nimport { Accordion, Card } from \"react-bootstrap\"; //all the items in one category\n\nconst MenuItemCate = ({\n  cate,\n  menuItem,\n  id,\n  type\n}) => {\n  const items = menuItem[0];\n  const {\n    Category\n  } = cate;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n        as: Card.Header,\n        eventKey: id,\n        style: {\n          fontWeight: 500\n        },\n        children: Category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n        eventKey: id,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-wrap col-12 col-sm-6 mw-100\",\n            children: items.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              item: item,\n              type: type\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}; //useState/useEffect\n\n\nconst getMenuItems = async (cate) => {\n  var url;\n  var item = [];\n\n  if (cate) {\n    url = 'http://localhost:5001/' + cate;\n  }\n\n  const data = await fetch(url).then(response => response.json()).then(data => {\n    for (var i = 0; i < data.length; i++) {\n      item.push(data[i]);\n    } // console.log(item)\n\n\n    return item;\n  });\n  return data;\n};\n\nMenuItemCate.propTypes = {// cate: PropTypes.string,\n};\nexport default MenuItemCate;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/components/MenuItemCate.js"],"names":["PropTypes","useState","useEffect","MenuItem","Accordion","Card","MenuItemCate","cate","menuItem","id","type","items","Category","Header","fontWeight","map","item","index","getMenuItems","url","data","fetch","then","response","json","i","length","push","propTypes"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SACIC,SADJ,EAEIC,IAFJ,QAGS,iBAHT,C,CAME;;AACF,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA,EAAjB;AAAqBC,EAAAA;AAArB,CAAD,KAAgC;AAEjD,QAAMC,KAAK,GAAGH,QAAQ,CAAC,CAAD,CAAtB;AAEA,QAAM;AAACI,IAAAA;AAAD,MAAaL,IAAnB;AAEA,sBACI;AAAA,2BAEI,QAAC,IAAD;AAAA,8BACI,QAAC,SAAD,CAAW,MAAX;AAAkB,QAAA,EAAE,EAAEF,IAAI,CAACQ,MAA3B;AAAmC,QAAA,QAAQ,EAAEJ,EAA7C;AAAiD,QAAA,KAAK,EAAE;AAACK,UAAAA,UAAU,EAAC;AAAZ,SAAxD;AAAA,kBACCF;AADD;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,SAAD,CAAW,QAAX;AAAoB,QAAA,QAAQ,EAAEH,EAA9B;AAAA,+BACA,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,yCAAf;AAAA,sBAEIE,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAEN,QAAC,QAAD;AAAsB,cAAA,IAAI,EAAED,IAA5B;AAAkC,cAAA,IAAI,EAAEN;AAAxC,eAAeO,KAAf;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AA2BH,CAjCD,C,CAmCA;;;AAEA,MAAMC,YAAY,GAAG,OAAOX,IAAP,KACrB;AACI,MAAIY,GAAJ;AACA,MAAIH,IAAI,GAAG,EAAX;;AAEA,MAAGT,IAAH,EACA;AACIY,IAAAA,GAAG,GAAG,2BAA2BZ,IAAjC;AACH;;AACA,QAAMa,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAL,CACnBG,IADmB,CACdC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADE,EAEnBF,IAFmB,CAEdF,IAAI,IAAI;AACV,SAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGL,IAAI,CAACM,MAAxB,EAAgCD,CAAC,EAAjC,EACA;AACIT,MAAAA,IAAI,CAACW,IAAL,CAAUP,IAAI,CAACK,CAAD,CAAd;AACH,KAJS,CAKV;;;AACA,WAAOT,IAAP;AAEH,GAVmB,CAAnB;AAYD,SAAOI,IAAP;AAGH,CAxBD;;AA2BAd,YAAY,CAACsB,SAAb,GAAyB,CACrB;AADqB,CAAzB;AAIA,eAAetB,YAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react'\nimport MenuItem from './MenuItem'\nimport {\n    Accordion,\n    Card\n  } from \"react-bootstrap\";\n\n\n  //all the items in one category\nconst MenuItemCate = ({cate, menuItem, id, type}) => {\n    \n    const items = menuItem[0]\n\n    const {Category} = cate\n\n    return  (\n        <>  \n        \n            <Card>\n                <Accordion.Toggle as={Card.Header} eventKey={id} style={{fontWeight:500}}>\n                {Category}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={id}>\n                <Card.Body>\n                    <div className=\"d-flex flex-wrap col-12 col-sm-6 mw-100\">\n                    {\n                        items.map((item, index) =>\n                        (\n                            <MenuItem key={index} item={item} type={type}/>\n                        ))\n                    }\n                    </div>\n\n                </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n                     \n     \n            \n        </>\n    )\n    \n}\n\n//useState/useEffect\n\nconst getMenuItems = async (cate) =>\n{\n    var url;\n    var item = []\n\n    if(cate)\n    {\n        url = 'http://localhost:5001/' + cate\n    }\n     const data = await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n        for(var i = 0; i < data.length; i++)\n        {\n            item.push(data[i])\n        }\n        // console.log(item)\n        return item;\n\n    })\n\n    return data;\n\n\n};\n\n\nMenuItemCate.propTypes = {\n    // cate: PropTypes.string,\n}\n\nexport default MenuItemCate\n"]},"metadata":{},"sourceType":"module"}