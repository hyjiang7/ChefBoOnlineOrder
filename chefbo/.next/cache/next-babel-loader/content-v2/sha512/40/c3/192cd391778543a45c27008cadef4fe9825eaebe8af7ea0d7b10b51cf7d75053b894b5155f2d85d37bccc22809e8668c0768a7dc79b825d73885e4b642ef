{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/items/[id].js\";\nimport React, { useState, useContext } from \"react\";\nimport OptionalMods from \"../../../components/OptionalMods\";\nimport RequiredMods from \"../../../components/RequiredMods\";\nimport Link from \"next/link\";\nimport { Button, Card, ListGroup, ListGroupitem } from \"react-bootstrap\";\nimport utility from \"../../../styles/utility.module.css\";\nimport MenuItemDes from \"../../../components/MenuItemDes\";\nimport MenuItemName from \"../../../components/MenuItemName\";\nimport MenuItemPrice from \"../../../components/MenuItemPrice\";\nimport { addToCart } from \"../../../state/Actions\";\nimport store from \"../../../state/GlobalState\"; //set state\n//use effect upon individual price change\n//no need to use global state \n//item for state needs to include item subtotal price\n\nconst itemDetail = ({\n  item\n}) => {\n  const {\n    price\n  } = item.detail;\n  console.log(price);\n  const priceInit = price;\n  const {\n    0: itemTotal,\n    1: setItemTotal\n  } = useState(priceInit);\n  const {\n    0: selectedMods,\n    1: setSelectedMods\n  } = useState([]);\n\n  const handleModChange = (modIdAdd, modIdRemove, price) => {\n    console.log(\"id onclick\");\n    let removeIndex;\n    let selectedModsTemp = selectedMods;\n\n    if (modIdRemove) {\n      removeIndex = selectedModsTemp.indexOf(modIdRemove.toString());\n      console.log(removeIndex);\n      selectedModsTemp.splice(removeIndex, 1);\n    }\n\n    if (modIdAdd) {\n      selectedModsTemp.push(modIdAdd);\n    }\n\n    setSelectedMods(selectedModsTemp);\n    setItemTotal(price + itemTotal);\n  };\n\n  const handleAddToCart = () => {\n    //check if user makes a required selection\n    //add item with required selections and optional selections \n    const sendItem = {\n      id: item.item[0],\n      mods: selectedMods\n    };\n    const {\n      cart\n    } = store.getState();\n    store.dispatch(addToCart(sendItem, cart));\n    console.log(\" cart in add to cart button on id.js\", cart);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-2 px-3 col col-md-8 col-lg-6  m-auto justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/routes/pickup\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `${utility.fontSizeMedium} far fa-arrow-circle-left `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${utility.fontSizeMedium}`,\n        children: /*#__PURE__*/_jsxDEV(MenuItemName, {\n          name: item.item[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItemDes, {\n        des: item.item[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItemPrice, {\n        price: item.item[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), item.reqModifiers <= 0 ? null : /*#__PURE__*/_jsxDEV(RequiredMods, {\n        mods: item.reqModifiers,\n        onchange: handleModChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }, this), item.modifiers <= 0 ? null : /*#__PURE__*/_jsxDEV(OptionalMods, {\n        mods: item.modifiers,\n        onchange: handleModChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" px-3 row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        className: \"col col-md-6\",\n        onClick: handleAddToCart,\n        children: [\"Add to Cart $ \", itemTotal.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getServerSideProps({\n  params: {\n    id\n  }\n}) {\n  const res = await fetch(`http://localhost:5001/details/${id}`);\n  const item = await res.json(); // server side rendering\n\n  return {\n    props: {\n      item\n    } // will be passed to the page component as props\n\n  };\n}\nexport default itemDetail;","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/pages/routes/items/[id].js"],"names":["React","useState","useContext","OptionalMods","RequiredMods","Link","Button","Card","ListGroup","ListGroupitem","utility","MenuItemDes","MenuItemName","MenuItemPrice","addToCart","store","itemDetail","item","price","detail","console","log","priceInit","itemTotal","setItemTotal","selectedMods","setSelectedMods","handleModChange","modIdAdd","modIdRemove","removeIndex","selectedModsTemp","indexOf","toString","splice","push","handleAddToCart","sendItem","id","mods","cart","getState","dispatch","fontSizeMedium","reqModifiers","modifiers","toFixed","getServerSideProps","params","res","fetch","json","props"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport OptionalMods from \"../../../components/OptionalMods\";\nimport RequiredMods from \"../../../components/RequiredMods\";\nimport Link from \"next/link\";\nimport { Button, Card, ListGroup, ListGroupitem } from \"react-bootstrap\";\nimport utility from \"../../../styles/utility.module.css\";\nimport MenuItemDes from \"../../../components/MenuItemDes\";\nimport MenuItemName from \"../../../components/MenuItemName\";\nimport MenuItemPrice from \"../../../components/MenuItemPrice\";\nimport { addToCart } from \"../../../state/Actions\";\nimport  store  from \"../../../state/GlobalState\";\n\n//set state\n//use effect upon individual price change\n//no need to use global state \n//item for state needs to include item subtotal price\nconst itemDetail = ({ item }) => {\n\n\n    const {price} = item.detail\n    console.log(price)\n\n  const priceInit = price\n  const [itemTotal, setItemTotal] = useState(priceInit);\n  const [selectedMods, setSelectedMods] = useState([])\n\n\n\n  const handleModChange = (modIdAdd, modIdRemove, price) =>\n  {\n    console.log(\"id onclick\")\n    let removeIndex;\n    let selectedModsTemp = selectedMods;\n\n\n    if(modIdRemove)\n    {\n      removeIndex = selectedModsTemp.indexOf(modIdRemove.toString())\n      console.log(removeIndex)\n      selectedModsTemp.splice(removeIndex, 1)\n    }\n\n    if(modIdAdd)\n    {\n      selectedModsTemp.push(modIdAdd)\n    }\n\n    setSelectedMods(selectedModsTemp)\n    setItemTotal(price + itemTotal);\n  }\n\n\nconst handleAddToCart = () =>\n{\n\n    //check if user makes a required selection\n    //add item with required selections and optional selections \n    const sendItem = {\n        id: item.item[0],\n        mods: selectedMods\n    }\n\n    const {cart} = store.getState();\n\n    store.dispatch((addToCart(sendItem, cart )))\n\n    console.log(\" cart in add to cart button on id.js\", cart)\n\n}\n\n  return (\n    <div className=\"p-2 px-3 col col-md-8 col-lg-6  m-auto justify-content-center\">\n      <Link href=\"/routes/pickup\">\n        <i\n          className={`${utility.fontSizeMedium} far fa-arrow-circle-left `}\n        ></i>\n      </Link>\n      <div className=\"\">\n        <div className={`${utility.fontSizeMedium}`}>\n          <MenuItemName name={item.item[1]} />\n        </div>\n        <MenuItemDes des={item.item[3]} />\n        <MenuItemPrice price={item.item[2]} />\n\n        {item.reqModifiers <= 0 ? null :<RequiredMods mods={item.reqModifiers} onchange={handleModChange}/>}\n\n        {item.modifiers <= 0 ? null : <OptionalMods mods={item.modifiers} onchange={handleModChange}/>}\n      </div>\n      <div className=\" px-3 row justify-content-center\">\n        <Button variant=\"dark\" className=\"col col-md-6\" onClick={handleAddToCart}>\n          Add to Cart $ {itemTotal.toFixed(2)}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\n\n\nexport async function getServerSideProps({ params: { id } }) {\n  const res = await fetch(`http://localhost:5001/details/${id}`);\n  const item = await res.json();\n\n\n  // server side rendering\n  return {\n    props: { item }, // will be passed to the page component as props\n  };\n}\n\nexport default itemDetail;\n"]},"metadata":{},"sourceType":"module"}