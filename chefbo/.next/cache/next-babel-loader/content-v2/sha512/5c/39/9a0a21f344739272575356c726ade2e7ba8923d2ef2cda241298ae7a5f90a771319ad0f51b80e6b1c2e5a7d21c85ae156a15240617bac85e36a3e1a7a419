{"ast":null,"code":"import _defineProperty from \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/state/GlobalState.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createContext, useReducer, useEffect, useContext } from 'react';\nimport reducers from './Reducers';\nvar StoreContext = /*#__PURE__*/createContext();\n\nvar GlobalStore = function GlobalStore(props) {\n  _s();\n\n  var initialState = {\n    cart: []\n  };\n\n  var load = props.load,\n      rest = _objectWithoutProperties(props, [\"load\"]);\n\n  var _useReducer = useReducer(reducers, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; //using combine reducers alike\n\n\n  console.log(state);\n  console.log(dispatch);\n  var cart = state;\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, _objectSpread({\n    value: {\n      state: state,\n      dispatch: dispatch\n    }\n  }, rest), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(GlobalStore, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalStore;\nexport var useStore = function useStore() {\n  _s2();\n\n  return useContext(StoreContext);\n}; //custom hook useStore\n\n_s2(useStore, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default GlobalStore;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalStore\");","map":{"version":3,"sources":["/Users/helenjiang/Desktop/ChefBoOnline/ChefBoOnlineOrder/chefbo/state/GlobalState.js"],"names":["createContext","useReducer","useEffect","useContext","reducers","StoreContext","GlobalStore","props","initialState","cart","load","rest","state","dispatch","console","log","useStore"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGE,IAAMC,YAAY,gBAAGL,aAAa,EAAlC;;AAGA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA;;AAC7B,MAAMC,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAE;AADW,GAArB;;AAD6B,MAItBC,IAJsB,GAILH,KAJK,CAItBG,IAJsB;AAAA,MAIbC,IAJa,4BAILJ,KAJK;;AAAA,oBAMHN,UAAU,CAACG,QAAD,EAAWI,YAAX,CANP;AAAA,MAMtBI,KANsB;AAAA,MAMfC,QANe,mBAMoC;;;AACjEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,MAAMJ,IAAI,GAAGG,KAAb;AAGA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACA,MAAAA,KAAK,EAALA,KAAD;AAAQC,MAAAA,QAAQ,EAARA;AAAR;AAA9B,KAAqDF,IAArD;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH,CAfC;;GAAML,W;;KAAAA,W;AAiBR,OAAO,IAAMU,QAAQ,GAAG,SAAXA,QAAW;AAAA;;AAAA,SAAMb,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAjB,C,CAAkD;;IAA5CW,Q;;AACb,eAAeV,WAAf","sourcesContent":["import { createContext, useReducer, useEffect, useContext } from 'react'\nimport reducers from './Reducers'\n\n\n  const StoreContext = createContext();\n\n\n  const GlobalStore = (props) => {\n    const initialState = { \n        cart: []\n    };\n    const {load, ...rest} = props;\n\n    const [state, dispatch] = useReducer(reducers, initialState);    //using combine reducers alike\n    console.log(state)\n    console.log(dispatch)\n    const cart = state;\n\n\n    return(\n        <StoreContext.Provider value={{state, dispatch}} {...rest}/> \n    );\n};\n\nexport const useStore = () => useContext(StoreContext);  //custom hook useStore\nexport default GlobalStore;"]},"metadata":{},"sourceType":"module"}